"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[88],{43788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"api-reference/aggregation-layers/contour-layer","title":"ContourLayer","description":"The ContourLayer aggregates data into iso-lines or iso-bands for a given threshold and cell size. Isoline represents collection of line segments that separate the area above and below a given threshold. Isoband represents a collection of polygons (filled) that fill the area containing values in a given threshold range. To generate an Isoline single threshold value is needed, to generate an Isoband an array with two values needed. Data is first aggregated using given cell size and resulting scalar field is used to run Marching Squares algorithm that generates a set of vertices to form Isolines or Isobands. In below documentation Isoline and Isoband is referred as contour.","source":"@site/../docs/api-reference/aggregation-layers/contour-layer.md","sourceDirName":"api-reference/aggregation-layers","slug":"/api-reference/aggregation-layers/contour-layer","permalink":"/docs/api-reference/aggregation-layers/contour-layer","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/aggregation-layers/contour-layer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ColumnLayer","permalink":"/docs/api-reference/layers/column-layer"},"next":{"title":"GeohashLayer","permalink":"/docs/api-reference/geo-layers/geohash-layer"}}');var s=n(74848),o=n(28453),r=n(39488),a=n(11470),l=n(19365);const c={},d="ContourLayer",h={},u=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Aggregation Options",id:"aggregation-options",level:3},{value:"<code>cellSize</code> (number, optional) transition-enabled",id:"cellsize",level:4},{value:"<code>gpuAggregation</code> (boolean, optional)",id:"gpuaggregation",level:4},{value:"<code>aggregation</code> (string, optional)",id:"aggregation",level:4},{value:"Render Options",id:"render-options",level:3},{value:"<code>contours</code> (object[], optional)",id:"contours",level:4},{value:"<code>zOffset</code> (number, optional)",id:"zoffset",level:4},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPosition</code> (Accessor&lt;Position&gt;, optional)",id:"getposition",level:4},{value:"<code>getWeight</code> (Accessor&lt;number&gt;, optional)",id:"getweight",level:4},{value:"Picking",id:"picking",level:2},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Source",id:"source",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"contourlayer",children:"ContourLayer"})}),"\n","\n",(0,s.jsx)(r.Tp,{}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ContourLayer"})," aggregates data into iso-lines or iso-bands for a given threshold and cell size. ",(0,s.jsx)(t.code,{children:"Isoline"})," represents collection of line segments that separate the area above and below a given threshold. ",(0,s.jsx)(t.code,{children:"Isoband"})," represents a collection of polygons (filled) that fill the area containing values in a given threshold range. To generate an ",(0,s.jsx)(t.code,{children:"Isoline"})," single threshold value is needed, to generate an ",(0,s.jsx)(t.code,{children:"Isoband"})," an array with two values needed. Data is first aggregated using given cell size and resulting scalar field is used to run ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Marching_squares",children:"Marching Squares"})," algorithm that generates a set of vertices to form Isolines or Isobands. In below documentation ",(0,s.jsx)(t.code,{children:"Isoline"})," and ",(0,s.jsx)(t.code,{children:"Isoband"})," is referred as ",(0,s.jsx)(t.code,{children:"contour"}),"."]}),"\n","\n",(0,s.jsxs)(a.A,{groupId:"language",children:[(0,s.jsx)(l.A,{value:"js",label:"JavaScript",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import {Deck} from '@deck.gl/core';\nimport {ContourLayer} from '@deck.gl/aggregation-layers';\n\nconst layer = new ContourLayer({\n  id: 'ContourLayer',\n  data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n  cellSize: 200,\n  contours: [\n    {threshold: 1, color: [255, 0, 0], strokeWidth: 2, zIndex: 1},\n    {threshold: [3, 10], color: [55, 0, 55], zIndex: 0},\n    {threshold: 5, color: [0, 255, 0], strokeWidth: 6, zIndex: 2},\n    {threshold: 15, color: [0, 0, 255], strokeWidth: 4, zIndex: 3}\n  ],\n  getPosition: d => d.COORDINATES,\n  getWeight: d => d.SPACES,\n  pickable: true\n});\n\nnew Deck({\n  initialViewState: {\n    longitude: -122.4,\n    latitude: 37.74,\n    zoom: 11\n  },\n  controller: true,\n  getTooltip: ({object}) => object && `threshold: ${object.contour.threshold}`,\n  layers: [layer]\n});\n"})})}),(0,s.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import {Deck, PickingInfo} from '@deck.gl/core';\nimport {ContourLayer} from '@deck.gl/aggregation-layers';\n\ntype BikeRack = {\n  ADDRESS: string;\n  SPACES: number;\n  COORDINATES: [longitude: number, latitude: number];\n};\n\nconst layer = new ContourLayer<BikeRack>({\n  id: 'ContourLayer',\n  data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n  cellSize: 200,\n  contours: [\n    {threshold: 1, color: [255, 0, 0], strokeWidth: 2, zIndex: 1},\n    {threshold: [3, 10], color: [55, 0, 55], zIndex: 0},\n    {threshold: 5, color: [0, 255, 0], strokeWidth: 6, zIndex: 2},\n    {threshold: 15, color: [0, 0, 255], strokeWidth: 4, zIndex: 3}\n  ],\n  getPosition: (d: BikeRack) => d.COORDINATES,\n  getWeight: (d: BikeRack) => d.SPACES,\n  pickable: true\n});\n\nnew Deck({\n  initialViewState: {\n    longitude: -122.4,\n    latitude: 37.74,\n    zoom: 11\n  },\n  controller: true,\n  getTooltip: ({object}: PickingInfo<BikeRack>) => object && `threshold: ${object.contour.threshold}`,\n  layers: [layer]\n});\n"})})}),(0,s.jsx)(l.A,{value:"react",label:"React",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {ContourLayer} from '@deck.gl/aggregation-layers';\nimport type {PickingInfo} from '@deck.gl/core';\n\ntype BikeRack = {\n  ADDRESS: string;\n  SPACES: number;\n  COORDINATES: [longitude: number, latitude: number];\n};\n\nfunction App() {\n  const layer = new ContourLayer<BikeRack>({\n    id: 'ContourLayer',\n    data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n    cellSize: 200,\n    contours: [\n      {threshold: 1, color: [255, 0, 0], strokeWidth: 2, zIndex: 1},\n      {threshold: [3, 10], color: [55, 0, 55], zIndex: 0},\n      {threshold: 5, color: [0, 255, 0], strokeWidth: 6, zIndex: 2},\n      {threshold: 15, color: [0, 0, 255], strokeWidth: 4, zIndex: 3}\n    ],\n    getPosition: (d: BikeRack) => d.COORDINATES,\n    getWeight: (d: BikeRack) => d.SPACES,\n    pickable: true\n  });\n\n  return <DeckGL\n    initialViewState={{\n      longitude: -122.4,\n      latitude: 37.74,\n      zoom: 11\n    }}\n    controller\n    getTooltip={({object}: PickingInfo<BikeRack>) => object && `threshold: ${object.contour.threshold}`}\n    layers={[layer]}\n  />;\n}\n"})})})]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(t.p,{children:"To install the dependencies from NPM:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/aggregation-layers\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import {ContourLayer} from '@deck.gl/aggregation-layers';\nimport type {ContourLayerProps, ContourLayerPickingInfo} from '@deck.gl/aggregation-layers';\n\nnew ContourLayer<DataT>(...props: ContourLayerProps<DataT>[]);\n"})}),"\n",(0,s.jsx)(t.p,{children:"To use pre-bundled scripts:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<script src="https://unpkg.com/deck.gl@^9.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/aggregation-layers@^9.0.0/dist.min.js"><\/script>\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"new deck.ContourLayer({});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.p,{children:["Inherits from all ",(0,s.jsx)(t.a,{href:"/docs/api-reference/core/layer",children:"Base Layer"})," properties."]}),"\n",(0,s.jsx)(t.h3,{id:"aggregation-options",children:"Aggregation Options"}),"\n",(0,s.jsxs)(t.h4,{id:"cellsize",children:[(0,s.jsx)(t.code,{children:"cellSize"})," (number, optional) ",(0,s.jsx)(t.img,{src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"1000"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Size of each cell in meters"}),"\n",(0,s.jsxs)(t.h4,{id:"gpuaggregation",children:[(0,s.jsx)(t.code,{children:"gpuAggregation"})," (boolean, optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Default: true"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["When set to ",(0,s.jsx)(t.code,{children:"true"})," and the browser supports it, aggregation is performed on GPU."]}),"\n",(0,s.jsxs)(t.p,{children:["In the right context, enabling GPU aggregation can significantly speed up your application. However, depending on the nature of input data and required application features, there are pros and cons in leveraging this functionality. See ",(0,s.jsx)(t.a,{href:"/docs/api-reference/aggregation-layers/overview#cpu-vs-gpu-aggregation",children:"CPU vs GPU aggregation"})," for an in-depth discussion."]}),"\n",(0,s.jsxs)(t.h4,{id:"aggregation",children:[(0,s.jsx)(t.code,{children:"aggregation"})," (string, optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"'SUM'"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Defines the operation used to aggregate all data object weights to calculate a cell's value. Valid values are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"'SUM'"}),": The sum of weights across all points that fall into a cell."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"'MEAN'"}),": The mean weight across all points that fall into a cell."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"'MIN'"}),": The minimum weight across all points that fall into a cell."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"'MAX'"}),": The maximum weight across all points that fall into a cell."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"'COUNT'"}),": The number of points that fall into a cell."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"getWeight"})," and ",(0,s.jsx)(t.code,{children:"aggregation"})," together determine the elevation value of each cell."]}),"\n",(0,s.jsx)(t.h3,{id:"render-options",children:"Render Options"}),"\n",(0,s.jsxs)(t.h4,{id:"contours",children:[(0,s.jsx)(t.code,{children:"contours"})," (object[], optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"[{threshold: 1}]"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Array of objects with following keys"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"threshold"})," (number | number[2]) :"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Isolines: ",(0,s.jsx)(t.code,{children:"threshold"})," value must be a single number, Isolines are generated based on this threshold value."]}),"\n",(0,s.jsxs)(t.li,{children:["Isobands: ",(0,s.jsx)(t.code,{children:"threshold"})," value must be an array of two numbers. Isobands are generated using ",(0,s.jsx)(t.code,{children:"[threshold[0], threshold[1])"})," as threshold range, i.e area that has values ",(0,s.jsx)(t.code,{children:">= threshold[0]"})," and ",(0,s.jsx)(t.code,{children:"< threshold[1]"})," are rendered with corresponding color. NOTE: ",(0,s.jsx)(t.code,{children:"threshold[0]"})," is inclusive and ",(0,s.jsx)(t.code,{children:"threshold[1]"})," is not inclusive."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"color"})," (Color, optional) : RGBA color array to be used to render the contour, if not specified a default value of ",(0,s.jsx)(t.code,{children:"[255, 255, 255, 255]"})," is used. When a three component RGB array specified, a default value of 255 is used for Alpha."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"strokeWidth"})," (number, optional) : Applicable for ",(0,s.jsx)(t.code,{children:"Isoline"}),"s only, width of the Isoline in pixels, if not specified a default value of ",(0,s.jsx)(t.code,{children:"1"})," is used."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"zIndex"})," (number, optional) : Defines z order of the contour. Contour with higher ",(0,s.jsx)(t.code,{children:"zIndex"})," value is rendered above contours with lower ",(0,s.jsx)(t.code,{children:"zIndex"})," values. When visualizing overlapping contours, ",(0,s.jsx)(t.code,{children:"zIndex"})," along with ",(0,s.jsx)(t.code,{children:"zOffset"})," (defined below) can be used to precisely layout contours. This also avoids z-fighting rendering issues. If not specified a unique value from ",(0,s.jsx)(t.code,{children:"0"})," to ",(0,s.jsx)(t.code,{children:"n"})," (number of contours) is assigned."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["NOTE: Like any other layer prop, a shallow comparison is performed on ",(0,s.jsx)(t.code,{children:"contours"})," prop to determine if it is changed. This prop should be set to an array object, that changes only when contours need to be changed."]}),"\n",(0,s.jsxs)(t.h4,{id:"zoffset",children:[(0,s.jsx)(t.code,{children:"zOffset"})," (number, optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"0.005"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"A very small z offset that is added for each vertex of a contour (Isoline or Isoband). This is needed to control the layout of contours, especially when rendering overlapping contours. Imagine a case where an Isoline is specified which is overlapped with an Isoband. To make sure the Isoline is visible we need to render this above the Isoband."}),"\n",(0,s.jsx)(t.h3,{id:"data-accessors",children:"Data Accessors"}),"\n",(0,s.jsxs)(t.h4,{id:"getposition",children:[(0,s.jsx)(t.code,{children:"getPosition"})," (",(0,s.jsx)(t.a,{href:"/docs/developer-guide/using-layers#accessors",children:"Accessor<Position>"}),", optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"object => object.position"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Method called to retrieve the position of each object."}),"\n",(0,s.jsxs)(t.h4,{id:"getweight",children:[(0,s.jsx)(t.code,{children:"getWeight"})," (",(0,s.jsx)(t.a,{href:"/docs/developer-guide/using-layers#accessors",children:"Accessor<number>"}),", optional)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Default: ",(0,s.jsx)(t.code,{children:"1"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The weight of each object."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"If a number is provided, it is used as the weight for all objects."}),"\n",(0,s.jsx)(t.li,{children:"If a function is provided, it is called on each object to retrieve its weight."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"picking",children:"Picking"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"/docs/developer-guide/interactivity#the-pickinginfo-object",children:"PickingInfo.object"})," field returned by hover/click events of this layer represents a path (isoline) or a polygon (isoband). The object contains the following fields:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"contour"})," (object) - one of the contour configurations passed to the ",(0,s.jsx)(t.code,{children:"contours"})," prop."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"sub-layers",children:"Sub Layers"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ContourLayer"})," renders the following sublayers:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"lines"})," - For Isolines, rendered by ",(0,s.jsx)(t.a,{href:"/docs/api-reference/layers/path-layer",children:"PathLayer"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"bands"})," - For Isobands, rendered by ",(0,s.jsx)(t.a,{href:"/docs/api-reference/layers/solid-polygon-layer",children:"SolidPolygonLayer"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/visgl/deck.gl/tree/9.1-release/modules/aggregation-layers/src/contour-layer",children:"modules/aggregation-layers/src/contour-layer"})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11175:(e,t,n)=>{n.d(t,{Ut:()=>s,Vi:()=>i,lP:()=>o});const i={LIGHT:"https://deck.gl/mapstyle/deck-light.json",LIGHT_LABEL:"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json",DARK:"https://deck.gl/mapstyle/deck-dark.json",BLANK:{version:8,sources:{},layers:[]}},s="https://raw.githubusercontent.com/visgl/deck.gl-data/master/website",o="https://github.com/visgl/deck.gl/tree/9.1-release"},39488:(e,t,n)=>{n.d(t,{BI:()=>u,Nt:()=>f,Tp:()=>d,jV:()=>g,lX:()=>p});var i=n(74759),s=n(99550),o=n(77075),r=n(44274),a=n(69703),l=n(4548),c=n(11175);const d=(0,l.j)({Layer:i.A,getTooltip:"({object}) => object && `threshold: ${object.contour.threshold}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    cellSize: 200,\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES,\n    contours: [\n      {threshold: 1, color: [255, 0, 0], strokeWidth: 2, zIndex: 1},\n      {threshold: [3, 10], color: [55, 0, 55], zIndex: 0},\n      {threshold: 5, color: [0, 255, 0], strokeWidth: 6, zIndex: 2},\n      {threshold: 15, color: [0, 0, 255], strokeWidth: 4, zIndex: 3}\n    ]\n  }"}),h={getTooltip:"({object}) => object && `Count: ${object.elevationValue}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    extruded: true,\n    cellSize: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    getColorWeight: d => d.SPACES,\n    getElevationWeight: d => d.SPACES\n  }"},u=(0,l.j)(Object.assign({Layer:s.A},h)),p=(0,l.j)({Layer:o.A,getTooltip:"({object}) => object && `Count: ${object.elevationValue}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    getColorWeight: d => d.SPACES,\n    getElevationWeight: d => d.SPACES\n  }"}),g=(0,l.j)({Layer:r.A,props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    opacity: 0.8,\n    cellSizePixels: 50,\n    colorRange: [\n      [0, 25, 0, 25],\n      [0, 85, 0, 85],\n      [0, 127, 0, 127],\n      [0, 170, 0, 170],\n      [0, 190, 0, 190],\n      [0, 255, 0, 255]\n    ],\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES\n  }"}),f=(0,l.j)({Layer:a.A,props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES,\n    radiusPixels: 25\n  }"})},89323:(e,t,n)=>{n.d(t,{i:()=>c});const i=["dataComparator","fetch"],s=["autoHighlight","coordinateOrigin","coordinateSystem","highlightColor","modelMatrix","opacity","pickable","visible","wrapLongitude"],o={loaders:[],coordinateSystem:"COORDINATE_SYSTEM.LNGLAT",renderSubLayers:"props => new GeoJsonLayer(props)",characterSet:'" !\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~"'};function r(e,t){if(!e.includes("\n")||0===t)return e;const n=e.split("\n");if(t>0){const e="".padStart(t," ");return n.map(((t,n)=>n>0?e+t:t)).join("\n")}return n.map(((e,n)=>n>0?e.slice(-t):e)).join("\n")}function a(e){return null==e?"null":"string"==typeof e?"'"+e+"'":"function"==typeof e?e.toString():Array.isArray(e)?"["+e.map(a).join(", ")+"]":e===Number.MAX_SAFE_INTEGER?"Number.MAX_SAFE_INTEGER":r(JSON.stringify(e,null,2),2)}function l(e,t){const n=[],l={};t=function(e){const t=e.split("\n");t.pop();const n={};let i,s=1/0;for(const o of t){const e=o.match(/^(\s*)(\w+):\s*(.*)/);e&&e[1].length<=s?(s=e[1].length,i=e[2],n[i]=e[3]):i&&(n[i]+="\n"+o)}for(i in n)n[i]=r(n[i].replace(/,\s*$/,""),2-s);return n}(t);let c=e.constructor,d=!1;const h=e.props[Symbol.for("asyncPropOriginal")],u=e.props[Symbol.for("asyncPropResolved")];function p(e,t,s,o){if(!l[e]&&!i.includes(e)){const i=(s?"// ":"")+e+": "+t+",";void 0===o?n.push(i):n.splice(o,0,i),l[e]=!0}}let g=1;for(p("id",a(e.id)),t.data&&p("data",t.data,!1,g++);c.layerName;){if(c.hasOwnProperty("defaultProps")){n.push("","/* props "+(d?"inherited from":"from")+" "+c.layerName+" class */","");const i=Object.keys(c.defaultProps).sort();for(const n of i){const i=c.defaultProps[n],r=!(n in h)&&!(n in u)&&!Object.hasOwnProperty.call(e.props,n);let l,d=!1;n in t?l=t[n]:(d=i&&i.deprecatedFor,d=d||n.startsWith("_"),d=d||i&&"accessor"===i.type&&"function"==typeof i.value,d=d||"Layer"===c.layerName&&!s.includes(n),l=h[n]||e.props[n],l="function"==typeof l?null:n in o?o[n]:a(l)),d||p(n,l,r)}}c=Object.getPrototypeOf(c),d=!0}for(const i in t)i in l||p(i,t[i],!1,g++);return n.join("\n  ")}function c(e,t){const{Layer:n,isExperimental:i,getTooltip:s,props:o,mapStyle:a=!0,dependencies:c=[],imports:d,initialViewState:h}=e,u=i?"_"+n.layerName:n.layerName,p=["DeckGL",u],g=[];if(d)for(const r in d)r[0]>="a"||(r.endsWith("Loader")?g.push(r):p.push(r));const f=r(JSON.stringify(h,null,2).replace(/"/g,""),2),m="const {"+p.join(", ")+"} = deck;\n"+(g.length?"const {"+g.join(", ")+"} = loaders;\n":"")+"\nconst layer = new "+u+"({\n  "+l(t,o)+"\n});\n\nnew DeckGL({\n  "+(a?"mapStyle: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',":"")+"\n  initialViewState: "+f+",\n  controller: true,\n  "+(s?"getTooltip: "+s+",":"")+"\n  layers: [layer]\n});\n  ";!function(e){let{dependencies:t=[],title:n,source:i}=e;const s={js_external:t.concat(["https://unpkg.com/deck.gl@latest/dist.min.js"]).join(";"),title:n,parent:48721472,tags:["webgl","data visualization"],editors:"001",css:"\n  body {\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n  }\n  \n  .deck-tooltip {\n    font-size: 0.8em;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n  ",js:"/*\n* "+window.location.href+"\n*/\n"+i},o=document.createElement("form");o.action="https://codepen.io/pen/define/",o.method="POST",o.style.display="none",document.body.appendChild(o);const r=document.createElement("input");r.type="text",r.name="data",r.value=JSON.stringify(s),o.appendChild(r),window.open("","deck-example-codepen"),o.target="deck-example-codepen",o.submit(),o.remove()}({dependencies:c.concat(["https://unpkg.com/maplibre-gl@3.6.0/dist/maplibre-gl.js"]),title:"deck.gl "+n.layerName,source:m})}},4548:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>makeLayerDemo});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(96540),_deck_gl_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(96864),react_map_gl_maplibre__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(29533),styled_components__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(16065),_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(95293),_constants_defaults__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(11175),_codepen_automation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(89323),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(74848);const INITIAL_VIEW_STATE={longitude:-122.4,latitude:37.74,zoom:11,maxZoom:20,pitch:30,bearing:0},TOOLTIP_STYLE={padding:"4px",background:"rgba(0, 0, 0, 0.8)",color:"#fff",maxWidth:"300px",fontSize:"10px",zIndex:9},DemoPlaceholder=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoPlaceholder",componentId:"sc-bhdrci-0"})(["height:50vh;min-height:200px;position:relative;margin-bottom:24px;@media screen and (max-width:768px){height:60vh;}"]),DemoContainer=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoContainer",componentId:"sc-bhdrci-1"})(["height:50vh;min-height:200px;position:absolute;width:100%;left:0;top:0;overflow:hidden;@media screen and (max-width:768px){height:60vh;}"]),DemoSourceLink=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoSourceLink",componentId:"sc-bhdrci-2"})(["position:absolute;top:0;right:0;padding:8px;background:var(--ifm-background-surface-color);margin:12px;box-shadow:0 2px 4px rgba(0,0,0,0.3);cursor:pointer;font-weight:bold;font-size:12px;&:hover{color:var(--ifm-color-primary);}svg{width:20px;vertical-align:middle;margin-right:4px;}"]);function evalObject(source,globals,output){return eval("(function evalObject(globals){\n    Object.assign(globalThis, globals);\n    "+(output?source+"\n      return {"+output.join(",")+"};":"return "+source+";")+"\n  })")(globals)}function makeLayerDemo(config){const{Layer:Layer,getTooltip:getTooltip,props:props,mapStyle:mapStyle=!0,initialViewState:initialViewState=INITIAL_VIEW_STATE,imports:imports}=config;config.initialViewState=initialViewState;const _getTooltip=getTooltip&&eval(getTooltip),styledGetTooltip=e=>{const t=_getTooltip&&_getTooltip(e);return t&&{text:t,style:TOOLTIP_STYLE}},layerProps=evalObject(props,imports);function Demo(){const{colorMode:e}=(0,_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_6__.G)(),t=new Layer(layerProps),n="dark"===e?_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Vi.DARK:_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Vi.LIGHT;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(DemoPlaceholder,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(DemoContainer,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deck_gl_react__WEBPACK_IMPORTED_MODULE_7__.A,{pickingRadius:5,initialViewState:initialViewState,getTooltip:styledGetTooltip,controller:!0,layers:[t],children:mapStyle&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_map_gl_maplibre__WEBPACK_IMPORTED_MODULE_1__.T5,{reuseMaps:!0,mapStyle:n})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(DemoSourceLink,{onClick:()=>(0,_codepen_automation__WEBPACK_IMPORTED_MODULE_3__.i)(config,t),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path",{d:"M0 0h24v24H0V0z",fill:"none"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path",{fill:"currentcolor",d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"})]}),"Edit on Codepen"]})]})}return react__WEBPACK_IMPORTED_MODULE_0__.memo(Demo)}},29586:(e,t,n)=>{n.d(t,{A:()=>r});var i=n(33847),s=n(1570);class o extends i.A{get isDrawable(){return!0}initializeState(){this.getAttributeManager().remove(["instancePickingColors"])}updateState(e){super.updateState(e);const t=this.getAggregatorType();if(e.changeFlags.extensionsChanged||this.state.aggregatorType!==t){var n,i;null==(n=this.state.aggregator)||n.destroy();const e=this.createAggregator(t);return e.setProps({attributes:null==(i=this.getAttributeManager())?void 0:i.attributes}),this.setState({aggregator:e,aggregatorType:t}),!0}return!1}finalizeState(e){super.finalizeState(e),this.state.aggregator.destroy()}updateAttributes(e){const{aggregator:t}=this.state;t.setProps({attributes:e});for(const n in e)this.onAttributeChange(n);t.update()}draw(e){let{shaderModuleProps:t}=e;const{aggregator:n}=this.state;n.setProps({shaderModuleProps:t}),n.preDraw()}_getAttributeManager(){return new s.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}o.layerName="AggregationLayer";const r=o},52601:(e,t,n)=>{n.d(t,{M:()=>c});var i=n(50111);const s=(e,t)=>{let n=0;for(const i of e)n+=t(i);return n},o={COUNT:e=>e.length,SUM:s,MEAN:(e,t)=>0===e.length?NaN:s(e,t)/e.length,MIN:(e,t)=>{let n=1/0;for(const i of e){const e=t(i);e<n&&(n=e)}return n},MAX:(e,t)=>{let n=-1/0;for(const i of e){const e=t(i);e>n&&(n=e)}return n}};function r(e){let{bins:t,getValue:n,operation:i,target:s}=e;(!s||s.length<t.length)&&(s=new Float32Array(t.length));let o=1/0,r=-1/0;for(let a=0;a<t.length;a++){const{points:e}=t[a];s[a]=i(e,n),s[a]<o&&(o=s[a]),s[a]>r&&(r=s[a])}return{value:s,domain:[o,r]}}function a(e,t,n){const i={};for(const o of e.sources||[]){const e=t[o];if(!e)throw new Error("Cannot find attribute "+o);i[o]=l(e)}const s={};return t=>{for(const e in i)s[e]=i[e](t);return e.getValue(s,t,n)}}function l(e){const t=e.value,{offset:n=0,stride:i,size:s}=e.getAccessor(),o=t.BYTES_PER_ELEMENT,r=n/o,a=i?i/o:s;if(1===s)return e.isConstant?()=>t[0]:e=>t[r+a*e];let l;return e.isConstant?(l=Array.from(t),()=>l):(l=new Array(s),e=>{const n=r+a*e;for(let i=0;i<s;i++)l[i]=t[n+i];return l})}class c{constructor(e){this.bins=[],this.binIds=null,this.results=[],this.dimensions=e.dimensions,this.channelCount=e.getValue.length,this.props=Object.assign({},e,{binOptions:{},pointCount:0,operations:[],customOperations:[],attributes:{}}),this.needsUpdate=!0,this.setProps(e)}destroy(){}get binCount(){return this.bins.length}setProps(e){const t=this.props;if(e.binOptions&&((0,i.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate()),e.operations)for(let n=0;n<this.channelCount;n++)e.operations[n]!==t.operations[n]&&this.setNeedsUpdate(n);if(e.customOperations)for(let n=0;n<this.channelCount;n++)Boolean(e.customOperations[n])!==Boolean(t.customOperations[n])&&this.setNeedsUpdate(n);void 0!==e.pointCount&&e.pointCount!==t.pointCount&&this.setNeedsUpdate(),e.attributes&&(e.attributes=Object.assign({},t.attributes,e.attributes)),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate=!0:!0!==this.needsUpdate&&(this.needsUpdate=this.needsUpdate||[],this.needsUpdate[e]=!0)}update(){if(!0===this.needsUpdate){var e;this.bins=function(e){let{pointCount:t,getBinId:n}=e;const i=new Map;for(let s=0;s<t;s++){const e=n(s);if(null===e)continue;let t=i.get(String(e));t?t.points.push(s):(t={id:e,index:i.size,points:[s]},i.set(String(e),t))}return Array.from(i.values())}({pointCount:this.props.pointCount,getBinId:a(this.props.getBin,this.props.attributes,this.props.binOptions)});const t=function(e){let{bins:t,dimensions:n,target:i}=e;const s=t.length*n;(!i||i.length<s)&&(i=new Float32Array(s));for(let o=0;o<t.length;o++){const{id:e}=t[o];Array.isArray(e)?i.set(e,o*n):i[o]=e}return i}({bins:this.bins,dimensions:this.dimensions,target:null==(e=this.binIds)?void 0:e.value});this.binIds={value:t,type:"float32",size:this.dimensions}}for(let s=0;s<this.channelCount;s++)if(!0===this.needsUpdate||this.needsUpdate[s]){var t,n,i;const e=this.props.customOperations[s]||o[this.props.operations[s]],{value:l,domain:c}=r({bins:this.bins,getValue:a(this.props.getValue[s],this.props.attributes,void 0),operation:e,target:null==(t=this.results[s])?void 0:t.value});this.results[s]={value:l,domain:c,type:"float32",size:1},null==(n=(i=this.props).onUpdate)||n.call(i,{channel:s})}this.needsUpdate=!1}preDraw(){}getBins(){return this.binIds}getResult(e){return this.results[e]}getResultDomain(e){var t,n;return null!=(t=null==(n=this.results[e])?void 0:n.domain)?t:[1/0,-1/0]}getBin(e){const t=this.bins[e];if(!t)return null;const n=new Array(this.channelCount);for(let i=0;i<n.length;i++){const t=this.results[i];n[i]=null==t?void 0:t.value[e]}return{id:t.id,value:n,count:t.points.length,pointIndices:t.points}}}},57149:(e,t,n)=>{n.d(t,{V:()=>m});var i=n(51771);function s(e,t,n){return e.createFramebuffer({width:t,height:n,colorAttachments:[e.createTexture({width:t,height:n,format:"rgba32float",mipmaps:!1,sampler:{minFilter:"nearest",magFilter:"nearest"}})]})}const o={name:"binSorter",vs:"uniform binSorterUniforms {\n  ivec4 binIdRange;\n  ivec2 targetSize;\n} binSorter;\n",uniformTypes:{binIdRange:"vec4<i32>",targetSize:"vec2<i32>"}},r=[1,2,4,8],a=3e38,l={SUM:0,MEAN:0,MIN:0,MAX:0,COUNT:0},c=1024;class d{constructor(e,t){this.binsFBO=null,this.device=e,this.model=function(e,t){let n=t.vs;2===t.dimensions&&(n+="\nvoid getBin(out int binId) {\n  ivec2 binId2;\n  getBin(binId2);\n  if (binId2.x < binSorter.binIdRange.x || binId2.x >= binSorter.binIdRange.y) {\n    binId = -1;\n  } else {\n    binId = (binId2.y - binSorter.binIdRange.z) * (binSorter.binIdRange.y - binSorter.binIdRange.x) + binId2.x;\n  }\n}\n");const s="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-vertex\n\n"+n+"\n\nout vec3 v_Value;\n\nvoid main() {\n  int binIndex;\n  getBin(binIndex);\n  binIndex = binIndex - binSorter.binIdRange.x;\n  if (binIndex < 0) {\n    gl_Position = vec4(0.);\n    return;\n  }\n  int row = binIndex / binSorter.targetSize.x;\n  int col = binIndex - row * binSorter.targetSize.x;\n  vec2 position = (vec2(col, row) + 0.5) / vec2(binSorter.targetSize) * 2.0 - 1.0;\n  gl_Position = vec4(position, 0.0, 1.0);\n  gl_PointSize = 1.0;\n\n#if NUM_CHANNELS == 3\n  getValue(v_Value);\n#elif NUM_CHANNELS == 2\n  getValue(v_Value.xy);\n#else\n  getValue(v_Value.x);\n#endif\n}\n",r="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-fragment\n\nprecision highp float;\n\nin vec3 v_Value;\nout vec4 fragColor;\n\nvoid main() {\n  fragColor.xyz = v_Value;\n\n  #ifdef MODULE_GEOMETRY\n  geometry.uv = vec2(0.);\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n  #endif\n\n  fragColor.w = 1.0;\n}\n",a=new i.K(e,{bufferLayout:t.bufferLayout,modules:[...t.modules||[],o],defines:Object.assign({},t.defines,{NON_INSTANCED_MODEL:1,NUM_CHANNELS:t.channelCount}),isInstanced:!1,vs:s,fs:r,topology:"point-list",disableWarnings:!0});return a}(e,t)}get texture(){return this.binsFBO?this.binsFBO.colorAttachments[0].texture:null}destroy(){var e,t;this.model.destroy(),null==(e=this.binsFBO)||e.colorAttachments[0].texture.destroy(),null==(t=this.binsFBO)||t.destroy()}getBinValues(e){if(!this.binsFBO)return null;const t=e%c,n=Math.floor(e/c),i=this.device.readPixelsToArrayWebGL(this.binsFBO,{sourceX:t,sourceY:n,sourceWidth:1,sourceHeight:1}).buffer;return new Float32Array(i)}setDimensions(e,t){var n,i;const o=c,r=Math.ceil(e/o);this.binsFBO?this.binsFBO.height<r&&this.binsFBO.resize({width:o,height:r}):this.binsFBO=s(this.device,o,r);const a={binIdRange:[t[0][0],t[0][1],(null==(n=t[1])?void 0:n[0])||0,(null==(i=t[1])?void 0:i[1])||0],targetSize:[this.binsFBO.width,this.binsFBO.height]};this.model.shaderInputs.setProps({binSorter:a})}setModelProps(e){const t=this.model;e.attributes&&t.setAttributes(e.attributes),e.constantAttributes&&t.setConstantAttributes(e.constantAttributes),void 0!==e.vertexCount&&t.setVertexCount(e.vertexCount),e.shaderModuleProps&&t.shaderInputs.setProps(e.shaderModuleProps)}update(e){if(!this.binsFBO)return;const t=function(e){const t=Object.assign({},l);for(let n=0;n<e.length;n++){const i=e[n];i&&(t[i]+=r[n])}return t}(e);this._updateBins("SUM",t.SUM+t.MEAN),this._updateBins("MIN",t.MIN),this._updateBins("MAX",t.MAX)}_updateBins(e,t){if(0===t)return;t|=r[3];const n=this.model,i=this.binsFBO,s="MAX"===e?-a:"MIN"===e?a:0,o=this.device.beginRenderPass({id:"gpu-aggregation-"+e,framebuffer:i,parameters:{viewport:[0,0,i.width,i.height],colorMask:t},clearColor:[s,s,s,0],clearDepth:!1,clearStencil:!1});n.setParameters({blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendColorOperation:"MAX"===e?"max":"MIN"===e?"min":"add",blendAlphaOperation:"add"}),n.draw(o),o.end()}}var h=n(68475);const u={name:"aggregatorTransform",vs:"uniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n",uniformTypes:{binIdRange:"vec4<i32>",isCount:"vec3<f32>",isMean:"vec3<f32>"}};class p{constructor(e,t){this.binBuffer=null,this.valueBuffer=null,this._domains=null,this.device=e,this.channelCount=t.channelCount,this.transform=function(e,t){const n="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-vertex\n\nuniform sampler2D bins;\n\n#if NUM_DIMS == 1\nout float binIds;\n#else\nout vec2 binIds;\n#endif\n\n#if NUM_CHANNELS == 1\nflat out float values;\n#elif NUM_CHANNELS == 2\nflat out vec2 values;\n#else\nflat out vec3 values;\n#endif\n\nconst float NAN = intBitsToFloat(-1);\n\nvoid main() {\n  int row = gl_VertexID / SAMPLER_WIDTH;\n  int col = gl_VertexID - row * SAMPLER_WIDTH;\n  vec4 weights = texelFetch(bins, ivec2(col, row), 0);\n  vec3 value3 = mix(\n    mix(weights.rgb, vec3(weights.a), aggregatorTransform.isCount),\n    weights.rgb / max(weights.a, 1.0),\n    aggregatorTransform.isMean\n  );\n  if (weights.a == 0.0) {\n    value3 = vec3(NAN);\n  }\n\n#if NUM_DIMS == 1\n  binIds = float(gl_VertexID + aggregatorTransform.binIdRange.x);\n#else\n  int y = gl_VertexID / (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  int x = gl_VertexID - y * (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  binIds.y = float(y + aggregatorTransform.binIdRange.z);\n  binIds.x = float(x + aggregatorTransform.binIdRange.x);\n#endif\n\n#if NUM_CHANNELS == 3\n  values = value3;\n#elif NUM_CHANNELS == 2\n  values = value3.xy;\n#else\n  values = value3.x;\n#endif\n\n  gl_Position = vec4(0., 0., 0., 1.);\n  // This model renders into a 2x1 texture to obtain min and max simultaneously.\n  // See comments in fragment shader\n  gl_PointSize = 2.0;\n}\n",i="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-fragment\n\nprecision highp float;\n\n#if NUM_CHANNELS == 1\nflat in float values;\n#elif NUM_CHANNELS == 2\nflat in vec2 values;\n#else\nflat in vec3 values;\n#endif\n\nout vec4 fragColor;\n\nvoid main() {\n  vec3 value3;\n#if NUM_CHANNELS == 3\n  value3 = values;\n#elif NUM_CHANNELS == 2\n  value3.xy = values;\n#else\n  value3.x = values;\n#endif\n  if (isnan(value3.x)) discard;\n  // This shader renders into a 2x1 texture with blending=max\n  // The left pixel yields the max value of each channel\n  // The right pixel yields the min value of each channel\n  if (gl_FragCoord.x < 1.0) {\n    fragColor = vec4(value3, 1.0);\n  } else {\n    fragColor = vec4(-value3, 1.0);\n  }\n}\n";return new h.p(e,{vs:n,fs:i,topology:"point-list",modules:[u],parameters:{blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendColorOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendAlphaOperation:"max"},defines:{NUM_DIMS:t.dimensions,NUM_CHANNELS:t.channelCount,SAMPLER_WIDTH:c},varyings:["binIds","values"],disableWarnings:!0})}(e,t),this.domainFBO=s(e,2,1)}destroy(){var e,t;this.transform.destroy(),null==(e=this.binBuffer)||e.destroy(),null==(t=this.valueBuffer)||t.destroy(),this.domainFBO.colorAttachments[0].texture.destroy(),this.domainFBO.destroy()}get domains(){if(!this._domains){const e=this.device.readPixelsToArrayWebGL(this.domainFBO).buffer,t=new Float32Array(e);this._domains=[[-t[4],t[0]],[-t[5],t[1]],[-t[6],t[2]]].slice(0,this.channelCount)}return this._domains}setDimensions(e,t){var n,i;const{model:s,transformFeedback:o}=this.transform;s.setVertexCount(e);const r={binIdRange:[t[0][0],t[0][1],(null==(n=t[1])?void 0:n[0])||0,(null==(i=t[1])?void 0:i[1])||0]};s.shaderInputs.setProps({aggregatorTransform:r});const a=e*t.length*4;var l;(!this.binBuffer||this.binBuffer.byteLength<a)&&(null==(l=this.binBuffer)||l.destroy(),this.binBuffer=this.device.createBuffer({byteLength:a}),o.setBuffer("binIds",this.binBuffer));const c=e*this.channelCount*4;var d;(!this.valueBuffer||this.valueBuffer.byteLength<c)&&(null==(d=this.valueBuffer)||d.destroy(),this.valueBuffer=this.device.createBuffer({byteLength:c}),o.setBuffer("values",this.valueBuffer))}update(e,t){if(!e)return;const n=this.transform,i=this.domainFBO,s={isCount:[0,1,2].map((e=>"COUNT"===t[e]?1:0)),isMean:[0,1,2].map((e=>"MEAN"===t[e]?1:0)),bins:e};n.model.shaderInputs.setProps({aggregatorTransform:s}),n.run({id:"gpu-aggregation-domain",framebuffer:i,parameters:{viewport:[0,0,2,1]},clearColor:[-3e38,-3e38,-3e38,0],clearDepth:!1,clearStencil:!1}),this._domains=null}}var g=n(50111),f=n(18120);class m{static isSupported(e){return e.features.has("float32-renderable-webgl")&&e.features.has("texture-blend-float-webgl")}constructor(e,t){this.binCount=0,this.binIds=null,this.results=[],this.device=e,this.dimensions=t.dimensions,this.channelCount=t.channelCount,this.props=Object.assign({},t,{pointCount:0,binIdRange:[[0,0]],operations:[],attributes:{},binOptions:{}}),this.needsUpdate=new Array(this.channelCount).fill(!0),this.binSorter=new d(e,t),this.aggregationTransform=new p(e,t),this.setProps(t)}getBins(){var e;const t=this.aggregationTransform.binBuffer;return t?((null==(e=this.binIds)?void 0:e.buffer)!==t&&(this.binIds={buffer:t,type:"float32",size:this.dimensions}),this.binIds):null}getResult(e){var t;const n=this.aggregationTransform.valueBuffer;return!n||e>=this.channelCount?null:((null==(t=this.results[e])?void 0:t.buffer)!==n&&(this.results[e]={buffer:n,type:"float32",size:1,stride:4*this.channelCount,offset:4*e}),this.results[e])}getResultDomain(e){return this.aggregationTransform.domains[e]}getBin(e){if(e<0||e>=this.binCount)return null;const{binIdRange:t}=this.props;let n;if(1===this.dimensions)n=[e+t[0][0]];else{const[[i,s],[o]]=t,r=s-i;n=[e%r+i,Math.floor(e/r)+o]}const i=this.binSorter.getBinValues(e);if(!i)return null;const s=i[3],o=[];for(let r=0;r<this.channelCount;r++){const e=this.props.operations[r];o[r]="COUNT"===e?s:0===s?NaN:"MEAN"===e?i[r]/s:i[r]}return{id:n,value:o,count:s}}destroy(){this.binSorter.destroy(),this.aggregationTransform.destroy()}setProps(e){const t=this.props;if("binIdRange"in e&&!(0,g.b)(e.binIdRange,t.binIdRange,2)){const t=e.binIdRange;if(f.A.assert(t.length===this.dimensions),1===this.dimensions){const[[e,n]]=t;this.binCount=n-e}else{const[[e,n],[i,s]]=t;this.binCount=(n-e)*(s-i)}this.binSorter.setDimensions(this.binCount,t),this.aggregationTransform.setDimensions(this.binCount,t),this.setNeedsUpdate()}if(e.operations)for(let n=0;n<this.channelCount;n++)e.operations[n]!==t.operations[n]&&this.setNeedsUpdate(n);if(void 0!==e.pointCount&&e.pointCount!==t.pointCount&&(this.binSorter.setModelProps({vertexCount:e.pointCount}),this.setNeedsUpdate()),e.binOptions&&((0,g.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate(),this.binSorter.model.shaderInputs.setProps({binOptions:e.binOptions})),e.attributes){const t={},n={};for(const i of Object.values(e.attributes))for(const[e,s]of Object.entries(i.getValue()))ArrayBuffer.isView(s)?n[e]=s:s&&(t[e]=s);this.binSorter.setModelProps({attributes:t,constantAttributes:n})}e.shaderModuleProps&&this.binSorter.setModelProps({shaderModuleProps:e.shaderModuleProps}),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate.fill(!0):this.needsUpdate[e]=!0}update(){}preDraw(){if(!this.needsUpdate.some(Boolean))return;const{operations:e}=this.props,t=this.needsUpdate.map(((t,n)=>t?e[n]:null));this.binSorter.update(t),this.aggregationTransform.update(this.binSorter.texture,e);for(let s=0;s<this.channelCount;s++){var n,i;if(this.needsUpdate[s])this.needsUpdate[s]=!1,null==(n=(i=this.props).onUpdate)||n.call(i,{channel:s})}}}},7017:(e,t,n)=>{function i(e){let{dataBounds:t,getBinId:n,padding:i=0}=e;const s=[t[0],t[1],[t[0][0],t[1][1]],[t[1][0],t[0][1]]].map((e=>n(e))),o=Math.min(...s.map((e=>e[0])))-i,r=Math.min(...s.map((e=>e[1])))-i;return[[o,Math.max(...s.map((e=>e[0])))+i+1],[r,Math.max(...s.map((e=>e[1])))+i+1]]}n.d(t,{O:()=>i})},58213:(e,t,n)=>{n.d(t,{Pu:()=>r,QO:()=>i,Y5:()=>s,cp:()=>a});const i=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function s(e,t,n){let i;if(void 0===t&&(t=!1),void 0===n&&(n=Float32Array),Number.isFinite(e[0]))i=new n(e);else{i=new n(4*e.length);let t=0;for(let n=0;n<e.length;n++){const s=e[n];i[t++]=s[0],i[t++]=s[1],i[t++]=s[2],i[t++]=Number.isFinite(s[3])?s[3]:255}}if(t)for(let s=0;s<i.length;s++)i[s]/=255;return i}const o={linear:"linear",quantile:"nearest",quantize:"nearest",ordinal:"nearest"};function r(e,t){e.setSampler({minFilter:o[t],magFilter:o[t]})}function a(e,t,n){void 0===n&&(n="linear");const i=s(t,!1,Uint8Array);return e.createTexture({format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:o[n],magFilter:o[n],addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},data:i,width:i.length/4,height:1})}},39792:(e,t,n)=>{n.d(t,{bg:()=>i});class i{constructor(e,t){this.props={scaleType:"linear",lowerPercentile:0,upperPercentile:100},this.domain=null,this.cutoff=null,this.input=e,this.inputLength=t,this.attribute=e}getScalePercentile(){if(!this._percentile){const e=s(this.input,this.inputLength);this._percentile=function(e,t){void 0===t&&(t=100);const n=Array.from(e).filter(Number.isFinite).sort(o);let i=0;const s=Math.max(1,t),a=new Array(s-1);for(;++i<s;)a[i-1]=r(n,i/s);return{attribute:{value:e.map((e=>Number.isFinite(e)?function(e,t){let n=0,i=e.length;for(;n<i;){const s=n+i>>>1;e[s]>t?i=s:n=s+1}return n}(a,e):NaN)),type:"float32",size:1},domain:a}}(e)}return this._percentile}getScaleOrdinal(){if(!this._ordinal){const e=s(this.input,this.inputLength);this._ordinal=function(e){const t=new Set;for(const s of e)Number.isFinite(s)&&t.add(s);const n=Array.from(t).sort(),i=new Map;for(let s=0;s<n.length;s++)i.set(n[s],s);return{attribute:{value:e.map((e=>Number.isFinite(e)?i.get(e):NaN)),type:"float32",size:1},domain:n}}(e)}return this._ordinal}getCutoff(e){let{scaleType:t,lowerPercentile:n,upperPercentile:i}=e;if("quantile"===t)return[n,i-1];if(n>0||i<100){var s,o;const{domain:e}=this.getScalePercentile();let r=null!=(s=e[Math.floor(n)-1])?s:-1/0,a=null!=(o=e[Math.floor(i)-1])?o:1/0;if("ordinal"===t){const{domain:e}=this.getScaleOrdinal();r=e.findIndex((e=>e>=r)),a=e.findIndex((e=>e>a))-1,-2===a&&(a=e.length-1)}return[r,a]}return null}update(e){const t=this.props;if(e.scaleType!==t.scaleType)switch(e.scaleType){case"quantile":{const{attribute:e}=this.getScalePercentile();this.attribute=e,this.domain=[0,99];break}case"ordinal":{const{attribute:e,domain:t}=this.getScaleOrdinal();this.attribute=e,this.domain=[0,t.length-1];break}default:this.attribute=this.input,this.domain=null}return e.scaleType===t.scaleType&&e.lowerPercentile===t.lowerPercentile&&e.upperPercentile===t.upperPercentile||(this.cutoff=this.getCutoff(e)),this.props=e,this}}function s(e,t){var n,i;const s=(null!=(n=e.stride)?n:4)/4,o=(null!=(i=e.offset)?i:0)/4;let r=e.value;if(!r){var a;const n=null==(a=e.buffer)?void 0:a.readSyncWebGL(0,4*s*t);n&&(r=new Float32Array(n.buffer),e.value=r)}if(1===s)return r.subarray(0,t);const l=new Float32Array(t);for(let c=0;c<t;c++)l[c]=r[c*s+o];return l}function o(e,t){return e-t}function r(e,t){const n=e.length;if(t<=0||n<2)return e[0];if(t>=1)return e[n-1];const i=(n-1)*t,s=Math.floor(i),o=e[s];return o+(e[s+1]-o)*(i-s)}},74759:(e,t,n)=>{n.d(t,{A:()=>ue});var i=n(30428),s=n(50111),o=n(43976),r=n(8961),a=n(21410),l=n(39738),c=n(57149),d=n(52601),h=n(29586);const u=.5,p=1/6,g={N:[0,u],E:[u,0],S:[0,-.5],W:[-.5,0],NE:[u,u],NW:[-.5,u],SE:[u,-.5],SW:[-.5,-.5]},f=[g.W,g.SW,g.S],m=[g.S,g.SE,g.E],v=[g.E,g.NE,g.N],y=[g.NW,g.W,g.N],b=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5]],w=[[-p,-.5],[p,-.5],[u,-p],[u,p]],_=[[u,-p],[u,p],[p,u],[-p,u]],x=[[-.5,p],[-.5,-p],[p,u],[-p,u]],P=[g.W,g.SW,g.SE,g.E],S=[g.S,g.SE,g.NE,g.N],C=[g.NW,g.W,g.E,g.NE],A=[g.NW,g.SW,g.S,g.N],M=[[-.5,p],[-.5,-p],[u,-p],[u,p]],T=[[-p,-.5],[p,-.5],[p,u],[-p,u]],E=[g.NW,g.SW,g.SE,g.NE],j=[g.NW,g.SW,g.SE,g.E,g.N],I=[g.W,g.SW,g.SE,g.NE,g.N],O=[g.NW,g.W,g.S,g.SE,g.NE],L=[g.NW,g.SW,g.S,g.E,g.NE],R=[g.NW,g.W,[u,-p],[u,p],g.N],k=[[-p,-.5],[p,-.5],g.E,g.NE,g.N],z=[[-.5,p],[-.5,-p],g.S,g.SE,g.E],D=[g.W,g.SW,g.S,[p,u],[-p,u]],V=[g.NW,g.W,[-p,-.5],[p,-.5],g.N],N=[[-.5,p],[-.5,-p],g.E,g.NE,g.N],F=[g.S,g.SE,g.E,[p,u],[-p,u]],U=[g.W,g.SW,g.S,[u,-p],[u,p]],B=[g.W,g.SW,g.SE,g.E,[p,u],[-p,u]],W=[[-.5,p],[-.5,-p],g.S,g.SE,g.NE,g.N],G=[g.NW,g.W,[-p,-.5],[p,-.5],g.E,g.NE],H=[g.NW,g.SW,g.S,[u,-p],[u,p],g.N],K=[g.W,g.SW,g.S,g.E,g.NE,g.N],Z=[g.NW,g.W,g.S,g.SE,g.E,g.N],q=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5],g.E,g.NE,g.N],Y=[g.W,g.SW,g.S,[u,-p],[u,p],[p,u],[-p,u]],J=[g.NW,g.W,[-p,-.5],[p,-.5],[u,-p],[u,p],g.N],X=[[-.5,p],[-.5,-p],g.S,g.SE,g.E,[p,u],[-p,u]],$=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5],[u,-p],[u,p],[p,u],[-p,u]],Q={0:[],1:[[g.W,g.S]],2:[[g.S,g.E]],3:[[g.W,g.E]],4:[[g.N,g.E]],5:{0:[[g.W,g.S],[g.N,g.E]],1:[[g.W,g.N],[g.S,g.E]]},6:[[g.N,g.S]],7:[[g.W,g.N]],8:[[g.W,g.N]],9:[[g.N,g.S]],10:{0:[[g.W,g.N],[g.S,g.E]],1:[[g.W,g.S],[g.N,g.E]]},11:[[g.N,g.E]],12:[[g.W,g.E]],13:[[g.S,g.E]],14:[[g.W,g.S]],15:[]};function ee(e){return parseInt(e,4)}const te={[ee("0000")]:[],[ee("2222")]:[],[ee("2221")]:[f],[ee("2212")]:[m],[ee("2122")]:[v],[ee("1222")]:[y],[ee("0001")]:[f],[ee("0010")]:[m],[ee("0100")]:[v],[ee("1000")]:[y],[ee("2220")]:[b],[ee("2202")]:[w],[ee("2022")]:[_],[ee("0222")]:[x],[ee("0002")]:[b],[ee("0020")]:[w],[ee("0200")]:[_],[ee("2000")]:[x],[ee("0011")]:[P],[ee("0110")]:[S],[ee("1100")]:[C],[ee("1001")]:[A],[ee("2211")]:[P],[ee("2112")]:[S],[ee("1122")]:[C],[ee("1221")]:[A],[ee("2200")]:[M],[ee("2002")]:[T],[ee("0022")]:[M],[ee("0220")]:[T],[ee("1111")]:[E],[ee("1211")]:[j],[ee("2111")]:[I],[ee("1112")]:[O],[ee("1121")]:[L],[ee("1011")]:[j],[ee("0111")]:[I],[ee("1110")]:[O],[ee("1101")]:[L],[ee("1200")]:[R],[ee("0120")]:[k],[ee("0012")]:[z],[ee("2001")]:[D],[ee("1022")]:[R],[ee("2102")]:[k],[ee("2210")]:[z],[ee("0221")]:[D],[ee("1002")]:[V],[ee("2100")]:[N],[ee("0210")]:[F],[ee("0021")]:[U],[ee("1220")]:[V],[ee("0122")]:[N],[ee("2012")]:[F],[ee("2201")]:[U],[ee("0211")]:[B],[ee("2110")]:[W],[ee("1102")]:[G],[ee("1021")]:[H],[ee("2011")]:[B],[ee("0112")]:[W],[ee("1120")]:[G],[ee("1201")]:[H],[ee("2101")]:[K],[ee("0121")]:[K],[ee("1012")]:[Z],[ee("1210")]:[Z],[ee("0101")]:{0:[f,v],1:[K],2:[K]},[ee("1010")]:{0:[y,m],1:[Z],2:[Z]},[ee("2121")]:{0:[K],1:[K],2:[f,v]},[ee("1212")]:{0:[Z],1:[Z],2:[y,m]},[ee("2120")]:{0:[q],1:[q],2:[b,v]},[ee("2021")]:{0:[Y],1:[Y],2:[f,_]},[ee("1202")]:{0:[J],1:[J],2:[y,w]},[ee("0212")]:{0:[X],1:[X],2:[m,x]},[ee("0102")]:{0:[b,v],1:[q],2:[q]},[ee("0201")]:{0:[f,_],1:[Y],2:[Y]},[ee("1020")]:{0:[y,w],1:[J],2:[J]},[ee("2010")]:{0:[m,x],1:[X],2:[X]},[ee("2020")]:{0:[x,w],1:[$],2:[b,_]},[ee("0202")]:{0:[_,b],1:[$],2:[x,w]}};function ne(e,t){return Number.isNaN(e)?0:Array.isArray(t)?e<t[0]?0:e<t[1]?1:2:e>=t?1:0}function ie(e){const{x:t,y:n,xRange:i,yRange:s,getValue:o,threshold:r}=e,a=t<i[0],l=t>=i[1]-1,c=n<s[0],d=n>=s[1]-1,h=a||l||c||d;let u,p,g,f,m=0;if(a||d)g=0;else{const e=o(t,n+1);g=ne(e,r),m+=e}if(l||d)f=0;else{const e=o(t+1,n+1);f=ne(e,r),m+=e}if(l||c)p=0;else{const e=o(t+1,n);p=ne(e,r),m+=e}if(a||c)u=0;else{const e=o(t,n);u=ne(e,r),m+=e}let v=-1;Number.isFinite(r)&&(v=g<<3|f<<2|p<<1|u),Array.isArray(r)&&(v=g<<6|f<<4|p<<2|u);let y=0;return h||(y=ne(m/4,r)),{code:v,meanCode:y}}function se(e){const{x:t,y:n,z:i,code:s,meanCode:o}=e;let r=te[s];Array.isArray(r)||(r=r[o]);const a=t+1,l=n+1,c=[];return r.forEach((e=>{const t=[];e.forEach((e=>{const n=a+e[0],s=l+e[1];t.push([n,s,i])})),c.push(t)})),c}function oe(e){const{x:t,y:n,z:i,code:s,meanCode:o}=e;let r=Q[s];Array.isArray(r)||(r=r[o]);const a=t+1,l=n+1,c=[];return r.forEach((e=>{e.forEach((e=>{const t=a+e[0],n=l+e[1];c.push([t,n,i])}))})),c}function re(e){const{aggregator:t,binIdRange:n,channel:i}=e;if(t instanceof c.V){var s;const e=null==(s=t.getResult(i))?void 0:s.buffer;if(e){return function(e,t){const[[n,i],[s,o]]=t,r=i-n,a=o-s;return(t,i)=>(i-=s,(t-=n)<0||t>=r||i<0||i>=a?NaN:e[i*r+t])}(new Float32Array(e.readSyncWebGL().buffer),n)}}if(t instanceof d.M){var o,r;const e=null==(o=t.getResult(i))?void 0:o.value,n=null==(r=t.getBins())?void 0:r.value;if(n&&e)return function(e,t,n){const i={};for(let s=0;s<n;s++){const n=t[2*s],o=t[2*s+1];i[n]=i[n]||{},i[n][o]=e[s]}return(e,t)=>{var n,s;return null!=(n=null==(s=i[e])?void 0:s[t])?n:NaN}}(e,n,t.binCount)}return null}var ae=n(7017),le=n(31886);const ce={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}},de=[255,255,255,255];class he extends h.A{getAggregatorType(){return this.props.gpuAggregation&&c.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"===e?new d.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,n)=>{let{positions:i}=e;const s=this.state.aggregatorViewport.projectPosition(i),{cellSizeCommon:o,cellOriginCommon:r}=n;return[Math.floor((s[0]-r[0])/o[0]),Math.floor((s[1]-r[1])/o[1])]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}],onUpdate:this._onAggregationUpdate.bind(this)}):new c.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[i.A,ce],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float value) {\n    value = counts;\n  }\n  "}),{onUpdate:this._onAggregationUpdate.bind(this)}))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}updateState(e){const t=super.updateState(e),{props:n,oldProps:i,changeFlags:o}=e,{aggregator:r}=this.state;if(t||o.dataChanged||n.cellSize!==i.cellSize||!(0,s.b)(n.gridOrigin,i.gridOrigin,1)||n.aggregation!==i.aggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:i}=this.state;r.setProps({binIdRange:i,pointCount:this.getNumInstances(),operations:[n.aggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t}})}return(0,s.b)(i.contours,n.contours,2)||this.setState({contourData:null}),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let n=[0,0],i=[[0,1],[0,1]],s=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let r=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a,gridOrigin:l}=this.props,{unitsPerMeter:c}=s.getDistanceScales(r);t[0]=c[0]*a,t[1]=c[1]*a;const d=s.projectFlat(r);n=[Math.floor((d[0]-l[0])/t[0])*t[0]+l[0],Math.floor((d[1]-l[1])/t[1])*t[1]+l[1]],r=s.unprojectFlat(n);const h=s.constructor;s=s.isGeospatial?new h({longitude:r[0],latitude:r[1],zoom:12}):new o.A({position:[r[0],r[1],0],zoom:12}),n=[Math.fround(s.center[0]),Math.fround(s.center[1])],i=(0,ae.O)({dataBounds:e,getBinId:e=>{const i=s.projectFlat(e);return[Math.floor((i[0]-n[0])/t[0]),Math.floor((i[1]-n[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:n,binIdRange:i,aggregatorViewport:s})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(){const{aggregator:e,binIdRange:t}=this.state;this.setState({aggregatedValueReader:re({aggregator:e,binIdRange:t,channel:0}),contourData:null})}_getContours(){const{aggregatedValueReader:e}=this.state;if(!e)return null;if(!this.state.contourData){const{binIdRange:t}=this.state,{contours:n}=this.props,i=function(e){let{contours:t,getValue:n,xRange:i,yRange:s}=e;const o=[],r=[];let a=0,l=0;for(let d=0;d<t.length;d++){var c;const e=t[d],h=null!=(c=e.zIndex)?c:d,{threshold:u}=e;for(let t=i[0]-1;t<i[1];t++)for(let c=s[0]-1;c<s[1];c++){const{code:d,meanCode:p}=ie({getValue:n,threshold:u,x:t,y:c,xRange:i,yRange:s}),g={x:t,y:c,z:h,code:d,meanCode:p};if(Array.isArray(u)){const t=se(g);for(const n of t)r[l++]={vertices:n,contour:e}}else{const t=oe(g);t.length>0&&(o[a++]={vertices:t,contour:e})}}}return{lines:o,polygons:r}}({contours:n,getValue:e,xRange:t[0],yRange:t[1]});this.state.contourData=i}return this.state.contourData}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:n,binIdRange:i}=this.state;t.setProps({binIdRange:i,binOptions:{cellSizeCommon:e,cellOriginCommon:n}});break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const e=this._getContours();if(!e)return null;const{lines:t,polygons:n}=e,{zOffset:i}=this.props,{cellOriginCommon:s,cellSizeCommon:o}=this.state,c=this.getSubLayerClass("lines",a.A),d=this.getSubLayerClass("bands",l.A),h=(new le.k).translate([s[0],s[1],0]).scale([o[0],o[1],i]);return[t&&t.length>0&&new c(this.getSubLayerProps({id:"lines"}),{data:t,coordinateSystem:r.rf.CARTESIAN,modelMatrix:h,getPath:e=>e.vertices,getColor:e=>{var t;return null!=(t=e.contour.color)?t:de},getWidth:e=>{var t;return null!=(t=e.contour.strokeWidth)?t:1},widthUnits:"pixels"}),n&&n.length>0&&new d(this.getSubLayerProps({id:"bands"}),{data:n,coordinateSystem:r.rf.CARTESIAN,modelMatrix:h,getPolygon:e=>e.vertices,getFillColor:e=>{var t;return null!=(t=e.contour.color)?t:de}})]}getPickingInfo(e){const t=e.info,{object:n}=t;return n&&(t.object={contour:n.contour}),t}}he.layerName="ContourLayer",he.defaultProps={cellSize:{type:"number",min:1,value:1e3},gridOrigin:{type:"array",compare:!0,value:[0,0]},getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:{type:"object",value:[{threshold:1}],optional:!0,compare:3},zOffset:.005};const ue=he},99550:(e,t,n)=>{n.d(t,{A:()=>_});var i=n(18120),s=n(30428),o=n(33698),r=n(43976),a=n(57149),l=n(52601),c=n(29586),d=n(58213),h=n(39792),u=n(7017),p=n(34651),g=n(8145);const f={name:"grid",vs:"uniform gridUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n  vec2 sizeCommon;\n} grid;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>",sizeCommon:"vec2<f32>"}};class m extends p.A{getShaders(){const e=super.getShaders();return e.modules.push(f),Object.assign({},e,{vs:"#version 300 es\n#define SHADER_NAME grid-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < grid.colorDomain.z ||\ninstanceColorValues > grid.colorDomain.w ||\ninstanceElevationValues < grid.elevationDomain.z ||\ninstanceElevationValues > grid.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = (instancePositions + (positions.xy + 1.0) / 2.0 * column.coverage) * grid.sizeCommon + grid.originCommon - project.commonOrigin.xy;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, grid.elevationDomain.xy, grid.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, grid.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n"})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e,i=this.state.fillModel;if(n.colorRange!==t.colorRange){var s;null==(s=this.state.colorTexture)||s.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};i.shaderInputs.setProps({grid:e})}else n.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}_updateGeometry(){const e=new g.c9;this.state.fillModel.setGeometry(e)}draw(e){let{uniforms:t}=e;const{cellOriginCommon:n,cellSizeCommon:i,elevationRange:s,elevationScale:o,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel,p={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],h[0]),Math.min(c[1],h[1]),Math.max(c[0]-1,h[0]),Math.min(c[1]+1,h[1])],elevationRange:[s[0]*o,s[1]*o],originCommon:n,sizeCommon:i};u.shaderInputs.setProps({column:{extruded:r,coverage:a},grid:p}),u.draw(this.context.renderPass)}}m.layerName="GridCellLayer";const v={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}};function y(){}const b={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:y,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:y,cellSize:{type:"number",min:0,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},gridAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class w extends c.A{getAggregatorType(){const{gpuAggregation:e,gridAggregator:t,getColorValue:n,getElevationValue:s}=this.props;return e&&(t||n||s)?(i.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{gridAggregator:e,cellSize:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(n,i,s)=>{let{positions:o}=n;if(e)return e(o,t);const r=this.state.aggregatorViewport.projectPosition(o),{cellSizeCommon:a,cellOriginCommon:l}=s;return[Math.floor((r[0]-l[0])/a[0]),Math.floor((r[1]-l[1])/a[1])]}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[s.A,v],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:n,oldProps:i,changeFlags:s}=e,{aggregator:r}=this.state;if(!s.dataChanged&&this.state.dataAsArray||!n.getColorValue&&!n.getElevationValue||(this.state.dataAsArray=Array.from((0,o.X)(n.data).iterable)),t||s.dataChanged||n.cellSize!==i.cellSize||n.getColorValue!==i.getColorValue||n.getElevationValue!==i.getElevationValue||n.colorAggregation!==i.colorAggregation||n.elevationAggregation!==i.elevationAggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:i,dataAsArray:s}=this.state;if(r.setProps({binIdRange:i,pointCount:this.getNumInstances(),operations:[n.colorAggregation,n.elevationAggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),s){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>s[e])),{indices:t,data:n.data})),t&&(e=>t(e.map((e=>s[e])),{indices:e,data:n.data}))]})}}return s.updateTriggersChanged&&s.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),s.updateTriggersChanged&&s.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let n=[0,0],i=[[0,1],[0,1]],s=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let o=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a}=this.props,{unitsPerMeter:l}=s.getDistanceScales(o);t[0]=l[0]*a,t[1]=l[1]*a;const c=s.projectFlat(o);n=[Math.floor(c[0]/t[0])*t[0],Math.floor(c[1]/t[1])*t[1]],o=s.unprojectFlat(n);const d=s.constructor;s=s.isGeospatial?new d({longitude:o[0],latitude:o[1],zoom:12}):new r.A({position:[o[0],o[1],0],zoom:12}),n=[Math.fround(s.center[0]),Math.fround(s.center[1])],i=(0,u.O)({dataBounds:e,getBinId:e=>{const i=s.projectFlat(e);return[Math.floor((i[0]-n[0])/t[0]),Math.floor((i[1]-n[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:n,binIdRange:i,aggregatorViewport:s})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const n=this.getCurrentLayer().props,{aggregator:i}=this.state;if(0===t){const e=i.getResult(0);this.setState({colors:new h.bg(e,i.binCount)}),n.onSetColorDomain(i.getResultDomain(0))}else if(1===t){const e=i.getResult(1);this.setState({elevations:new h.bg(e,i.binCount)}),n.onSetElevationDomain(i.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:n,binIdRange:i}=this.state;t.setProps({binIdRange:i,binOptions:{cellSizeCommon:e,cellOriginCommon:n}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:n,cellOriginCommon:i,cellSizeCommon:s}=this.state,{elevationScale:o,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:h,colorScaleType:u,lowerPercentile:p,upperPercentile:g,colorDomain:f,elevationScaleType:v,elevationLowerPercentile:y,elevationUpperPercentile:b,elevationDomain:w}=this.props,_=this.getSubLayerClass("cells",m),x=n.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:u,lowerPercentile:p,upperPercentile:g}),S=null==(t=this.state.elevations)?void 0:t.update({scaleType:v,lowerPercentile:y,upperPercentile:b});return P&&S?new _(this.getSubLayerProps({id:"cells"}),{data:{length:n.binCount,attributes:{getBin:x,getColorValue:P.attribute,getElevationValue:S.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[x],getColorValue:[P.attribute],getElevationValue:[S.attribute]},cellOriginCommon:i,cellSizeCommon:s,elevationScale:o,colorRange:r,colorScaleType:u,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||n.getResultDomain(0),elevationDomain:S.domain||w||n.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:S.cutoff,transitions:h&&{getFillColor:h.getColorValue||h.getColorWeight,getElevation:h.getElevationValue||h.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:n}=t;if(n>=0){const e=this.state.aggregator.getBin(n);let i;e&&(i={col:e.id[0],row:e.id[1],colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(i.pointIndices=e.pointIndices,i.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=i}return t}}w.layerName="GridLayer",w.defaultProps=b;const _=w},69703:(e,t,n)=>{n.d(t,{A:()=>L});const i=new Float32Array(12);function s(e,t){void 0===t&&(t=2);let n=0;for(const s of e)for(let e=0;e<t;e++)i[n++]=s[e]||0;return i}var o=n(66652),r=n(30428),a=n(8961),l=n(1570),c=n(18120),d=n(51771),h=n(3002);const u="uniform triangleUniforms {\n  float aggregationMode;\n  vec2 colorDomain;\n  float intensity;\n  float threshold;\n} triangle;\n",p={name:"triangle",vs:u,fs:u,uniformTypes:{aggregationMode:"f32",colorDomain:"vec2<f32>",intensity:"f32",threshold:"f32"}};class g extends h.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME heatp-map-layer-vertex-shader\nuniform sampler2D maxTexture;\nin vec3 positions;\nin vec2 texCoords;\nout vec2 vTexCoords;\nout float vIntensityMin;\nout float vIntensityMax;\nvoid main(void) {\ngl_Position = project_position_to_clipspace(positions, vec3(0.0), vec3(0.0));\nvTexCoords = texCoords;\nvec4 maxTexture = texture(maxTexture, vec2(0.5));\nfloat maxValue = triangle.aggregationMode < 0.5 ? maxTexture.r : maxTexture.g;\nfloat minValue = maxValue * triangle.threshold;\nif (triangle.colorDomain[1] > 0.) {\nmaxValue = triangle.colorDomain[1];\nminValue = triangle.colorDomain[0];\n}\nvIntensityMax = triangle.intensity / maxValue;\nvIntensityMin = triangle.intensity / minValue;\n}\n",fs:"#version 300 es\n#define SHADER_NAME triangle-layer-fragment-shader\nprecision highp float;\nuniform sampler2D weightsTexture;\nuniform sampler2D colorTexture;\nin vec2 vTexCoords;\nin float vIntensityMin;\nin float vIntensityMax;\nout vec4 fragColor;\nvec4 getLinearColor(float value) {\nfloat factor = clamp(value * vIntensityMax, 0., 1.);\nvec4 color = texture(colorTexture, vec2(factor, 0.5));\ncolor.a *= min(value * vIntensityMin, 1.0);\nreturn color;\n}\nvoid main(void) {\nvec4 weights = texture(weightsTexture, vTexCoords);\nfloat weight = weights.r;\nif (triangle.aggregationMode > 0.5) {\nweight /= max(1.0, weights.a);\n}\nif (weight <= 0.) {\ndiscard;\n}\nvec4 linearColor = getLinearColor(weight);\nlinearColor.a *= layer.opacity;\nfragColor = linearColor;\n}\n",modules:[r.A,p]})}initializeState(e){let{device:t}=e;this.setState({model:this._getModel(t)})}_getModel(e){const{vertexCount:t,data:n}=this.props;return new d.K(e,Object.assign({},this.getShaders(),{id:this.props.id,attributes:n.attributes,bufferLayout:[{name:"positions",format:"float32x3"},{name:"texCoords",format:"float32x2"}],topology:"triangle-strip",vertexCount:t}))}draw(){const{model:e}=this.state,{aggregationMode:t,colorDomain:n,intensity:i,threshold:s,colorTexture:o,maxTexture:r,weightsTexture:a}=this.props,l={aggregationMode:t,colorDomain:n,intensity:i,threshold:s,colorTexture:o,maxTexture:r,weightsTexture:a};e.shaderInputs.setProps({triangle:l}),e.draw(this.context.renderPass)}}g.layerName="TriangleLayer";const f=g;var m=n(33847),v=n(9649);function y(e,t){const n={};for(const i in e)t.includes(i)||(n[i]=e[i]);return n}class b extends m.A{initializeAggregationLayer(e){super.initializeState(this.context),this.setState({ignoreProps:y(this.constructor._propTypes,e.data.props),dimensions:e})}updateState(e){super.updateState(e);const{changeFlags:t}=e;if(t.extensionsChanged){const e=this.getShaders({});e&&e.defines&&(e.defines.NON_INSTANCED_MODEL=1),this.updateShaders(e)}this._updateAttributes()}updateAttributes(e){this.setState({changedAttributes:e})}getAttributes(){return this.getAttributeManager().getAttributes()}getModuleSettings(){const{viewport:e,mousePosition:t,device:n}=this.context;return Object.assign(Object.create(this.props),{viewport:e,mousePosition:t,picking:{isActive:0},devicePixelRatio:n.canvasContext.cssToDeviceRatio()})}updateShaders(e){}isAggregationDirty(e,t){void 0===t&&(t={});const{props:n,oldProps:i,changeFlags:s}=e,{compareAll:o=!1,dimension:r}=t,{ignoreProps:a}=this.state,{props:l,accessors:c=[]}=r,{updateTriggersChanged:d}=s;if(s.dataChanged)return!0;if(d){if(d.all)return!0;for(const e of c)if(d[e])return!0}if(o)return!!s.extensionsChanged||(0,v.Me)({oldProps:i,newProps:n,ignoreProps:a,propTypes:this.constructor._propTypes});for(const h of l)if(n[h]!==i[h])return!0;return!1}isAttributeChanged(e){const{changedAttributes:t}=this.state;return e?t&&void 0!==t[e]:!function(e){let t=!0;for(const n in e){t=!1;break}return t}(t)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}b.layerName="AggregationLayer";const w=b;var _=n(58213);const x="#version 300 es\nin vec3 positions;\nin vec3 positions64Low;\nin float weights;\nout vec4 weightsTexture;\nvoid main()\n{\nweightsTexture = vec4(weights * weight.weightsScale, 0., 0., 1.);\nfloat radiusTexels = project_pixel_size(weight.radiusPixels) * weight.textureWidth / (weight.commonBounds.z - weight.commonBounds.x);\ngl_PointSize = radiusTexels * 2.;\nvec3 commonPosition = project_position(positions, positions64Low);\ngl_Position.xy = (commonPosition.xy - weight.commonBounds.xy) / (weight.commonBounds.zw - weight.commonBounds.xy) ;\ngl_Position.xy = (gl_Position.xy * 2.) - (1.);\ngl_Position.w = 1.0;\n}\n",P="#version 300 es\nin vec4 weightsTexture;\nout vec4 fragColor;\nfloat gaussianKDE(float u){\nreturn pow(2.71828, -u*u/0.05555)/(1.77245385*0.166666);\n}\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(0.5, 0.5));\nif (dist > 0.5) {\ndiscard;\n}\nfragColor = weightsTexture * gaussianKDE(2. * dist);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",S={name:"weight",vs:"uniform weightUniforms {\n  vec4 commonBounds;\n  float radiusPixels;\n  float textureWidth;\n  float weightsScale;\n} weight;\n",uniformTypes:{commonBounds:"vec4<f32>",radiusPixels:"f32",textureWidth:"f32",weightsScale:"f32"}},C={name:"maxWeight",vs:"uniform maxWeightUniforms {\n  float textureSize;\n} maxWeight;\n",uniformTypes:{textureSize:"f32"}},A={format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}},M=[0,0],T={SUM:0,MEAN:1},E={getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},intensity:{type:"number",min:0,value:1},radiusPixels:{type:"number",min:1,max:100,value:50},colorRange:_.QO,threshold:{type:"number",min:0,max:1,value:.05},colorDomain:{type:"array",value:null,optional:!0},aggregation:"SUM",weightsTextureSize:{type:"number",min:128,max:2048,value:2048},debounceTimeout:{type:"number",min:0,max:1e3,value:500}},j=["float32-renderable-webgl","texture-blend-float-webgl"],I={data:{props:["radiusPixels"]}};class O extends w{getShaders(e){let t=[r.A];return e.modules&&(t=[...t,...e.modules]),super.getShaders(Object.assign({},e,{modules:t}))}initializeState(){super.initializeAggregationLayer(I),this.setState({colorDomain:M}),this._setupTextureParams(),this._setupAttributes(),this._setupResources()}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){super.updateState(e),this._updateHeatmapState(e)}_updateHeatmapState(e){const{props:t,oldProps:n}=e,i=this._getChangeFlags(e);(i.dataChanged||i.viewportChanged)&&(i.boundsChanged=this._updateBounds(i.dataChanged),this._updateTextureRenderingBounds()),i.dataChanged||i.boundsChanged?(clearTimeout(this.state.updateTimer),this.setState({isWeightMapDirty:!0})):i.viewportZoomChanged&&this._debouncedUpdateWeightmap(),t.colorRange!==n.colorRange&&this._updateColorTexture(e),this.state.isWeightMapDirty&&this._updateWeightmap(),this.setState({zoom:e.context.viewport.zoom})}renderLayers(){const{weightsTexture:e,triPositionBuffer:t,triTexCoordBuffer:n,maxWeightsTexture:i,colorTexture:s,colorDomain:o}=this.state,{updateTriggers:r,intensity:l,threshold:c,aggregation:d}=this.props;return new(this.getSubLayerClass("triangle",f))(this.getSubLayerProps({id:"triangle-layer",updateTriggers:r}),{coordinateSystem:a.rf.DEFAULT,data:{attributes:{positions:t,texCoords:n}},vertexCount:4,maxTexture:i,colorTexture:s,aggregationMode:T[d]||0,weightsTexture:e,intensity:l,threshold:c,colorDomain:o})}finalizeState(e){super.finalizeState(e);const{weightsTransform:t,weightsTexture:n,maxWeightTransform:i,maxWeightsTexture:s,triPositionBuffer:o,triTexCoordBuffer:r,colorTexture:a,updateTimer:l}=this.state;null==t||t.destroy(),null==n||n.destroy(),null==i||i.destroy(),null==s||s.destroy(),null==o||o.destroy(),null==r||r.destroy(),null==a||a.destroy(),l&&clearTimeout(l)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}_getChangeFlags(e){const t={},{dimensions:n}=this.state;t.dataChanged=this.isAttributeChanged()?"attribute changed":this.isAggregationDirty(e,{compareAll:!0,dimension:n.data})&&"aggregation is dirty",t.viewportChanged=e.changeFlags.viewportChanged;const{zoom:i}=this.state;return e.context.viewport&&e.context.viewport.zoom===i||(t.viewportZoomChanged=!0),t}_createTextures(){const{textureSize:e,format:t}=this.state;this.setState({weightsTexture:this.context.device.createTexture(Object.assign({},A,{width:e,height:e,format:t})),maxWeightsTexture:this.context.device.createTexture(Object.assign({},A,{width:1,height:1,format:t}))})}_setupAttributes(){this.getAttributeManager().add({positions:{size:3,type:"float64",accessor:"getPosition"},weights:{size:1,accessor:"getWeight"}}),this.setState({positionAttributeName:"positions"})}_setupTextureParams(){const{device:e}=this.context,{weightsTextureSize:t}=this.props,n=Math.min(t,e.limits.maxTextureDimension2D),i=j.every((t=>e.features.has(t))),s=i?"rgba32float":"rgba8unorm",o=i?1:1/255;this.setState({textureSize:n,format:s,weightsScale:o}),i||c.A.warn("HeatmapLayer: "+this.id+" rendering to float texture not supported, falling back to low precision format")()}_createWeightsTransform(e){var t;let{weightsTransform:n}=this.state;const{weightsTexture:i}=this.state,s=this.getAttributeManager();null==(t=n)||t.destroy(),n=new o.G(this.context.device,Object.assign({id:this.id+"-weights-transform",bufferLayout:s.getBufferLayouts(),vertexCount:1,targetTexture:i,parameters:{depthWriteEnabled:!1,blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"},topology:"point-list"},e,{modules:[...e.modules,S]})),this.setState({weightsTransform:n})}_setupResources(){this._createTextures();const{device:e}=this.context,{textureSize:t,weightsTexture:n,maxWeightsTexture:i}=this.state,s=this.getShaders({vs:x,fs:P});this._createWeightsTransform(s);const r=this.getShaders({vs:"#version 300 es\nuniform sampler2D inTexture;\nout vec4 outTexture;\nvoid main()\n{\nint yIndex = gl_VertexID / int(maxWeight.textureSize);\nint xIndex = gl_VertexID - (yIndex * int(maxWeight.textureSize));\nvec2 uv = (0.5 + vec2(float(xIndex), float(yIndex))) / maxWeight.textureSize;\noutTexture = texture(inTexture, uv);\ngl_Position = vec4(0.0, 0.0, 0.0, 1.0);\ngl_PointSize = 1.0;\n}\n",fs:"#version 300 es\nin vec4 outTexture;\nout vec4 fragColor;\nvoid main() {\nfragColor = outTexture;\nfragColor.g = outTexture.r / max(1.0, outTexture.a);\n}\n",modules:[C]}),a=new o.G(e,Object.assign({id:this.id+"-max-weights-transform",targetTexture:i},r,{vertexCount:t*t,topology:"point-list",parameters:{depthWriteEnabled:!1,blendColorOperation:"max",blendAlphaOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})),l={inTexture:n,textureSize:t};a.model.shaderInputs.setProps({maxWeight:l}),this.setState({weightsTexture:n,maxWeightsTexture:i,maxWeightTransform:a,zoom:null,triPositionBuffer:e.createBuffer({byteLength:48}),triTexCoordBuffer:e.createBuffer({byteLength:48})})}updateShaders(e){this._createWeightsTransform(Object.assign({vs:x,fs:P},e))}_updateMaxWeightValue(){const{maxWeightTransform:e}=this.state;e.run({parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]})}_updateBounds(e){void 0===e&&(e=!1);const{viewport:t}=this.context,n=[t.unproject([0,0]),t.unproject([t.width,0]),t.unproject([0,t.height]),t.unproject([t.width,t.height])].map((e=>e.map(Math.fround))),i=function(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1])),i=Math.min.apply(null,t),s=Math.max.apply(null,t);return[i,Math.min.apply(null,n),s,Math.max.apply(null,n)]}(n),s={visibleWorldBounds:i,viewportCorners:n};let o=!1;if(e||!this.state.worldBounds||(r=this.state.worldBounds,!((l=i)[0]>=r[0]&&l[2]<=r[2]&&l[1]>=r[1]&&l[3]<=r[3]))){const e=this._worldToCommonBounds(i),t=this._commonToWorldBounds(e);this.props.coordinateSystem===a.rf.LNGLAT&&(t[1]=Math.max(t[1],-85.051129),t[3]=Math.min(t[3],85.051129),t[0]=Math.max(t[0],-360),t[2]=Math.min(t[2],360));const n=this._worldToCommonBounds(t);s.worldBounds=t,s.normalizedCommonBounds=n,o=!0}var r,l;return this.setState(s),o}_updateTextureRenderingBounds(){const{triPositionBuffer:e,triTexCoordBuffer:t,normalizedCommonBounds:n,viewportCorners:i}=this.state,{viewport:o}=this.context;e.write(s(i,3));const r=i.map((e=>function(e,t){const[n,i,s,o]=t;return[(e[0]-n)/(s-n),(e[1]-i)/(o-i)]}(o.projectPosition(e),n)));t.write(s(r,2))}_updateColorTexture(e){var t;const{colorRange:n}=e.props;let{colorTexture:i}=this.state;const s=(0,_.Y5)(n,!1,Uint8Array);var o;i&&(null==(t=i)?void 0:t.width)===n.length?i.setTexture2DData({data:s}):(null==(o=i)||o.destroy(),i=this.context.device.createTexture(Object.assign({},A,{data:s,width:n.length,height:1})));this.setState({colorTexture:i})}_updateWeightmap(){const{radiusPixels:e,colorDomain:t,aggregation:n}=this.props,{worldBounds:i,textureSize:s,weightsScale:o,weightsTexture:r}=this.state,a=this.state.weightsTransform;this.state.isWeightMapDirty=!1;const l=this._worldToCommonBounds(i,{useLayerCoordinateSystem:!0});if(t&&"SUM"===n){const{viewport:e}=this.context,n=e.distanceScales.metersPerUnit[2]*(l[2]-l[0])/s;this.state.colorDomain=t.map((e=>e*n*o))}else this.state.colorDomain=t||M;const c=this.getAttributeManager().getAttributes(),d=this.getModuleSettings();this._setModelAttributes(a.model,c),a.model.setVertexCount(this.getNumInstances());const h={radiusPixels:e,commonBounds:l,textureWidth:s,weightsScale:o,weightsTexture:r},{viewport:u,devicePixelRatio:p,coordinateSystem:g,coordinateOrigin:f}=d,{modelMatrix:m}=this.props;a.model.shaderInputs.setProps({project:{viewport:u,devicePixelRatio:p,modelMatrix:m,coordinateSystem:g,coordinateOrigin:f},weight:h}),a.run({parameters:{viewport:[0,0,s,s]},clearColor:[0,0,0,0]}),this._updateMaxWeightValue()}_debouncedUpdateWeightmap(e){void 0===e&&(e=!1);let{updateTimer:t}=this.state;const{debounceTimeout:n}=this.props;e?(t=null,this._updateBounds(!0),this._updateTextureRenderingBounds(),this.setState({isWeightMapDirty:!0})):(this.setState({isWeightMapDirty:!1}),clearTimeout(t),t=setTimeout(this._debouncedUpdateWeightmap.bind(this,!0),n)),this.setState({updateTimer:t})}_worldToCommonBounds(e,t){void 0===t&&(t={});const{useLayerCoordinateSystem:n=!1}=t,[i,s,o,r]=e,{viewport:l}=this.context,{textureSize:c}=this.state,{coordinateSystem:d}=this.props,h=n&&(d===a.rf.LNGLAT_OFFSETS||d===a.rf.METER_OFFSETS),u=h?l.projectPosition(this.props.coordinateOrigin):[0,0],p=2*c/l.scale;let g,f;return n&&!h?(g=this.projectPosition([i,s,0]),f=this.projectPosition([o,r,0])):(g=l.projectPosition([i,s,0]),f=l.projectPosition([o,r,0])),function(e,t,n){const[i,s,o,r]=e,a=o-i,l=r-s;let c=a,d=l;a/l<t/n?c=t/n*l:d=n/t*a,c<t&&(c=t,d=n);const h=(o+i)/2,u=(r+s)/2;return[h-c/2,u-d/2,h+c/2,u+d/2]}([g[0]-u[0],g[1]-u[1],f[0]-u[0],f[1]-u[1]],p,p)}_commonToWorldBounds(e){const[t,n,i,s]=e,{viewport:o}=this.context,r=o.unprojectPosition([t,n]),a=o.unprojectPosition([i,s]);return r.slice(0,2).concat(a.slice(0,2))}}O.layerName="HeatmapLayer",O.defaultProps=E;const L=O},77075:(e,t,n)=>{n.d(t,{A:()=>E});var i=n(18120),s=n(30428),o=n(33698),r=n(43976),a=n(57149),l=n(52601),c=n(29586),d=n(58213),h=n(39792),u=n(7017),p=n(34651);const g=Math.PI/3,f=2*Math.sin(g),m=1.5,v=Array.from({length:6},((e,t)=>{const n=t*g;return[Math.sin(n),-Math.cos(n)]}));function y(e,t){let[n,i]=e,s=Math.round(i=i/t/m),o=Math.round(n=n/t/f-(1&s)/2);const r=i-s;if(3*Math.abs(r)>1){const e=n-o,t=o+(n<o?-1:1)/2,a=s+(i<s?-1:1),l=n-t,c=i-a;e*e+r*r>l*l+c*c&&(o=t+(1&s?1:-1)/2,s=a)}return[o,s]}const b="\nconst vec2 DIST = vec2("+f+", "+m+");\n\nivec2 pointToHexbin(vec2 p, float radius) {\n  p /= radius * DIST;\n  float pj = round(p.y);\n  float pjm2 = mod(pj, 2.0);\n  p.x -= pjm2 * 0.5;\n  float pi = round(p.x);\n  vec2 d1 = p - vec2(pi, pj);\n\n  if (abs(d1.y) * 3. > 1.) {\n    vec2 v2 = step(0.0, d1) - 0.5;\n    v2.y *= 2.0;\n    vec2 d2 = d1 - v2;\n    if (dot(d1, d1) > dot(d2, d2)) {\n      pi += v2.x + pjm2 - 0.5;\n      pj += v2.y;\n    }\n  }\n  return ivec2(pi, pj);\n}\n";function w(e,t){let[n,i]=e;return[(n+(1&i)/2)*t*f,i*t*m]}const _="#version 300 es\n#define SHADER_NAME hexagon-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\n"+("\nconst vec2 DIST = vec2("+f+", "+m+");\n\nvec2 hexbinCentroid(vec2 binId, float radius) {\n  binId.x += fract(binId.y * 0.5);\n  return binId * DIST * radius;\n}\n")+"\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < hexagon.colorDomain.z ||\ninstanceColorValues > hexagon.colorDomain.w ||\ninstanceElevationValues < hexagon.elevationDomain.z ||\ninstanceElevationValues > hexagon.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = hexbinCentroid(instancePositions, column.radius) + (hexagon.originCommon - project.commonOrigin.xy);\ncommonPosition += positions.xy * column.radius * column.coverage;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, hexagon.elevationDomain.xy, hexagon.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, hexagon.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",x={name:"hexagon",vs:"uniform hexagonUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n} hexagon;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>"}};class P extends p.A{getShaders(){const e=super.getShaders();return e.modules.push(x),Object.assign({},e,{vs:_})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e,i=this.state.fillModel;if(n.colorRange!==t.colorRange){var s;null==(s=this.state.colorTexture)||s.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};i.shaderInputs.setProps({hexagon:e})}else n.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const{radius:n,hexOriginCommon:i,elevationRange:s,elevationScale:o,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel;u.vertexArray.indexBuffer&&u.setIndexBuffer(null),u.setVertexCount(this.state.fillVertexCount);const p={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],h[0]),Math.min(c[1],h[1]),Math.max(c[0]-1,h[0]),Math.min(c[1]+1,h[1])],elevationRange:[s[0]*o,s[1]*o],originCommon:i};u.shaderInputs.setProps({column:{extruded:r,coverage:a,radius:n},hexagon:p}),u.draw(this.context.renderPass)}}P.layerName="HexagonCellLayer";const S=P,C={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 hexOriginCommon;\n  float radiusCommon;\n} binOptions;\n",uniformTypes:{hexOriginCommon:"vec2<f32>",radiusCommon:"f32"}};function A(){}const M={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:A,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:A,radius:{type:"number",min:1,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},hexagonAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class T extends c.A{getAggregatorType(){const{gpuAggregation:e,hexagonAggregator:t,getColorValue:n,getElevationValue:s}=this.props;return e&&(t||n||s)?(i.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{hexagonAggregator:e,radius:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(n,i,s)=>{let{positions:o}=n;if(e)return e(o,t);const r=this.state.aggregatorViewport.projectPosition(o),{radiusCommon:a,hexOriginCommon:l}=s;return y([r[0]-l[0],r[1]-l[1]],a)}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[s.A,C],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n  \n  "+b+"\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    binId = pointToHexbin(positionCommon.xy, binOptions.radiusCommon);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:n,oldProps:i,changeFlags:s}=e,{aggregator:r}=this.state;if(!s.dataChanged&&this.state.dataAsArray||!n.getColorValue&&!n.getElevationValue||(this.state.dataAsArray=Array.from((0,o.X)(n.data).iterable)),t||s.dataChanged||n.radius!==i.radius||n.getColorValue!==i.getColorValue||n.getElevationValue!==i.getElevationValue||n.colorAggregation!==i.colorAggregation||n.elevationAggregation!==i.elevationAggregation){this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:t,binIdRange:i,dataAsArray:s}=this.state;if(r.setProps({binIdRange:i,pointCount:this.getNumInstances(),operations:[n.colorAggregation,n.elevationAggregation],binOptions:{radiusCommon:e,hexOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),s){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>s[e])),{indices:t,data:n.data})),t&&(e=>t(e.map((e=>s[e])),{indices:e,data:n.data}))]})}}return s.updateTriggersChanged&&s.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),s.updateTriggersChanged&&s.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds();let t=1,n=[0,0],i=[[0,1],[0,1]],s=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let o=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{radius:a}=this.props,{unitsPerMeter:l}=s.getDistanceScales(o);t=l[0]*a;const c=y(s.projectFlat(o),t);o=s.unprojectFlat(w(c,t));const d=s.constructor;s=s.isGeospatial?new d({longitude:o[0],latitude:o[1],zoom:12}):new r.A({position:[o[0],o[1],0],zoom:12}),n=[Math.fround(s.center[0]),Math.fround(s.center[1])],i=(0,u.O)({dataBounds:e,getBinId:e=>{const i=s.projectFlat(e);return i[0]-=n[0],i[1]-=n[1],y(i,t)},padding:1})}this.setState({radiusCommon:t,hexOriginCommon:n,binIdRange:i,aggregatorViewport:s})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const n=this.getCurrentLayer().props,{aggregator:i}=this.state;if(0===t){const e=i.getResult(0);this.setState({colors:new h.bg(e,i.binCount)}),n.onSetColorDomain(i.getResultDomain(0))}else if(1===t){const e=i.getResult(1);this.setState({elevations:new h.bg(e,i.binCount)}),n.onSetElevationDomain(i.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:n,binIdRange:i}=this.state;t.setProps({binIdRange:i,binOptions:{radiusCommon:e,hexOriginCommon:n}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:n,radiusCommon:i,hexOriginCommon:s}=this.state,{elevationScale:o,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:h,colorScaleType:u,lowerPercentile:p,upperPercentile:g,colorDomain:f,elevationScaleType:m,elevationLowerPercentile:y,elevationUpperPercentile:b,elevationDomain:w}=this.props,_=this.getSubLayerClass("cells",S),x=n.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:u,lowerPercentile:p,upperPercentile:g}),C=null==(t=this.state.elevations)?void 0:t.update({scaleType:m,lowerPercentile:y,upperPercentile:b});return P&&C?new _(this.getSubLayerProps({id:"cells"}),{data:{length:n.binCount,attributes:{getBin:x,getColorValue:P.attribute,getElevationValue:C.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[x],getColorValue:[P.attribute],getElevationValue:[C.attribute]},diskResolution:6,vertices:v,radius:i,hexOriginCommon:s,elevationScale:o,colorRange:r,colorScaleType:u,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||n.getResultDomain(0),elevationDomain:C.domain||w||n.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:C.cutoff,transitions:h&&{getFillColor:h.getColorValue||h.getColorWeight,getElevation:h.getElevationValue||h.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:n}=t;if(n>=0){const e=this.state.aggregator.getBin(n);let i;if(e){const t=w(e.id,this.state.radiusCommon),n=this.context.viewport.unprojectFlat(t);i={col:e.id[0],row:e.id[1],position:n,colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(i.pointIndices=e.pointIndices,i.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])}t.object=i}return t}}T.layerName="HexagonLayer",T.defaultProps=M;const E=T},44274:(e,t,n)=>{n.d(t,{A:()=>y});var i=n(30428),s=n(57149),o=n(52601),r=n(29586),a=n(51771),l=n(25337),c=n(3002),d=n(28756),h=n(58213);const u={name:"screenGrid",vs:"uniform screenGridUniforms {\n  vec2 cellSizeClipspace;\n  vec2 gridSizeClipspace;\n  vec2 colorDomain;\n} screenGrid;\n",uniformTypes:{cellSizeClipspace:"vec2<f32>",gridSizeClipspace:"vec2<f32>",colorDomain:"vec2<f32>"}};class p extends c.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-vertex-shader\n#define RANGE_COUNT 6\nin vec2 positions;\nin vec2 instancePositions;\nin float instanceWeights;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\nif (isnan(instanceWeights)) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 pos = instancePositions * screenGrid.gridSizeClipspace + positions * screenGrid.cellSizeClipspace;\npos.x = pos.x - 1.0;\npos.y = 1.0 - pos.y;\ngl_Position = vec4(pos, 0., 1.);\nvColor = interp(instanceWeights, screenGrid.colorDomain, colorRange);\nvColor.a *= layer.opacity;\npicking_setPickingColor(instancePickingColors);\n}\n",fs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[d.A,u]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceWeights:{size:1,type:"float32",accessor:"getWeight"}}),this.state.model=this._getModel()}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e,s=this.state.model;if(n.colorRange!==t.colorRange){var o;null==(o=this.state.colorTexture)||o.destroy(),this.state.colorTexture=(0,h.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};s.shaderInputs.setProps({screenGrid:e})}else n.colorScaleType!==t.colorScaleType&&(0,h.Pu)(this.state.colorTexture,t.colorScaleType);if(n.cellMarginPixels!==t.cellMarginPixels||n.cellSizePixels!==t.cellSizePixels||i.viewportChanged){const{width:e,height:t}=this.context.viewport,{cellSizePixels:n,cellMarginPixels:i}=this.props,o=Math.max(n-i,0),r={gridSizeClipspace:[n/e*2,n/t*2],cellSizeClipspace:[o/e*2,o/t*2]};s.shaderInputs.setProps({screenGrid:r})}}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const n=this.props.colorDomain(),i=this.state.model,s={colorDomain:n};i.shaderInputs.setProps({screenGrid:s}),i.draw(this.context.renderPass)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-strip",attributes:{positions:{value:new Float32Array([0,0,1,0,0,1,1,1]),size:2}}}),isInstanced:!0}))}}p.layerName="ScreenGridCellLayer";const g=p,f={name:"binOptions",vs:"uniform binOptionsUniforms {\n  float cellSizePixels;\n} binOptions;\n",uniformTypes:{cellSizePixels:"f32"}},m={cellSizePixels:{type:"number",value:100,min:1},cellMarginPixels:{type:"number",value:2,min:0},colorRange:h.QO,colorScaleType:"linear",getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"};class v extends r.A{getAggregatorType(){return this.props.gpuAggregation&&s.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"!==e&&s.V.isSupported(this.context.device)?new s.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[i.A,f],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n  \n  void getBin(out ivec2 binId) {\n    vec4 pos = project_position_to_clipspace(positions, positions64Low, vec3(0.0));\n    vec2 screenCoords = vec2(pos.x / pos.w + 1.0, 1.0 - pos.y / pos.w) / 2.0 * project.viewportSize / project.devicePixelRatio;\n    vec2 gridCoords = floor(screenCoords / binOptions.cellSizePixels);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float weight) {\n    weight = counts;\n  }\n  "}))):new o.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,n)=>{let{positions:i}=e;const s=this.context.viewport,o=s.project(i),r=n.cellSizePixels;return o[0]<0||o[0]>=s.width||o[1]<0||o[1]>=s.height?null:[Math.floor(o[0]/r),Math.floor(o[1]/r)]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}]})}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){const t=super.updateState(e),{props:n,oldProps:i,changeFlags:o}=e,{cellSizePixels:r,aggregation:a}=n;if(t||o.dataChanged||o.updateTriggersChanged||o.viewportChanged||a!==i.aggregation||r!==i.cellSizePixels){const{width:e,height:t}=this.context.viewport,{aggregator:n}=this.state;n instanceof s.V&&n.setProps({binIdRange:[[0,Math.ceil(e/r)],[0,Math.ceil(t/r)]]}),n.setProps({pointCount:this.getNumInstances(),operations:[a],binOptions:{cellSizePixels:r}})}return o.viewportChanged&&this.state.aggregator.setNeedsUpdate(),t}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate();break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const{aggregator:e}=this.state,t=this.getSubLayerClass("cells",g),n=e.getBins(),i=e.getResult(0);return new t(this.props,this.getSubLayerProps({id:"cell-layer"}),{data:{length:e.binCount,attributes:{getBin:n,getWeight:i}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[n],getWeight:[i]},parameters:Object.assign({depthWriteEnabled:!1},this.props.parameters),colorDomain:()=>this.props.colorDomain||e.getResultDomain(0),extensions:[]})}getPickingInfo(e){const t=e.info,{index:n}=t;if(n>=0){const e=this.state.aggregator.getBin(n);let i;e&&(i={col:e.id[0],row:e.id[1],value:e.value[0],count:e.count},e.pointIndices&&(i.pointIndices=e.pointIndices,i.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=i}return t}}v.layerName="ScreenGridLayer",v.defaultProps=m;const y=v},27962:(e,t,n)=>{n.d(t,{A:()=>w});var i=n(50948);const s=()=>{},o=2,r=3,a=e=>e,l=1;class c{constructor(e){this._onTransitionUpdate=e=>{const{time:t,settings:{interpolator:n,startProps:i,endProps:s,duration:o,easing:r}}=e,a=r(t/o),l=n.interpolateProps(i,s,a);this.propsInTransition=this.getControllerState(Object.assign({},this.props,l)).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=e.getControllerState,this.propsInTransition=null,this.transition=new i.A(e.timeline),this.onViewStateChange=e.onViewStateChange||s,this.onStateChange=e.onStateChange||s}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(e){let t=!1;const n=this.props;if(this.props=e,!n||this._shouldIgnoreViewportChange(n,e))return!1;if(this._isTransitionEnabled(e)){let i=n;if(this.transition.inProgress){const{interruption:e,endProps:t}=this.transition.settings;i=Object.assign({},n,e===o?t:this.propsInTransition||n)}this._triggerTransition(i,e),t=!0}else this.transition.cancel();return t}updateTransition(){this.transition.update()}_isTransitionEnabled(e){const{transitionDuration:t,transitionInterpolator:n}=e;return(t>0||"auto"===t)&&Boolean(n)}_isUpdateDueToCurrentTransition(e){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(e,this.propsInTransition)}_shouldIgnoreViewportChange(e,t){if(this.transition.inProgress){return this.transition.settings.interruption===r||this._isUpdateDueToCurrentTransition(t)}return!this._isTransitionEnabled(t)||t.transitionInterpolator.arePropsEqual(e,t)}_triggerTransition(e,t){const n=this.getControllerState(e),i=this.getControllerState(t).shortestPathFrom(n),s=t.transitionInterpolator,o=s.getDuration?s.getDuration(e,t):t.transitionDuration;if(0===o)return;const r=s.initializeProps(e,i);this.propsInTransition={};const c={duration:o,easing:t.transitionEasing||a,interpolator:s,interruption:t.transitionInterruption||l,startProps:r.start,endProps:r.end,onStart:t.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(t.onTransitionInterrupt),onEnd:this._onTransitionEnd(t.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(e){return t=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==e||e(t)}}}var d=n(58662);const h={transitionDuration:0},u=e=>1-(1-e)*(1-e),p=["wheel"],g=["panstart","panmove","panend"],f=["pinchstart","pinchmove","pinchend"],m=["multipanstart","multipanmove","multipanend"],v=["dblclick"],y=["keydown"],b={};class w{constructor(e){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new c(Object.assign({},e,{getControllerState:e=>new this.ControllerState(e),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)})),this.handleEvent=this.handleEvent.bind(this),this.eventManager=e.eventManager,this.onViewStateChange=e.onViewStateChange||(()=>{}),this.onStateChange=e.onStateChange||(()=>{}),this.makeViewport=e.makeViewport}set events(e){this.toggleEvents(this._customEvents,!1),this.toggleEvents(e,!0),this._customEvents=e,this.props&&this.setProps(this.props)}finalize(){for(const t in this._events){var e;if(this._events[t])null==(e=this.eventManager)||e.off(t,this.handleEvent)}this.transitionManager.finalize()}handleEvent(e){this._controllerState=void 0;const t=this._eventStartBlocked;switch(e.type){case"panstart":return!t&&this._onPanStart(e);case"panmove":return this._onPan(e);case"panend":return this._onPanEnd(e);case"pinchstart":return!t&&this._onPinchStart(e);case"pinchmove":return this._onPinch(e);case"pinchend":return this._onPinchEnd(e);case"multipanstart":return!t&&this._onMultiPanStart(e);case"multipanmove":return this._onMultiPan(e);case"multipanend":return this._onMultiPanEnd(e);case"dblclick":return this._onDoubleClick(e);case"wheel":return this._onWheel(e);case"keydown":return this._onKeyDown(e);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState(Object.assign({makeViewport:this.makeViewport},this.props,this.state)),this._controllerState}getCenter(e){const{x:t,y:n}=this.props,{offsetCenter:i}=e;return[i.x-t,i.y-n]}isPointInBounds(e,t){const{width:n,height:i}=this.props;if(t&&t.handled)return!1;const s=e[0]>=0&&e[0]<=n&&e[1]>=0&&e[1]<=i;return s&&t&&t.stopPropagation(),s}isFunctionKeyPressed(e){const{srcEvent:t}=e;return Boolean(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(e){const t=setTimeout((()=>{this._eventStartBlocked===t&&(this._eventStartBlocked=null)}),e);this._eventStartBlocked=t}setProps(e){e.dragMode&&(this.dragMode=e.dragMode),this.props=e,"transitionInterpolator"in e||(e.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(e);const{inertia:t}=e;this.inertia=Number.isFinite(t)?t:!0===t?300:0;const{scrollZoom:n=!0,dragPan:i=!0,dragRotate:s=!0,doubleClickZoom:o=!0,touchZoom:r=!0,touchRotate:a=!1,keyboard:l=!0}=e,c=Boolean(this.onViewStateChange);this.toggleEvents(p,c&&n),this.toggleEvents(g,c),this.toggleEvents(f,c&&(r||a)),this.toggleEvents(m,c&&a),this.toggleEvents(v,c&&o),this.toggleEvents(y,c&&l),this.scrollZoom=n,this.dragPan=i,this.dragRotate=s,this.doubleClickZoom=o,this.touchZoom=r,this.touchRotate=a,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(e,t){this.eventManager&&e.forEach((e=>{this._events[e]!==t&&(this._events[e]=t,t?this.eventManager.on(e,this.handleEvent):this.eventManager.off(e,this.handleEvent))}))}updateViewport(e,t,n){void 0===t&&(t=null),void 0===n&&(n={});const i=Object.assign({},e.getViewportProps(),t),s=this.controllerState!==e;if(this.state=e.getState(),this._setInteractionState(n),s){const e=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:i,interactionState:this._interactionState,oldViewState:e,viewId:this.props.id})}}_onTransition(e){this.onViewStateChange(Object.assign({},e,{interactionState:this._interactionState,viewId:this.props.id}))}_setInteractionState(e){Object.assign(this._interactionState,e),this.onStateChange(this._interactionState)}_onPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;let n=this.isFunctionKeyPressed(e)||e.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(n=!n);const i=this.controllerState[n?"panStart":"rotateStart"]({pos:t});return this._panMove=n,this.updateViewport(i,h,{isDragging:!0}),!0}_onPan(e){return!!this.isDragging()&&(this._panMove?this._onPanMove(e):this._onPanRotate(e))}_onPanEnd(e){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(e):this._onPanRotateEnd(e))}_onPanMove(e){if(!this.dragPan)return!1;const t=this.getCenter(e),n=this.controllerState.pan({pos:t});return this.updateViewport(n,h,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(e){const{inertia:t}=this;if(this.dragPan&&t&&e.velocity){const n=this.getCenter(e),i=[n[0]+e.velocityX*t/2,n[1]+e.velocityY*t/2],s=this.controllerState.pan({pos:i}).panEnd();this.updateViewport(s,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isPanning:!0})}else{const e=this.controllerState.panEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(e){if(!this.dragRotate)return!1;const t=this.getCenter(e),n=this.controllerState.rotate({pos:t});return this.updateViewport(n,h,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(e){const{inertia:t}=this;if(this.dragRotate&&t&&e.velocity){const n=this.getCenter(e),i=[n[0]+e.velocityX*t/2,n[1]+e.velocityY*t/2],s=this.controllerState.rotate({pos:i}).rotateEnd();this.updateViewport(s,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isRotating:!0})}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(e){if(!this.scrollZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;e.srcEvent.preventDefault();const{speed:n=.01,smooth:i=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:s}=e;let o=2/(1+Math.exp(-Math.abs(s*n)));s<0&&0!==o&&(o=1/o);const r=this.controllerState.zoom({pos:t,scale:o});return this.updateViewport(r,Object.assign({},this._getTransitionProps({around:t}),{transitionDuration:i?250:1}),{isZooming:!0,isPanning:!0}),!0}_onMultiPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.controllerState.rotateStart({pos:t});return this.updateViewport(n,h,{isDragging:!0}),!0}_onMultiPan(e){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const t=this.getCenter(e);t[0]-=e.deltaX;const n=this.controllerState.rotate({pos:t});return this.updateViewport(n,h,{isDragging:!0,isRotating:!0}),!0}_onMultiPanEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this;if(this.touchRotate&&t&&e.velocityY){const n=this.getCenter(e),i=[n[0],n[1]+=e.velocityY*t/2],s=this.controllerState.rotate({pos:i});this.updateViewport(s,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isRotating:!0}),this.blockEvents(t)}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.controllerState.zoomStart({pos:t}).rotateStart({pos:t});return b._startPinchRotation=e.rotation,b._lastPinchEvent=e,this.updateViewport(n,h,{isDragging:!0}),!0}_onPinch(e){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let t=this.controllerState;if(this.touchZoom){const{scale:n}=e,i=this.getCenter(e);t=t.zoom({pos:i,scale:n})}if(this.touchRotate){const{rotation:n}=e;t=t.rotate({deltaAngleX:b._startPinchRotation-n})}return this.updateViewport(t,h,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),b._lastPinchEvent=e,!0}_onPinchEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this,{_lastPinchEvent:n}=b;if(this.touchZoom&&t&&n&&e.scale!==n.scale){const i=this.getCenter(e);let s=this.controllerState.rotateEnd();const o=Math.log2(e.scale),r=(o-Math.log2(n.scale))/(e.deltaTime-n.deltaTime),a=Math.pow(2,o+r*t/2);s=s.zoom({pos:i,scale:a}).zoomEnd(),this.updateViewport(s,Object.assign({},this._getTransitionProps({around:i}),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(t)}else{const e=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return b._startPinchRotation=null,b._lastPinchEvent=null,!0}_onDoubleClick(e){if(!this.doubleClickZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const n=this.isFunctionKeyPressed(e),i=this.controllerState.zoom({pos:t,scale:n?.5:2});return this.updateViewport(i,this._getTransitionProps({around:t}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(e){if(!this.keyboard)return!1;const t=this.isFunctionKeyPressed(e),{zoomSpeed:n,moveSpeed:i,rotateSpeedX:s,rotateSpeedY:o}=!0===this.keyboard?{}:this.keyboard,{controllerState:r}=this;let a;const l={};switch(e.srcEvent.code){case"Minus":a=t?r.zoomOut(n).zoomOut(n):r.zoomOut(n),l.isZooming=!0;break;case"Equal":a=t?r.zoomIn(n).zoomIn(n):r.zoomIn(n),l.isZooming=!0;break;case"ArrowLeft":t?(a=r.rotateLeft(s),l.isRotating=!0):(a=r.moveLeft(i),l.isPanning=!0);break;case"ArrowRight":t?(a=r.rotateRight(s),l.isRotating=!0):(a=r.moveRight(i),l.isPanning=!0);break;case"ArrowUp":t?(a=r.rotateUp(o),l.isRotating=!0):(a=r.moveUp(i),l.isPanning=!0);break;case"ArrowDown":t?(a=r.rotateDown(o),l.isRotating=!0):(a=r.moveDown(i),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(e){const{transition:t}=this;return t&&t.transitionInterpolator?e?Object.assign({},t,{transitionInterpolator:new d.A(Object.assign({},e,t.transitionInterpolator.opts,{makeViewport:this.controllerState.makeViewport}))}):t:h}}},67797:(e,t,n)=>{n.d(t,{A:()=>d,y:()=>c});var i=n(54901),s=n(27962),o=n(43221),r=n(24697),a=n(95238),l=n(58662);class c extends o.A{constructor(e){const{width:t,height:n,latitude:i,longitude:s,zoom:o,bearing:r=0,pitch:l=0,altitude:c=1.5,position:d=[0,0,0],maxZoom:h=20,minZoom:u=0,maxPitch:p=60,minPitch:g=0,startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:b,startZoom:w,normalize:_=!0}=e;(0,a.A)(Number.isFinite(s)),(0,a.A)(Number.isFinite(i)),(0,a.A)(Number.isFinite(o)),super({width:t,height:n,latitude:i,longitude:s,zoom:o,bearing:r,pitch:l,altitude:c,maxZoom:h,minZoom:u,maxPitch:p,minPitch:g,normalize:_,position:d},{startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:b,startZoom:w}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan(e){let{pos:t,startPos:n}=e;const i=this.getState().startPanLngLat||this._unproject(n);if(!i)return this;const s=this.makeViewport(this.getViewportProps()).panByPosition(i,t);return this._getUpdatedState(s)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(e){let{pos:t,deltaAngleX:n=0,deltaAngleY:i=0}=e;const{startRotatePos:s,startBearing:o,startPitch:r}=this.getState();if(!s||void 0===o||void 0===r)return this;let a;return a=t?this._getNewRotation(t,s,r,o):{bearing:o+n,pitch:r+i},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart(e){let{pos:t}=e;return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom(e){let{pos:t,startPos:n,scale:s}=e,{startZoom:o,startZoomLngLat:r}=this.getState();if(r||(o=this.getViewportProps().zoom,r=this._unproject(n)||this._unproject(t)),!r)return this;const{maxZoom:a,minZoom:l}=this.getViewportProps();let c=o+Math.log2(s);c=(0,i.qE)(c,l,a);const d=this.makeViewport(Object.assign({},this.getViewportProps(),{zoom:c}));return this._getUpdatedState(Object.assign({zoom:c},d.panByPosition(r,t)))}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(e){return void 0===e&&(e=2),this._zoomFromCenter(e)}zoomOut(e){return void 0===e&&(e=2),this._zoomFromCenter(1/e)}moveLeft(e){return void 0===e&&(e=100),this._panFromCenter([e,0])}moveRight(e){return void 0===e&&(e=100),this._panFromCenter([-e,0])}moveUp(e){return void 0===e&&(e=100),this._panFromCenter([0,e])}moveDown(e){return void 0===e&&(e=100),this._panFromCenter([0,-e])}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-e})}shortestPathFrom(e){const t=e.getViewportProps(),n=Object.assign({},this.getViewportProps()),{bearing:i,longitude:s}=n;return Math.abs(i-t.bearing)>180&&(n.bearing=i<0?i+360:i-360),Math.abs(s-t.longitude)>180&&(n.longitude=s<0?s+360:s-360),n}applyConstraints(e){const{maxZoom:t,minZoom:n,zoom:s}=e;e.zoom=(0,i.qE)(s,n,t);const{maxPitch:o,minPitch:a,pitch:l}=e;e.pitch=(0,i.qE)(l,a,o);const{normalize:c=!0}=e;return c&&Object.assign(e,(0,r.CK)(e)),e}_zoomFromCenter(e){const{width:t,height:n}=this.getViewportProps();return this.zoom({pos:[t/2,n/2],scale:e})}_panFromCenter(e){const{width:t,height:n}=this.getViewportProps();return this.pan({startPos:[t/2,n/2],pos:[t/2+e[0],n/2+e[1]]})}_getUpdatedState(e){return new this.constructor(Object.assign({makeViewport:this.makeViewport},this.getViewportProps(),this.getState(),e))}_unproject(e){const t=this.makeViewport(this.getViewportProps());return e&&t.unproject(e)}_getNewRotation(e,t,n,s){const o=e[0]-t[0],r=e[1]-t[1],a=e[1],l=t[1],{width:c,height:d}=this.getViewportProps(),h=o/c;let u=0;r>0?Math.abs(d-l)>5&&(u=r/(l-d)*1.2):r<0&&l>5&&(u=1-a/l),u=(0,i.qE)(u,-1,1);const{minPitch:p,maxPitch:g}=this.getViewportProps();let f=n;return u>0?f=n+u*(g-n):u<0&&(f=n-u*(p-n)),{pitch:f,bearing:s+180*h}}}class d extends s.A{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.A({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(e){e.position=e.position||[0,0,0];const t=this.props;super.setProps(e);(!t||t.height!==e.height)&&this.updateViewport(new this.ControllerState(Object.assign({makeViewport:this.makeViewport},e,this.state)))}}},43221:(e,t,n)=>{n.d(t,{A:()=>i});class i{constructor(e,t){this._viewportProps=this.applyConstraints(e),this._state=t}getViewportProps(){return this._viewportProps}getState(){return this._state}}},95656:(e,t,n)=>{n.d(t,{A:()=>r,k:()=>o});var i=n(18120);let s={};function o(e){s=e}function r(e,t,n,o){i.A.level>0&&s[e]&&s[e].call(null,t,n,o)}},58035:(e,t,n)=>{n.d(t,{$:()=>r});const i=[255,255,255],s=1;let o=0;class r{constructor(e){void 0===e&&(e={}),this.type="ambient";const{color:t=i}=e,{intensity:n=s}=e;this.id=e.id||"ambient-"+o++,this.color=t,this.intensity=n}}},55207:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(87597);const s=[255,255,255],o=1,r=[0,0,-1];let a=0;class l{constructor(e){void 0===e&&(e={}),this.type="directional";const{color:t=s}=e,{intensity:n=o}=e,{direction:l=r}=e,{_shadow:c=!1}=e;this.id=e.id||"directional-"+a++,this.color=t,this.intensity=n,this.type="directional",this.direction=new i.P(l).normalize().toArray(),this.shadow=c}getProjectedLight(e){return this}}},55443:(e,t,n)=>{n.d(t,{A:()=>S});var i=n(58035),s=n(55207),o=n(31886),r=n(87597),a=n(44584);class l extends a.A{constructor(e,t){super(e,t);const n=e.createTexture({format:"rgba8unorm",width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},mipmaps:!0}),i=e.createTexture({format:"depth16unorm",width:1,height:1,mipmaps:!1});this.fbo=e.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[n],depthStencilAttachment:i})}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null)}getShadowMap(){return this.fbo.colorAttachments[0].texture}render(e){const t=this.fbo,n=this.device.canvasContext.cssToDeviceRatio(),i=e.viewports[0],s=i.width*n,o=i.height*n;s===t.width&&o===t.height||t.resize({width:s,height:o}),super.render(Object.assign({},e,{clearColor:[1,1,1,1],target:t,pass:"shadow"}))}getLayerParameters(e,t,n){return Object.assign({},e.props.parameters,{blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"})}shouldDrawLayer(e){return!1!==e.props.shadowEnabled}getShaderModuleProps(e,t,n){return{shadow:{project:n.project,drawToShadowMap:!0}}}}var c=n(8961),d=n(97272),h=n(63190),u=n(24697);const p="\nuniform shadowUniforms {\n  bool drawShadowMap;\n  bool useShadowMap;\n  vec4 color;\n  highp int lightId;\n  float lightCount;\n  mat4 viewProjectionMatrix0;\n  mat4 viewProjectionMatrix1;\n  vec4 projectCenter0;\n  vec4 projectCenter1;\n} shadow;\n",g="\n"+p+"\n\nconst int max_lights = 2;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  mat4 viewProjectionMatrices[max_lights];\n  viewProjectionMatrices[0] = shadow.viewProjectionMatrix0;\n  viewProjectionMatrices[1] = shadow.viewProjectionMatrix1;\n  vec4 projectCenters[max_lights];\n  projectCenters[0] = shadow.projectCenter0;\n  projectCenters[1] = shadow.projectCenter1;\n\n  if (shadow.drawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[shadow.lightId], projectCenters[shadow.lightId]);\n  }\n  if (shadow.useShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow.lightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[i], projectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n\n",f="\n"+p+"\n\nconst int max_lights = 2;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow.drawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow.useShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow.lightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow.color.a / shadow.lightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow.color.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n\n",m=(0,h.A)((function(e){let{viewport:t,center:n}=e;return new o.k(t.viewProjectionMatrix).invert().transform(n)})),v=(0,h.A)((function(e){let{viewport:t,shadowMatrices:n}=e;const i=[],s=t.pixelUnprojectionMatrix,a=t.isGeospatial?void 0:1,l=[[0,0,a],[t.width,0,a],[0,t.height,a],[t.width,t.height,a],[0,0,-1],[t.width,0,-1],[0,t.height,-1],[t.width,t.height,-1]].map((e=>function(e,t){const[n,i,s]=e,o=(0,u.xJ)([n,i,s],t);if(Number.isFinite(s))return o;return[o[0],o[1],0]}(e,s)));for(const c of n){const e=c.clone().translate(new r.P(t.center).negate()),n=l.map((t=>e.transform(t))),s=(new o.k).ortho({left:Math.min(...n.map((e=>e[0]))),right:Math.max(...n.map((e=>e[0]))),bottom:Math.min(...n.map((e=>e[1]))),top:Math.max(...n.map((e=>e[1]))),near:Math.min(...n.map((e=>-e[2]))),far:Math.max(...n.map((e=>-e[2])))});i.push(s.multiplyRight(c))}return i})),y=[0,0,0,1],b=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const w={name:"shadow",dependencies:[d.A],vs:g,fs:f,inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:function(e){const{shadowEnabled:t=!0,project:n}=e;if(!(t&&n&&e.shadowMatrices&&e.shadowMatrices.length))return{drawShadowMap:!1,useShadowMap:!1,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};const i=d.A.getUniforms(n),s=m({viewport:n.viewport,center:i.center}),o=[],a=v({shadowMatrices:e.shadowMatrices,viewport:n.viewport}).slice();for(let d=0;d<e.shadowMatrices.length;d++){const e=a[d],t=e.clone().translate(new r.P(n.viewport.center).negate());i.coordinateSystem===c.rf.LNGLAT&&i.projectionMode===c.Kx.WEB_MERCATOR?(a[d]=t,o[d]=s):(a[d]=e.clone().multiplyRight(b),o[d]=t.transform(s))}const l={drawShadowMap:Boolean(e.drawToShadowMap),useShadowMap:!!e.shadowMaps&&e.shadowMaps.length>0,color:e.shadowColor||y,lightId:e.shadowLightId||0,lightCount:e.shadowMatrices.length,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};for(let r=0;r<a.length;r++)l["viewProjectionMatrix"+r]=a[r],l["projectCenter"+r]=o[r];for(let r=0;r<2;r++)l["shadow_uShadowMap"+r]=e.shadowMaps&&e.shadowMaps[r]||e.dummyShadowMap;return l},uniformTypes:{drawShadowMap:"f32",useShadowMap:"f32",color:"vec4<f32>",lightId:"i32",lightCount:"f32",viewProjectionMatrix0:"mat4x4<f32>",viewProjectionMatrix1:"mat4x4<f32>",projectCenter0:"vec4<f32>",projectCenter1:"vec4<f32>"}},_={color:[255,255,255],intensity:1},x=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],P=[0,0,0,200/255];class S{constructor(e){void 0===e&&(e={}),this.id="lighting-effect",this.shadowColor=P,this.shadow=!1,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.dummyShadowMap=null,this.setProps(e)}setup(e){this.context=e;const{device:t,deck:n}=e;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(t),n._addDefaultShaderModule(w),this.dummyShadowMap=t.createTexture({width:1,height:1}))}setProps(e){this.ambientLight=void 0,this.directionalLights=[],this.pointLights=[];for(const t in e){const n=e[t];switch(n.type){case"ambient":this.ambientLight=n;break;case"directional":this.directionalLights.push(n);break;case"point":this.pointLights.push(n)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((e=>e.shadow)),this.context&&this.setup(this.context),this.props=e}preRender(e){let{layers:t,layerFilter:n,viewports:i,onViewportActive:s,views:o}=e;if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let e=0;e<this.shadowPasses.length;e++){this.shadowPasses[e].render({layers:t,layerFilter:n,viewports:i,onViewportActive:s,views:o,shaderModuleProps:{shadow:{shadowLightId:e,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}}})}}}getShaderModuleProps(e,t){const n=this.shadow?{project:t.project,shadowMaps:this.shadowPasses.map((e=>e.getShadowMap())),dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{},i={enabled:!0,ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((t=>t.getProjectedLight({layer:e}))),pointLights:this.pointLights.map((t=>t.getProjectedLight({layer:e})))},s=e.props.material;return{shadow:n,lighting:i,phongMaterial:s,gouraudMaterial:s}}cleanup(e){for(const t of this.shadowPasses)t.delete();this.shadowPasses.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,e.deck._removeDefaultShaderModule(w))}_calculateMatrices(){const e=[];for(const t of this.directionalLights){const n=(new o.k).lookAt({eye:new r.P(t.direction).negate()});e.push(n)}return e}_createShadowPasses(e){for(let t=0;t<this.directionalLights.length;t++){const n=new l(e);this.shadowPasses[t]=n}}_applyDefaultLights(){const{ambientLight:e,pointLights:t,directionalLights:n}=this;e||0!==t.length||0!==n.length||(this.ambientLight=new i.$(_),this.directionalLights.push(new s.Z(x[0]),new s.Z(x[1])))}}},1570:(e,t,n)=>{n.d(t,{A:()=>B});var i=n(26839),s=n(84529);const o=s.UE;function r(e,t){return{attribute:e,format:t.size>1?t.type+"x"+t.size:t.type,byteOffset:t.offset||0}}function a(e){return e.stride||e.size*e.bytesPerElement}var l=n(81052),c=n(87350),d=n(18120);function h(e,t){t.offset&&d.A.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const n=a(e),i=(void 0!==t.vertexOffset?t.vertexOffset:e.vertexOffset||0)*n+(t.elementOffset||0)*e.bytesPerElement+(e.offset||0);return Object.assign({},t,{offset:i,stride:n})}class u{constructor(e,t,n){this._buffer=null,this.device=e,this.id=t.id||"",this.size=t.size||1;const i=t.logicalType||t.type,o="float64"===i;let r,{defaultValue:a}=t;a=Number.isFinite(a)?[a]:a||new Array(this.size).fill(0),r=o?"float32":!i&&t.isIndexed?"uint32":i||"float32";let l=function(e){switch(e){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return(0,s.Y0)(e)}}(i||r);this.doublePrecision=o,o&&!1===t.fp64&&(l=Float32Array),this.value=null,this.settings=Object.assign({},t,{defaultType:l,defaultValue:a,logicalType:i,type:r,normalized:r.includes("norm"),size:this.size,bytesPerElement:l.BYTES_PER_ELEMENT}),this.state=Object.assign({},n,{externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1})}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const e=this.getAccessor();return e.vertexOffset?e.vertexOffset*a(e):0}get numInstances(){return this.state.numInstances}set numInstances(e){this.state.numInstances=e}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),l.A.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const n={};if(this.state.constant){const i=this.value;if(t){const s=h(this.getAccessor(),t),o=s.offset/i.BYTES_PER_ELEMENT,r=s.size||this.size;n[e]=i.subarray(o,o+r)}else n[e]=i}else n[e]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?n[e+"64Low"]=n[e]:n[e+"64Low"]=new Float32Array(this.size)),n}_getBufferLayout(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const n=this.getAccessor(),i=[],s={name:this.id,byteStride:a(n),attributes:i};if(this.doublePrecision){const s=function(e,t){const n=h(e,t);return{high:n,low:Object.assign({},n,{offset:n.offset+4*e.size})}}(n,t||{});i.push(r(e,Object.assign({},n,s.high)),r(e+"64Low",Object.assign({},n,s.low)))}else if(t){const s=h(n,t);i.push(r(e,Object.assign({},n,s)))}else i.push(r(e,n));return s}setAccessor(e){this.state.bufferAccessor=e}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let e=null;if(this.state.constant&&this.value){const t=Array.from(this.value);e=[t,t]}else{const{value:t,numInstances:n,size:i}=this,s=n*i;if(t&&s&&t.length>=s){const n=new Array(i).fill(1/0),o=new Array(i).fill(-1/0);for(let e=0;e<s;)for(let s=0;s<i;s++){const i=t[e++];i<n[s]&&(n[s]=i),i>o[s]&&(o[s]=i)}e=[n,o]}}return this.state.bounds=e,e}setData(e){const{state:t}=this;let n;n=ArrayBuffer.isView(e)?{value:e}:e instanceof i.h?{buffer:e}:e;const s=Object.assign({},this.settings,n);if(ArrayBuffer.isView(n.value)){if(!n.type){if(this.doublePrecision&&n.value instanceof Float64Array)s.type="float32";else{const e=o(n.value);s.type=s.normalized?e.replace("int","norm"):e}}s.bytesPerElement=n.value.BYTES_PER_ELEMENT,s.stride=a(s)}if(t.bounds=null,n.constant){let e=n.value;e=this._normalizeValue(e,[],0),this.settings.normalized&&(e=this.normalizeConstant(e));if(!(!t.constant||!this._areValuesEqual(e,this.value)))return!1;t.externalBuffer=null,t.constant=!0,this.value=ArrayBuffer.isView(e)?e:new Float32Array(e)}else if(n.buffer){const e=n.buffer;t.externalBuffer=e,t.constant=!1,this.value=n.value||null}else if(n.value){this._checkExternalBuffer(n);let e=n.value;t.externalBuffer=null,t.constant=!1,this.value=e;let{buffer:i}=this;const o=a(s),r=(s.vertexOffset||0)*o;if(this.doublePrecision&&e instanceof Float64Array&&(e=(0,c.cT)(e,s)),this.settings.isIndexed){const t=this.settings.defaultType;e.constructor!==t&&(e=new t(e))}const l=e.byteLength+r+2*o;(!i||i.byteLength<l)&&(i=this._createBuffer(l)),i.write(e,r)}return this.setAccessor(s),!0}updateSubBuffer(e){void 0===e&&(e={}),this.state.bounds=null;const t=this.value,{startOffset:n=0,endOffset:i}=e;this.buffer.write(this.doublePrecision&&t instanceof Float64Array?(0,c.cT)(t,{size:this.size,startIndex:n,endIndex:i}):t.subarray(n,i),n*t.BYTES_PER_ELEMENT+this.byteOffset)}allocate(e,t){void 0===t&&(t=!1);const{state:n}=this,i=n.allocatedValue,s=l.A.allocate(i,e+1,{size:this.size,type:this.settings.defaultType,copy:t});this.value=s;const{byteOffset:o}=this;let{buffer:r}=this;return(!r||r.byteLength<s.byteLength+o)&&(r=this._createBuffer(s.byteLength+o),t&&i&&r.write(i instanceof Float64Array?(0,c.cT)(i,this):i,o)),n.allocatedValue=s,n.constant=!1,n.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(e){const{value:t}=e;if(!ArrayBuffer.isView(t))throw new Error("Attribute "+this.id+" value is not TypedArray");const n=this.settings.defaultType;let i=!1;if(this.doublePrecision&&(i=t.BYTES_PER_ELEMENT<4),i)throw new Error("Attribute "+this.id+" does not support "+t.constructor.name);t instanceof n||!this.settings.normalized||"normalized"in e||d.A.warn("Attribute "+this.id+" is normalized")()}normalizeConstant(e){switch(this.settings.type){case"snorm8":return new Float32Array(e).map((e=>(e+128)/255*2-1));case"snorm16":return new Float32Array(e).map((e=>(e+32768)/65535*2-1));case"unorm8":return new Float32Array(e).map((e=>e/255));case"unorm16":return new Float32Array(e).map((e=>e/65535));default:return e}}_normalizeValue(e,t,n){const{defaultValue:i,size:s}=this.settings;if(Number.isFinite(e))return t[n]=e,t;if(!e){let e=s;for(;--e>=0;)t[n+e]=i[e];return t}switch(s){case 4:t[n+3]=Number.isFinite(e[3])?e[3]:i[3];case 3:t[n+2]=Number.isFinite(e[2])?e[2]:i[2];case 2:t[n+1]=Number.isFinite(e[1])?e[1]:i[1];case 1:t[n+0]=Number.isFinite(e[0])?e[0]:i[0];break;default:let o=s;for(;--o>=0;)t[n+o]=Number.isFinite(e[o])?e[o]:i[o]}return t}_areValuesEqual(e,t){if(!e||!t)return!1;const{size:n}=this;for(let i=0;i<n;i++)if(e[i]!==t[i])return!1;return!0}_createBuffer(e){var t;this._buffer&&this._buffer.destroy();const{isIndexed:n,type:s}=this.settings;return this._buffer=this.device.createBuffer(Object.assign({},null==(t=this._buffer)?void 0:t.props,{id:this.id,usage:n?i.h.INDEX:i.h.VERTEX,indexType:n?s:void 0,byteLength:e})),this._buffer}}var p=n(95238),g=n(33698),f=n(13696);const m=[],v=[[0,1/0]];var y=n(39976);class b extends u{constructor(e,t){super(e,t,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:v}),this.constant=!1,this.settings.update=t.update||(t.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(e){this.state.startIndices=e}needsUpdate(){return this.state.needsUpdate}needsRedraw(e){let{clearChangedFlags:t=!1}=void 0===e?{}:e;const n=this.state.needsRedraw;return this.state.needsRedraw=n&&!t,n}layoutChanged(){return this.state.layoutChanged}setAccessor(e){var t,n,i;(t=this.state).layoutChanged||(t.layoutChanged=(n=e,i=this.getAccessor(),!(n.type===i.type&&n.size===i.size&&a(n)===a(i)&&(n.offset||0)===(i.offset||0)))),super.setAccessor(e)}getUpdateTriggers(){const{accessor:e}=this.settings;return[this.id].concat("function"!=typeof e&&e||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(e){if(!e||!this.supportsTransition())return null;const{accessor:t}=this.settings,n=this.settings.transition,i=Array.isArray(t)?e[t.find((t=>e[t]))]:e[t];return(0,y.K)(i,n)}setNeedsUpdate(e,t){if(void 0===e&&(e=this.id),this.state.needsUpdate=this.state.needsUpdate||e,this.setNeedsRedraw(e),t){const{startRow:e=0,endRow:n=1/0}=t;this.state.updateRanges=function(e,t){if(e===v)return e;if(t[0]<0&&(t[0]=0),t[0]>=t[1])return e;const n=[],i=e.length;let s=0;for(let o=0;o<i;o++){const i=e[o];i[1]<t[0]?(n.push(i),s=o+1):i[0]>t[1]?n.push(i):t=[Math.min(i[0],t[0]),Math.max(i[1],t[1])]}return n.splice(s,0,t),n}(this.state.updateRanges,[e,n])}else this.state.updateRanges=v}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=m}setNeedsRedraw(e){void 0===e&&(e=this.id),this.state.needsRedraw=this.state.needsRedraw||e}allocate(e){const{state:t,settings:n}=this;return!n.noAlloc&&(!!n.update&&(super.allocate(e,t.updateRanges!==v),!0))}updateBuffer(e){let{numInstances:t,data:n,props:i,context:s}=e;if(!this.needsUpdate())return!1;const{state:{updateRanges:o},settings:{update:r,noAlloc:a}}=this;let l=!0;if(r){for(const[e,a]of o)r.call(s,this,{data:n,startRow:e,endRow:a,props:i,numInstances:t});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[e,n]of o){const i=Number.isFinite(e)?this.getVertexOffset(e):0,s=Number.isFinite(n)?this.getVertexOffset(n):a||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:i,endOffset:s})}else;this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(e){if(void 0===e||"function"==typeof e)return!1;return this.setData({constant:!0,value:e})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(e){const{state:t}=this;return e?(this.clearNeedsUpdate(),t.lastExternalBuffer===e||(t.lastExternalBuffer=e,this.setNeedsRedraw(),this.setData(e)),!0):(t.lastExternalBuffer=null,!1)}setBinaryValue(e,t){void 0===t&&(t=null);const{state:n,settings:i}=this;if(!e)return n.binaryValue=null,n.binaryAccessor=null,!1;if(i.noAlloc)return!1;if(n.binaryValue===e)return this.clearNeedsUpdate(),!0;n.binaryValue=e,this.setNeedsRedraw();if(i.transform||t!==this.startIndices){ArrayBuffer.isView(e)&&(e={value:e});const s=e;(0,p.A)(ArrayBuffer.isView(s.value),"invalid "+i.accessor);const o=Boolean(s.size)&&s.size!==this.size;return n.binaryAccessor=(0,g.I)(s.value,{size:s.size||this.size,stride:s.stride,offset:s.offset,startIndices:t,nested:o}),!1}return this.clearNeedsUpdate(),this.setData(e),!0}getVertexOffset(e){const{startIndices:t}=this;return(t?e<t.length?t[e]:this.numInstances:e)*this.size}getValue(){const e=this.settings.shaderAttributes,t=super.getValue();if(!e)return t;for(const n in e)Object.assign(t,super.getValue(n,e[n]));return t}getBufferLayout(e){this.state.layoutChanged=!1;const t=this.settings.shaderAttributes,n=super._getBufferLayout(),{stepMode:i}=this.settings;if(n.stepMode="dynamic"===i?e?e.isInstanced?"instance":"vertex":"instance":null!=i?i:"vertex",!t)return n;for(const s in t){const e=super._getBufferLayout(s,t[s]);n.attributes.push(...e.attributes)}return n}_autoUpdater(e,t){let{data:n,startRow:i,endRow:s,props:o,numInstances:r}=t;if(e.constant)return;const{settings:a,state:l,value:c,size:d,startIndices:h}=e,{accessor:u,transform:m}=a,v=l.binaryAccessor||("function"==typeof u?u:o[u]);(0,p.A)("function"==typeof v,'accessor "'+u+'" is not a function');let y=e.getVertexOffset(i);const{iterable:b,objectInfo:w}=(0,g.X)(n,i,s);for(const p of b){w.index++;let t=v(p,w);if(m&&(t=m.call(this,t)),h){const n=(w.index<h.length-1?h[w.index+1]:r)-h[w.index];if(t&&Array.isArray(t[0])){let n=y;for(const i of t)e._normalizeValue(i,c,n),n+=d}else t&&t.length>d?c.set(t,y):(e._normalizeValue(t,w.target,0),(0,f.R)({target:c,source:w.target,start:y,count:n}));y+=n*d}else e._normalizeValue(t,c,y),y+=d}}_validateAttributeUpdaters(){const{settings:e}=this;if(!(e.noAlloc||"function"==typeof e.update))throw new Error("Attribute "+this.id+" missing update or accessor")}_checkAttributeArray(){const{value:e}=this,t=Math.min(4,this.size);if(e&&e.length>=t){let n=!0;switch(t){case 4:n=n&&Number.isFinite(e[3]);case 3:n=n&&Number.isFinite(e[2]);case 2:n=n&&Number.isFinite(e[1]);case 1:n=n&&Number.isFinite(e[0]);break;default:n=!1}if(!n)throw new Error("Illegal attribute generated for "+this.id)}}}var w=n(63190),_=n(95656),x=n(68475),P=n(22454);function S(e){const{source:t,target:n,start:i=0,size:s,getData:o}=e,r=e.end||n.length,a=t.length,l=r-i;if(a>l)return void n.set(t.subarray(0,l),i);if(n.set(t,i),!o)return;let c=a;for(;c<l;){const e=o(c,t);for(let t=0;t<s;t++)n[i+c]=e[t]||0,c++}}function C(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'+e+'"')}}function A(e){switch(e){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function M(e){e.push(e.shift())}function T(e){let{device:t,source:n,target:i}=e;var s;(!i||i.byteLength<n.byteLength)&&(null==(s=i)||s.destroy(),i=t.createBuffer({byteLength:n.byteLength,usage:n.usage}));return i}function E(e){let{device:t,buffer:n,attribute:i,fromLength:s,toLength:o,fromStartIndices:r,getData:a=e=>e}=e;const l=i.doublePrecision&&i.value instanceof Float64Array?2:1,c=i.size*l,d=i.byteOffset,h=i.settings.bytesPerElement<4?d/i.settings.bytesPerElement*4:d,u=i.startIndices,p=r&&u,g=i.isConstant;if(!p&&n&&s>=o)return n;const f=i.value instanceof Float64Array?Float32Array:i.value.constructor,m=g?i.value:new f(i.getBuffer().readSyncWebGL(d,o*f.BYTES_PER_ELEMENT).buffer);if(i.settings.normalized&&!g){const e=a;a=(t,n)=>i.normalizeConstant(e(t,n))}const v=g?(e,t)=>a(m,t):(e,t)=>a(m.subarray(e+d,e+d+c),t),y=n?new Float32Array(n.readSyncWebGL(h,4*s).buffer):new Float32Array(0),b=new Float32Array(o);var w;(function(e){let{source:t,target:n,size:i,getData:s,sourceStartIndices:o,targetStartIndices:r}=e;if(!o||!r)return S({source:t,target:n,size:i,getData:s}),n;let a=0,l=0;const c=s&&((e,t)=>s(e+l,t)),d=Math.min(o.length,r.length);for(let h=1;h<d;h++){const e=o[h]*i,s=r[h]*i;S({source:t.subarray(a,e),target:n,start:l,end:s,size:i,getData:c}),a=e,l=s}l<n.length&&S({source:[],target:n,start:l,size:i,getData:c})}({source:y,target:b,sourceStartIndices:r,targetStartIndices:u,size:c,getData:v}),!n||n.byteLength<b.byteLength+h)&&(null==(w=n)||w.destroy(),n=t.createBuffer({byteLength:b.byteLength+h,usage:35050}));return n.write(b,h),n}var j=n(50948);class I{constructor(e){let{device:t,attribute:n,timeline:i}=e;this.buffers=[],this.currentLength=0,this.device=t,this.transition=new j.A(i),this.attribute=n,this.attributeInTransition=function(e){const{device:t,settings:n,value:i}=e,s=new b(t,n);return s.setData({value:i instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:n.normalized}),s}(n),this.currentStartIndices=n.startIndices}get inProgress(){return this.transition.inProgress}start(e,t,n){void 0===n&&(n=1/0),this.settings=e,this.currentStartIndices=this.attribute.startIndices,this.currentLength=function(e,t){const{doublePrecision:n,settings:i,value:s,size:o}=e,r=n&&s instanceof Float64Array?2:1;let a=0;const{shaderAttributes:l}=e.settings;if(l)for(const d of Object.values(l)){var c;a=Math.max(a,null!=(c=d.vertexOffset)?c:0)}return(i.noAlloc?s.length:(t+a)*o)*r}(this.attribute,t),this.transition.start(Object.assign({},e,{duration:n}))}update(){const e=this.transition.update();return e&&this.onUpdate(),e}setBuffer(e){this.attributeInTransition.setData({buffer:e,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const e of this.buffers)e.destroy();this.buffers.length=0}}const O={name:"interpolation",vs:"uniform interpolationUniforms {\n  float time;\n} interpolation;\n",uniformTypes:{time:"f32"}},L="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, interpolation.time);\n  gl_Position = vec4(0.0);\n}\n",R="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n";function k(e){return e.doublePrecision&&e.value instanceof Float64Array}const z={name:"spring",vs:"uniform springUniforms {\n  float damping;\n  float stiffness;\n} spring;\n",uniformTypes:{damping:"f32",stiffness:"f32"}},D="#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE force = delta * spring.stiffness;\n  ATTRIBUTE_TYPE resistance = velocity * spring.damping;\n  return force - resistance + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",V="#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}";const N={interpolation:class extends I{constructor(e){let{device:t,attribute:n,timeline:i}=e;super({device:t,attribute:n,timeline:i}),this.type="interpolation",this.transform=function(e,t){const n=t.size,i=C(n),s=A(n),o=t.getBufferLayout();if(k(t))return new x.p(e,{vs:R,bufferLayout:[{name:"aFrom",byteStride:8*n,attributes:[{attribute:"aFrom",format:s,byteOffset:0},{attribute:"aFrom64Low",format:s,byteOffset:4*n}]},{name:"aTo",byteStride:8*n,attributes:[{attribute:"aTo",format:s,byteOffset:0},{attribute:"aTo64Low",format:s,byteOffset:4*n}]}],modules:[P.dI,O],defines:{ATTRIBUTE_TYPE:i,ATTRIBUTE_SIZE:n},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0});return new x.p(e,{vs:L,bufferLayout:[{name:"aFrom",format:s},{name:"aTo",format:o.attributes[0].format}],modules:[O],defines:{ATTRIBUTE_TYPE:i},varyings:["vCurrent"],disableWarnings:!0})}(t,n)}start(e,t){const n=this.currentLength,i=this.currentStartIndices;if(super.start(e,t,e.duration),e.duration<=0)return void this.transition.cancel();const{buffers:s,attribute:o}=this;M(s),s[0]=E({device:this.device,buffer:s[0],attribute:o,fromLength:n,toLength:this.currentLength,fromStartIndices:i,getData:e.enter}),s[1]=T({device:this.device,source:s[0],target:s[1]}),this.setBuffer(s[1]);const{transform:r}=this,a=r.model;let l=Math.floor(this.currentLength/o.size);k(o)&&(l/=2),a.setVertexCount(l),o.isConstant?(a.setAttributes({aFrom:s[0]}),a.setConstantAttributes({aTo:o.value})):a.setAttributes({aFrom:s[0],aTo:o.getBuffer()}),r.transformFeedback.setBuffers({vCurrent:s[1]})}onUpdate(){const{duration:e,easing:t}=this.settings,{time:n}=this.transition;let i=n/e;t&&(i=t(i));const{model:s}=this.transform,o={time:i};s.shaderInputs.setProps({interpolation:o}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},spring:class extends I{constructor(e){let{device:t,attribute:n,timeline:i}=e;super({device:t,attribute:n,timeline:i}),this.type="spring",this.texture=function(e){return e.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}(t),this.framebuffer=function(e,t){return e.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[t]})}(t,this.texture),this.transform=function(e,t){const n=C(t.size),i=A(t.size);return new x.p(e,{vs:D,fs:V,bufferLayout:[{name:"aPrev",format:i},{name:"aCur",format:i},{name:"aTo",format:t.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[z],defines:{ATTRIBUTE_TYPE:n},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}(t,n)}start(e,t){const n=this.currentLength,i=this.currentStartIndices;super.start(e,t);const{buffers:s,attribute:o}=this;for(let a=0;a<2;a++)s[a]=E({device:this.device,buffer:s[a],attribute:o,fromLength:n,toLength:this.currentLength,fromStartIndices:i,getData:e.enter});s[2]=T({device:this.device,source:s[0],target:s[2]}),this.setBuffer(s[1]);const{model:r}=this.transform;r.setVertexCount(Math.floor(this.currentLength/o.size)),o.isConstant?r.setConstantAttributes({aTo:o.value}):r.setAttributes({aTo:o.getBuffer()})}onUpdate(){const{buffers:e,transform:t,framebuffer:n,transition:i}=this,s=this.settings;t.model.setAttributes({aPrev:e[0],aCur:e[1]}),t.transformFeedback.setBuffers({vNext:e[2]});const o={stiffness:s.stiffness,damping:s.damping};t.model.shaderInputs.setProps({spring:o}),t.run({framebuffer:n,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),M(e),this.setBuffer(e[1]);this.device.readPixelsToArrayWebGL(n)[0]>0||i.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}};class F{constructor(e,t){let{id:n,timeline:i}=t;if(!e)throw new Error("AttributeTransitionManager is constructed without device");this.id=n,this.device=e,this.timeline=i,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const e in this.transitions)this._removeTransition(e)}update(e){let{attributes:t,transitions:n,numInstances:i}=e;this.numInstances=i||1;for(const s in t){const e=t[s],i=e.getTransitionSetting(n);i&&this._updateAttribute(s,e,i)}for(const s in this.transitions){const e=t[s];e&&e.getTransitionSetting(n)||this._removeTransition(s)}}hasAttribute(e){const t=this.transitions[e];return t&&t.inProgress}getAttributes(){const e={};for(const t in this.transitions){const n=this.transitions[t];n.inProgress&&(e[t]=n.attributeInTransition)}return e}run(){if(0===this.numInstances)return!1;for(const t in this.transitions){this.transitions[t].update()&&(this.needsRedraw=!0)}const e=this.needsRedraw;return this.needsRedraw=!1,e}_removeTransition(e){this.transitions[e].delete(),delete this.transitions[e]}_updateAttribute(e,t,n){const i=this.transitions[e];let s=!i||i.type!==n.type;if(s){i&&this._removeTransition(e);const o=N[n.type];o?this.transitions[e]=new o({attribute:t,timeline:this.timeline,device:this.device}):(d.A.error("unsupported transition type '"+n.type+"'")(),s=!1)}(s||t.needsRedraw())&&(this.needsRedraw=!0,this.transitions[e].start(n,this.numInstances))}}const U="attributeManager.invalidate";class B{constructor(e,t){let{id:n="attribute-manager",stats:i,timeline:s}=void 0===t?{}:t;this.mergeBoundsMemoized=(0,w.A)(c._Z),this.id=n,this.device=e,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=i,this.attributeTransitionManager=new F(e,{id:n+"-transitions",timeline:s}),Object.seal(this)}finalize(){for(const e in this.attributes)this.attributes[e].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!e.clearRedrawFlags,t&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(e){this._add(e)}addInstanced(e){this._add(e,{stepMode:"instance"})}remove(e){for(const t of e)void 0!==this.attributes[t]&&(this.attributes[t].delete(),delete this.attributes[t])}invalidate(e,t){const n=this._invalidateTrigger(e,t);(0,_.A)(U,this,e,n)}invalidateAll(e){for(const t in this.attributes)this.attributes[t].setNeedsUpdate(t,e);(0,_.A)(U,this,"all")}update(e){let{data:t,numInstances:n,startIndices:i=null,transitions:s,props:o={},buffers:r={},context:a={}}=e,l=!1;(0,_.A)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const c in this.attributes){const e=this.attributes[c],s=e.settings.accessor;e.startIndices=i,e.numInstances=n,o[c]&&d.A.removed("props."+c,"data.attributes."+c)(),e.setExternalBuffer(r[c])||e.setBinaryValue("string"==typeof s?r[s]:void 0,t.startIndices)||"string"==typeof s&&!r[s]&&e.setConstantValue(o[s])||e.needsUpdate()&&(l=!0,this._updateAttribute({attribute:e,numInstances:n,data:t,props:o,context:a})),this.needsRedraw=this.needsRedraw||e.needsRedraw()}l&&(0,_.A)("attributeManager.updateEnd",this,n),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:n,transitions:s})}updateTransition(){const{attributeTransitionManager:e}=this,t=e.run();return this.needsRedraw=this.needsRedraw||t,t}getAttributes(){return Object.assign({},this.attributes,this.attributeTransitionManager.getAttributes())}getBounds(e){const t=e.map((e=>{var t;return null==(t=this.attributes[e])?void 0:t.getBounds()}));return this.mergeBoundsMemoized(t)}getChangedAttributes(e){void 0===e&&(e={clearChangedFlags:!1});const{attributes:t,attributeTransitionManager:n}=this,i=Object.assign({},n.getAttributes());for(const s in t){const o=t[s];o.needsRedraw(e)&&!n.hasAttribute(s)&&(i[s]=o)}return i}getBufferLayouts(e){return Object.values(this.getAttributes()).map((t=>t.getBufferLayout(e)))}_add(e,t){for(const n in e){const i=e[n],s=Object.assign({},i,{id:n,size:(i.isIndexed?1:i.size)||1},t);this.attributes[n]=new b(this.device,s)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const e={};for(const t in this.attributes){this.attributes[t].getUpdateTriggers().forEach((n=>{e[n]||(e[n]=[]),e[n].push(t)}))}this.updateTriggers=e}_invalidateTrigger(e,t){const{attributes:n,updateTriggers:i}=this,s=i[e];return s&&s.forEach((e=>{const i=n[e];i&&i.setNeedsUpdate(i.id,t)})),s}_updateAttribute(e){const{attribute:t,numInstances:n}=e;if((0,_.A)("attribute.updateStart",t),t.constant)return void t.setConstantValue(t.value);t.allocate(n)&&(0,_.A)("attribute.allocate",t,n);t.updateBuffer(e)&&(this.needsRedraw=!0,(0,_.A)("attribute.updateEnd",t,n))}}},39976:(e,t,n)=>{n.d(t,{K:()=>s});const i={interpolation:{duration:0,easing:e=>e},spring:{stiffness:.05,damping:.5}};function s(e,t){if(!e)return null;Number.isFinite(e)&&(e={type:"interpolation",duration:e});const n=e.type||"interpolation";return Object.assign({},i[n],t,e,{type:n})}},33847:(e,t,n)=>{n.d(t,{A:()=>l});var i=n(3002),s=n(95656),o=n(13696),r=n(95958);class a extends i.A{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((e=>e.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(e){}setState(e){super.setState(e),this.setNeedsUpdate()}getPickingInfo(e){let{info:t}=e;const{object:n}=t;return n&&n.__source&&n.__source.parent&&n.__source.parent.id===this.id?(t.object=n.__source.object,t.index=n.__source.index,t):t}filterSubLayer(e){return!0}shouldRenderSubLayer(e,t){return t&&t.length}getSubLayerClass(e,t){const{_subLayerProps:n}=this.props;return n&&n[e]&&n[e].type||t}getSubLayerRow(e,t,n){return e.__source={parent:this,object:t,index:n},e}getSubLayerAccessor(e){if("function"==typeof e){const t={index:-1,data:this.props.data,target:[]};return(n,i)=>n&&n.__source?(t.index=n.__source.index,e(n.__source.object,t)):e(n,i)}return e}getSubLayerProps(e){var t;void 0===e&&(e={});const{opacity:n,pickable:i,visible:s,parameters:o,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:h,coordinateOrigin:u,wrapLongitude:p,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y,_subLayerProps:b}=this.props,w={id:"",updateTriggers:{},opacity:n,pickable:i,visible:s,parameters:o,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:h,coordinateOrigin:u,wrapLongitude:p,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y},_=b&&e.id&&b[e.id],x=_&&_.updateTriggers,P=e.id||"sublayer";if(_){const t=this.props[r.fW],n=e.type?e.type._propTypes:{};for(const e in _){const i=n[e]||t[e];i&&"accessor"===i.type&&(_[e]=this.getSubLayerAccessor(_[e]))}}Object.assign(w,e,_),w.id=this.props.id+"-"+P,w.updateTriggers=Object.assign({all:null==(t=this.props.updateTriggers)?void 0:t.all},e.updateTriggers,x);for(const r of m){const e=r.getSubLayerProps.call(this,r);e&&Object.assign(w,e,{updateTriggers:Object.assign(w.updateTriggers,e.updateTriggers)})}return w}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}_getAttributeManager(){return null}_postUpdate(e,t){let n=this.internalState.subLayers;const i=!n||this.needsUpdate();if(i){const e=this.renderLayers();n=(0,o.B)(e,Boolean),this.internalState.subLayers=n}(0,s.A)("compositeLayer.renderLayers",this,i,n);for(const s of n)s.parent=this}}a.layerName="CompositeLayer";const l=a},8961:(e,t,n)=>{n.d(t,{Kx:()=>r,We:()=>c,p5:()=>a,rf:()=>o,tg:()=>l});var i=n(18120),s=n(7853);const o={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(o,"IDENTITY",{get:()=>(i.A.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const r={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},a={common:0,meters:1,pixels:2},l={click:"onClick",panstart:"onDragStart",panmove:"onDrag",panend:"onDragEnd"},c={multipan:[s.uq,{threshold:10,direction:s.e8.Vertical,pointers:2}],pinch:[s.h1,{},null,["multipan"]],pan:[s.uq,{threshold:1},["pinch"],["multipan"]],dblclick:[s.Cx,{event:"dblclick",taps:2}],click:[s.Cx,{event:"click"},null,["dblclick"]]}},23399:(e,t,n)=>{n.d(t,{A:()=>ie});var i=n(3726),s=n(3189);const o=[n(64458).A],r=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];function a(){const e=s._.getDefaultShaderAssembler();for(const t of o)e.addDefaultModule(t);for(const t of r)e.addShaderHook(t);return e}const l="uniform layerUniforms {\n  uniform float opacity;\n} layer;\n",c={name:"layer",vs:l,fs:l,getUniforms:e=>({opacity:Math.pow(e.opacity,1/2.2)}),uniformTypes:{opacity:"f32"}};var d=n(95958),h=n(18120),u=n(95656),p=n(13696),g=n(97983),f=n(327);class m{constructor(e,t,n){this._loadCount=0,this._subscribers=new Set,this.id=e,this.context=n,this.setData(t)}subscribe(e){this._subscribers.add(e)}unsubscribe(e){this._subscribers.delete(e)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(e,t){if(e===this._data&&!t)return;this._data=e;const n=++this._loadCount;let i=e;"string"==typeof e&&(i=(0,f.H)(e)),i instanceof Promise?(this.isLoaded=!1,this._loader=i.then((e=>{this._loadCount===n&&(this.isLoaded=!0,this._error=void 0,this._content=e)})).catch((e=>{this._loadCount===n&&(this.isLoaded=!0,this._error=e||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=e);for(const s of this._subscribers)s.onChange(this.getData())}}class v{constructor(e){var t;this.protocol=e.protocol||"resource://",this._context={device:e.device,gl:null==(t=e.device)?void 0:t.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(e){return!!e.startsWith(this.protocol)||e in this._resources}add(e){let{resourceId:t,data:n,forceUpdate:i=!1,persistent:s=!0}=e,o=this._resources[t];o?o.setData(n,i):(o=new m(t,n,this._context),this._resources[t]=o),o.persistent=s}remove(e){const t=this._resources[e];t&&(t.delete(),delete this._resources[e])}unsubscribe(e){let{consumerId:t}=e;const n=this._consumers[t];if(n){for(const e in n){const t=n[e],i=this._resources[t.resourceId];i&&i.unsubscribe(t)}delete this._consumers[t],this.prune()}}subscribe(e){let{resourceId:t,onChange:n,consumerId:i,requestId:s="default"}=e;const{_resources:o,protocol:r}=this;t.startsWith(r)&&(t=t.replace(r,""),o[t]||this.add({resourceId:t,data:null,persistent:!1}));const a=o[t];if(this._track(i,s,a,n),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const e in this._resources)this._resources[e].delete()}_track(e,t,n,i){const s=this._consumers,o=s[e]=s[e]||{};let r=o[t];const a=r&&r.resourceId&&this._resources[r.resourceId];a&&(a.unsubscribe(r),this.prune()),n&&(r?(r.onChange=i,r.resourceId=n.id):r={onChange:i,resourceId:n.id},o[t]=r,n.subscribe(r))}_prune(){this._pruneRequest=null;for(const e of Object.keys(this._resources)){const t=this._resources[e];t.persistent||t.inUse()||(t.delete(),delete this._resources[e])}}}var y=n(43976);class b{constructor(e,t){this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=e=>{(0,u.A)("layerManager.activateViewport",this,e),e&&(this.context.viewport=e)};const{deck:n,stats:s,viewport:o,timeline:r}=t||{};this.layers=[],this.resourceManager=new v({device:e,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:e,gl:null==e?void 0:e.gl,deck:n,shaderAssembler:a(),defaultShaderModules:[c],renderPass:void 0,stats:s||new g.A({id:"deck.gl"}),viewport:o||new y.A({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:r||new i.K,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const e of this.layers)this._finalizeLayer(e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);for(const n of this.layers){const i=n.getNeedsRedraw(e);t=t||i}return t}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(e){this._needsRedraw=this._needsRedraw||e}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e}getLayers(e){let{layerIds:t}=void 0===e?{}:e;return t?this.layers.filter((e=>t.find((t=>0===e.id.indexOf(t))))):this.layers}setProps(e){"debug"in e&&(this._debug=e.debug),"userData"in e&&(this.context.userData=e.userData),"layers"in e&&(this._nextLayers=e.layers),"onError"in e&&(this.context.onError=e.onError)}setLayers(e,t){(0,u.A)("layerManager.setLayers",this,t,e),this._lastRenderedLayers=e;const n=(0,p.B)(e,Boolean);for(const i of n)i.context=this.context;this._updateLayers(this.layers,n)}updateLayers(){const e=this.needsUpdate();e&&(this.setNeedsRedraw("updating layers: "+e),this.setLayers(this._nextLayers||this._lastRenderedLayers,e)),this._nextLayers=null}addDefaultShaderModule(e){const{defaultShaderModules:t}=this.context;t.find((t=>t.name===e.name))||(t.push(e),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(e){const{defaultShaderModules:t}=this.context,n=t.findIndex((t=>t.name===e.name));n>=0&&(t.splice(n,1),this._defaultShaderModulesChanged=!0)}_handleError(e,t,n){n.raiseError(t,e+" of "+n)}_updateLayers(e,t){const n={};for(const o of e)n[o.id]?h.A.warn("Multiple old layers with same id "+o.id)():n[o.id]=o;if(this._defaultShaderModulesChanged){for(const t of e)t.setNeedsUpdate(),t.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}const i=[];this._updateSublayersRecursively(t,n,i),this._finalizeOldLayers(n);let s=!1;for(const o of i)if(o.hasUniformTransition()){s="Uniform transition in "+o;break}this._needsUpdate=s,this.layers=i}_updateSublayersRecursively(e,t,n){for(const s of e){s.context=this.context;const e=t[s.id];null===e&&h.A.warn("Multiple new layers with same id "+s.id)(),t[s.id]=null;let o=null;try{this._debug&&e!==s&&s.validateProps(),e?(this._transferLayerState(e,s),this._updateLayer(s)):this._initializeLayer(s),n.push(s),o=s.isComposite?s.getSubLayers():null}catch(i){this._handleError("matching",i,s)}o&&this._updateSublayersRecursively(o,t,n)}}_finalizeOldLayers(e){for(const t in e){const n=e[t];n&&this._finalizeLayer(n)}}_initializeLayer(e){try{e._initialize(),e.lifecycle=d.VD.INITIALIZED}catch(t){this._handleError("initialization",t,e)}}_transferLayerState(e,t){t._transferState(e),t.lifecycle=d.VD.MATCHED,t!==e&&(e.lifecycle=d.VD.AWAITING_GC)}_updateLayer(e){try{e._update()}catch(t){this._handleError("update",t,e)}}_finalizeLayer(e){this._needsRedraw=this._needsRedraw||"finalized "+e,e.lifecycle=d.VD.AWAITING_FINALIZATION;try{e._finalize(),e.lifecycle=d.VD.FINALIZED}catch(t){this._handleError("finalization",t,e)}}}var w=n(50111);class _{constructor(e){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=e.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=e.eventManager,this._eventCallbacks={onViewStateChange:e.onViewStateChange,onInteractionStateChange:e.onInteractionStateChange},Object.seal(this),this.setProps(e)}finalize(){for(const e in this.controllers){const t=this.controllers[e];t&&t.finalize()}this.controllers={}}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e,this._needsRedraw=this._needsRedraw||e}updateViewStates(){for(const e in this.controllers){const t=this.controllers[e];t&&t.updateTransition()}}getViewports(e){return e?this._viewports.filter((t=>t.containsPixel(e))):this._viewports}getViews(){const e={};return this.views.forEach((t=>{e[t.id]=t})),e}getView(e){return this.views.find((t=>t.id===e))}getViewState(e){const t="string"==typeof e?this.getView(e):e,n=t&&this.viewState[t.getViewStateId()]||this.viewState;return t?t.filterViewState(n):n}getViewport(e){return this._viewportMap[e]}unproject(e,t){const n=this.getViewports(),i={x:e[0],y:e[1]};for(let s=n.length-1;s>=0;--s){const o=n[s];if(o.containsPixel(i)){const n=e.slice();return n[0]-=o.x,n[1]-=o.y,o.unproject(n,t)}}return null}setProps(e){e.views&&this._setViews(e.views),e.viewState&&this._setViewState(e.viewState),("width"in e||"height"in e)&&this._setSize(e.width,e.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(e,t){e===this.width&&t===this.height||(this.width=e,this.height=t,this.setNeedsUpdate("Size changed"))}_setViews(e){e=(0,p.B)(e,Boolean);this._diffViews(e,this.views)&&this.setNeedsUpdate("views changed"),this.views=e}_setViewState(e){if(e){!(0,w.b)(e,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=e}else h.A.warn("missing `viewState` or `initialViewState`")()}_createController(e,t){return new(0,t.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:t=>{var n;return null==(n=this.getView(e.id))?void 0:n.makeViewport({viewState:t,width:this.width,height:this.height})}})}_updateController(e,t,n,i){const s=e.controller;if(s&&n){const o=Object.assign({},t,s,{id:e.id,x:n.x,y:n.y,width:n.width,height:n.height});return i&&i.constructor===s.type||(i=this._createController(e,o)),i&&i.setProps(o),i}return null}_rebuildViewports(){const{views:e}=this,t=this.controllers;this._viewports=[],this.controllers={};let n=!1;for(let i=e.length;i--;){const s=e[i],o=this.getViewState(s),r=s.makeViewport({viewState:o,width:this.width,height:this.height});let a=t[s.id];const l=Boolean(s.controller);l&&!a&&(n=!0),!n&&l||!a||(a.finalize(),a=null),this.controllers[s.id]=this._updateController(s,o,r,a),r&&this._viewports.unshift(r)}for(const i in t){const e=t[i];e&&!this.controllers[i]&&e.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((e=>{e.id&&(this._viewportMap[e.id]=this._viewportMap[e.id]||e)}))}_diffViews(e,t){return e.length!==t.length||e.some(((n,i)=>!e[i].equals(t[i])))}}var x=n(63201),P=n(55443);const S=new P.A;class C{constructor(e){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=e,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(e){const t=this._defaultEffects;if(!t.find((t=>t.id===e.id))){const n=t.findIndex((t=>{return n=e,(null!=(i=t.order)?i:1/0)-(null!=(s=n.order)?s:1/0)>0;var n,i,s}));n<0?t.push(e):t.splice(n,0,e),e.setup(this._context),this._setEffects(this.effects)}}setProps(e){"effects"in e&&((0,w.b)(e.effects,this.effects,1)||this._setEffects(e.effects))}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}getEffects(){return this._resolvedEffects}_setEffects(e){const t={};for(const i of this.effects)t[i.id]=i;const n=[];for(const i of e){const e=t[i.id];let s=i;e&&e!==i?e.setProps?(e.setProps(i.props),s=e):e.cleanup(this._context):e||i.setup(this._context),n.push(s),delete t[i.id]}for(const i in t)t[i].cleanup(this._context);this.effects=n,this._resolvedEffects=n.concat(this._defaultEffects),e.some((e=>e instanceof P.A))||this._resolvedEffects.push(S),this._needsRedraw="effects changed"}finalize(){for(const e of this._resolvedEffects)e.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var A=n(44584);class M extends A.A{shouldDrawLayer(e){const{operation:t}=e.props;return t.includes("draw")||t.includes("terrain")}}var T=n(78218);class E{constructor(e){this.device=e,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new M(e),this.pickLayersPass=new T.A(e),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(e){this.layerFilter!==e.layerFilter&&(this.layerFilter=e.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==e.drawPickingColors&&(this.drawPickingColors=e.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(e){if(!e.viewports.length)return;const t=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,n=Object.assign({layerFilter:this.layerFilter,isPicking:this.drawPickingColors},e);n.effects&&this._preRender(n.effects,n);const i=this.lastPostProcessEffect?this.renderBuffers[0]:n.target;this.lastPostProcessEffect&&(n.clearColor=[0,0,0,0],n.clearCanvas=!0);const s=t.render(Object.assign({},n,{target:i}));n.effects&&this._postRender(n.effects,n),this.renderCount++,(0,u.A)("deckRenderer.renderLayers",this,s,e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}finalize(){const{renderBuffers:e}=this;for(const t of e)t.delete();e.length=0}_preRender(e,t){this.lastPostProcessEffect=null,t.preRenderStats=t.preRenderStats||{};for(const n of e)t.preRenderStats[n.id]=n.preRender(t),n.postRender&&(this.lastPostProcessEffect=n.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:e}=this,t=this.device.canvasContext.getDrawingBufferSize();0===e.length&&[0,1].map((t=>{const n=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"}});e.push(this.device.createFramebuffer({id:"deck-renderbuffer-"+t,colorAttachments:[n]}))}));for(const n of e)n.resize(t)}_postRender(e,t){const{renderBuffers:n}=this,i=Object.assign({},t,{inputBuffer:n[0],swapBuffer:n[1]});for(const s of e)if(s.postRender){i.target=s.id===this.lastPostProcessEffect?t.target:void 0;const e=s.postRender(i);i.inputBuffer=e,i.swapBuffer=e===n[0]?n[1]:n[0]}}}const j={pickedColor:null,pickedObjectIndex:-1};function I(e){let{pickedColors:t,decodePickingColor:n,deviceX:i,deviceY:s,deviceRadius:o,deviceRect:r}=e;const{x:a,y:l,width:c,height:d}=r;let u=o*o,p=-1,g=0;for(let h=0;h<d;h++){const e=h+l-s,n=e*e;if(n>u)g+=4*c;else for(let s=0;s<c;s++){if(t[g+3]-1>=0){const e=s+a-i,t=e*e+n;t<=u&&(u=t,p=g)}g+=4}}if(p>=0){const e=t.slice(p,p+4),i=n(e);if(i){const t=Math.floor(p/4/c),n=p/4-t*c;return Object.assign({},i,{pickedColor:e,pickedX:a+n,pickedY:l+t})}h.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}return j}function O(e){let t,{pickInfo:n,viewports:i,pixelRatio:s,x:o,y:r,z:a}=e,l=i[0];if(i.length>1&&(l=function(e,t){for(let n=e.length-1;n>=0;n--){const i=e[n];if(i.containsPixel(t))return i}return e[0]}((null==n?void 0:n.pickedViewports)||i,{x:o,y:r})),l){const e=[o-l.x,r-l.y];void 0!==a&&(e[2]=a),t=l.unproject(e)}return{color:null,layer:null,viewport:l,index:-1,picked:!1,x:o,y:r,pixel:[o,r],coordinate:t,devicePixel:n&&"pickedX"in n?[n.pickedX,n.pickedY]:void 0,pixelRatio:s}}function L(e){const{pickInfo:t,lastPickedInfo:n,mode:i,layers:s}=e,{pickedColor:o,pickedLayer:r,pickedObjectIndex:a}=t,l=r?[r]:[];if("hover"===i){const e=n.index,t=n.layerId,i=r?r.props.id:null;if(i!==t||a!==e){if(i!==t){const e=s.find((e=>e.props.id===t));e&&l.unshift(e)}n.layerId=i,n.index=a,n.info=null}}const c=O(e),d=new Map;return d.set(null,c),l.forEach((e=>{let t=Object.assign({},c);e===r&&(t.color=o,t.index=a,t.picked=!0),t=R({layer:e,info:t,mode:i});const s=t.layer;e===r&&"hover"===i&&(n.info=t),d.set(s.id,t),"hover"===i&&s.updateAutoHighlight(t)})),d}function R(e){let{layer:t,info:n,mode:i}=e;for(;t&&n;){const e=n.layer||null;n.sourceLayer=e,n.layer=t,n=t.getPickingInfo({info:n,mode:i,sourceLayer:e}),t=t.parent}return n}class k{constructor(e){this._pickable=!0,this.device=e,this.pickLayersPass=new T.A(e),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(e){"layerFilter"in e&&(this.layerFilter=e.layerFilter),"_pickable"in e&&(this._pickable=e._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObject(e){return this._pickClosestObject(e)}pickObjects(e){return this._pickVisibleObjects(e)}getLastPickedObject(e,t){let{x:n,y:i,layers:s,viewports:o}=e;void 0===t&&(t=this.lastPickedInfo.info);const r=t&&t.layer&&t.layer.id,a=t&&t.viewport&&t.viewport.id,l=r?s.find((e=>e.id===r)):null,c=a&&o.find((e=>e.id===a))||o[0],d=c&&c.unproject([n-c.x,i-c.y]),h={x:n,y:i,viewport:c,coordinate:d,layer:l};return Object.assign({},t,h)}_resizeBuffer(){var e,t;if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){const e=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=e}const{canvas:n}=this.device.getDefaultCanvasContext();null==(e=this.pickingFBO)||e.resize({width:n.width,height:n.height}),null==(t=this.depthFBO)||t.resize({width:n.width,height:n.height})}_getPickable(e){if(!1===this._pickable)return null;const t=e.filter((e=>this.pickLayersPass.shouldDrawLayer(e)&&!e.isComposite));return t.length?t:null}_pickClosestObject(e){let{layers:t,views:n,viewports:i,x:s,y:o,radius:r=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:h}=e;const u=this.device.canvasContext.cssToDeviceRatio(),p=this._getPickable(t);if(!p||0===i.length)return{result:[],emptyInfo:O({viewports:i,x:s,y:o,pixelRatio:u})};this._resizeBuffer();const g=this.device.canvasContext.cssToDevicePixels([s,o],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(r*u),{width:v,height:y}=this.pickingFBO,b=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:v,deviceHeight:y}),w={x:s-r,y:o-r,width:2*r+1,height:2*r+1};let _;const x=[],P=new Set;for(let S=0;S<a;S++){let e,t;if(b){const t=this._drawAndSample({layers:p,views:n,viewports:i,onViewportActive:d,deviceRect:b,cullRect:w,effects:h,pass:"picking:"+l});e=I(Object.assign({},t,{deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:b}))}else e={pickedColor:null,pickedObjectIndex:-1};if(e.pickedLayer&&c&&this.depthFBO){const{pickedColors:s}=this._drawAndSample({layers:[e.pickedLayer],views:n,viewports:i,onViewportActive:d,deviceRect:{x:e.pickedX,y:e.pickedY,width:1,height:1},cullRect:w,effects:h,pass:"picking:"+l+":z"},!0);s[3]&&(t=s[0])}e.pickedLayer&&S+1<a&&(P.add(e.pickedLayer),e.pickedLayer.disablePickingIndex(e.pickedObjectIndex)),_=L({pickInfo:e,lastPickedInfo:this.lastPickedInfo,mode:l,layers:p,viewports:i,x:s,y:o,z:t,pixelRatio:u});for(const n of _.values())n.layer&&x.push(n);if(!e.pickedColor)break}for(const S of P)S.restorePickingColors();return{result:x,emptyInfo:_.get(null)}}_pickVisibleObjects(e){let{layers:t,views:n,viewports:i,x:s,y:o,width:r=1,height:a=1,mode:l="query",maxObjects:c=null,onViewportActive:d,effects:u}=e;const p=this._getPickable(t);if(!p||0===i.length)return[];this._resizeBuffer();const g=this.device.canvasContext.cssToDeviceRatio(),f=this.device.canvasContext.cssToDevicePixels([s,o],!0),m=f.x,v=f.y+f.height,y=this.device.canvasContext.cssToDevicePixels([s+r,o+a],!0),b=y.x+y.width,w=y.y,_={x:m,y:w,width:b-m,height:v-w},x=function(e){let{pickedColors:t,decodePickingColor:n}=e;const i=new Map;if(t)for(let s=0;s<t.length;s+=4)if(t[s+3]-1>=0){const e=t.slice(s,s+4),o=e.join(",");if(!i.has(o)){const t=n(e);t?i.set(o,Object.assign({},t,{color:e})):h.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(i.values())}(this._drawAndSample({layers:p,views:n,viewports:i,onViewportActive:d,deviceRect:_,cullRect:{x:s,y:o,width:r,height:a},effects:u,pass:"picking:"+l})),P=new Map,S=[],C=Number.isFinite(c);for(let h=0;h<x.length;h++){var A;if(C&&S.length>=c)break;const e=x[h];let t={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:s,y:o,pixelRatio:g};t=R({layer:e.pickedLayer,info:t,mode:l});const n=t.layer.id;P.has(n)||P.set(n,new Set);const i=P.get(n),r=null!=(A=t.object)?A:t.index;i.has(r)||(i.add(r),S.push(t))}return S}_drawAndSample(e,t){let{layers:n,views:i,viewports:s,onViewportActive:o,deviceRect:r,cullRect:a,effects:l,pass:c}=e;void 0===t&&(t=!1);const d=t?this.depthFBO:this.pickingFBO,h={layers:n,layerFilter:this.layerFilter,views:i,viewports:s,onViewportActive:o,pickingFBO:d,deviceRect:r,cullRect:a,effects:l,pass:c,pickZ:t,preRenderStats:{},isPicking:!0};for(const y of l)y.useInPicking&&(h.preRenderStats[y.id]=y.preRender(h));const{decodePickingColor:u}=this.pickLayersPass.render(h),{x:p,y:g,width:f,height:m}=r,v=new(t?Float32Array:Uint8Array)(f*m*4);return this.device.readPixelsToArrayWebGL(d,{sourceX:p,sourceY:g,sourceWidth:f,sourceHeight:m,target:v}),{pickedColors:v,decodePickingColor:u}}_getPickingRect(e){let{deviceX:t,deviceY:n,deviceRadius:i,deviceWidth:s,deviceHeight:o}=e;const r=Math.max(0,t-i),a=Math.max(0,n-i),l=Math.min(s,t+i+1)-r,c=Math.min(o,n+i+1)-a;return l<=0||c<=0?null:{x:r,y:a,width:l,height:c}}}var z=n(8961);const D={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},V="top-left",N="__root";class F{constructor(e){let{deck:t,parentElement:n}=e;this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=t,this.parentElement=n}getWidgets(){return this.resolvedWidgets}setProps(e){e.widgets&&!(0,w.b)(e.widgets,this.widgets,1)&&this._setWidgets(e.widgets)}finalize(){for(const e of this.getWidgets())this._remove(e);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(const e in this.containers)this.containers[e].remove()}addDefault(e){this.defaultWidgets.find((t=>t.id===e.id))||(this._add(e),this.defaultWidgets.push(e),this._setWidgets(this.widgets))}_setWidgets(e){const t={};for(const n of this.resolvedWidgets)t[n.id]=n;this.resolvedWidgets.length=0;for(const n of this.defaultWidgets)t[n.id]=null,this.resolvedWidgets.push(n);for(let n of e){const e=t[n.id];e?e.viewId!==n.viewId||e.placement!==n.placement?(this._remove(e),this._add(n)):n!==e&&(e.setProps(n.props),n=e):this._add(n),t[n.id]=null,this.resolvedWidgets.push(n)}for(const n in t){const e=t[n];e&&this._remove(e)}this.widgets=e}_add(e){const{viewId:t=null,placement:n=V}=e,i=e.onAdd({deck:this.deck,viewId:t});i&&this._getContainer(t,n).append(i),e._element=i}_remove(e){null==e.onRemove||e.onRemove(),e._element&&e._element.remove(),e._element=void 0}_getContainer(e,t){const n=e||N;let i=this.containers[n];var s;i||(i=document.createElement("div"),i.style.pointerEvents="none",i.style.position="absolute",i.style.overflow="hidden",null==(s=this.parentElement)||s.append(i),this.containers[n]=i);let o=i.querySelector("."+t);return o||(o=document.createElement("div"),o.className=t,o.style.position="absolute",o.style.zIndex="2",Object.assign(o.style,D[t]),i.append(o)),o}_updateContainers(){const e=this.deck.width,t=this.deck.height;for(const n in this.containers){const i=this.lastViewports[n]||null,s=n===N||i,o=this.containers[n];s?(o.style.display="block",o.style.left=(i?i.x:0)+"px",o.style.top=(i?i.y:0)+"px",o.style.width=(i?i.width:e)+"px",o.style.height=(i?i.height:t)+"px"):o.style.display="none"}}onRedraw(e){let{viewports:t,layers:n}=e;const i=t.reduce(((e,t)=>(e[t.id]=t,e)),{});for(const s of this.getWidgets()){const{viewId:e}=s;if(e){const t=i[e];t&&(s.onViewportChange&&s.onViewportChange(t),null==s.onRedraw||s.onRedraw({viewports:[t],layers:n}))}else{if(s.onViewportChange)for(const e of t)s.onViewportChange(e);null==s.onRedraw||s.onRedraw({viewports:t,layers:n})}}this.lastViewports=i,this._updateContainers()}onHover(e,t){for(const i of this.getWidgets()){var n;const{viewId:s}=i;s&&s!==(null==(n=e.viewport)?void 0:n.id)||null==i.onHover||i.onHover(e,t)}}onEvent(e,t){const n=z.tg[t.type];if(n)for(const o of this.getWidgets()){var i;const{viewId:r}=o;var s;if(!r||r===(null==(i=e.viewport)?void 0:i.id))null==(s=o[n])||s.call(o,e,t)}}}const U={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class B{constructor(){this.id="default-tooltip",this.placement="fill",this.props={},this.isVisible=!1}onAdd(e){let{deck:t}=e;const n=document.createElement("div");return n.className="deck-tooltip",Object.assign(n.style,U),this.deck=t,this.element=n,n}onRemove(){this.deck=void 0,this.element=void 0}setProps(){}onViewportChange(e){var t;this.isVisible&&e.id===(null==(t=this.lastViewport)?void 0:t.id)&&e!==this.lastViewport&&this.setTooltip(null)}onHover(e){const{deck:t}=this,n=t&&t.props.getTooltip;if(!n)return;const i=n(e);this.lastViewport=e.viewport,this.setTooltip(i,e.x,e.y)}setTooltip(e,t,n){const i=this.element;if(i){if("string"==typeof e)i.innerText=e;else{if(!e)return this.isVisible=!1,void(i.style.display="none");e.text&&(i.innerText=e.text),e.html&&(i.innerHTML=e.html),e.className&&(i.className=e.className)}this.isVisible=!0,i.style.display="block",i.style.transform="translate("+t+"px, "+n+"px)",e&&"object"==typeof e&&"style"in e&&Object.assign(i.style,e.style)}}}var W=n(81052),G=n(5223),H=n(8045);const K={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(e){const t=e[0],n=e[e.length-1];return"{"===t&&"}"===n||"["===t&&"]"===n},parseTextSync:JSON.parse};const Z=function(){const e="9.1.4",t=globalThis.deck&&globalThis.deck.VERSION;if(t&&t!==e)throw new Error("deck.gl - multiple versions detected: "+t+" vs "+e);return t||(h.A.log(1,"deck.gl "+e)(),globalThis.deck=Object.assign({},globalThis.deck,{VERSION:e,version:e,log:h.A,_registerLoggers:u.k}),(0,G.mk)([K,[H.$,{imagebitmap:{premultiplyAlpha:"none"}}]])),e}();var q=n(95850),Y=n(40472),J=n(20698),X=n(59658),$=n(7853),Q=n(95238);function ee(){}const te={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{type:"webgl"},gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:ee,onWebGLInitialized:ee,onResize:ee,onViewStateChange:ee,onInteractionStateChange:ee,onBeforeRender:ee,onAfterRender:ee,onLoad:ee,onError:e=>h.A.error(e.message,e.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:e=>{let{isDragging:t}=e;return t?"grabbing":"grab"},getTooltip:null,debug:!1,drawPickingColors:!1};class ne{constructor(e){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new g.A({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=e=>{const{_pickRequest:t}=this;if("pointerleave"===e.type)t.x=-1,t.y=-1,t.radius=0;else{if(e.leftButton||e.rightButton)return;{const n=e.offsetCenter;if(!n)return;t.x=n.x,t.y=n.y,t.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:t.x,y:t.y}),t.event=e},this._onEvent=e=>{const t=z.tg[e.type],n=e.offsetCenter;if(!t||!n||!this.layerManager)return;const i=this.layerManager.getLayers(),s=this.deckPicker.getLastPickedObject({x:n.x,y:n.y,layers:i,viewports:this.getViewports(n)},this._lastPointerDownInfo),{layer:o}=s,r=o&&(o[t]||o.props[t]),a=this.props[t];let l=!1;r&&(l=r.call(o,s,e)),l||(null==a||a(s,e),this.widgetManager.onEvent(s,e))},this._onPointerDown=e=>{const t=e.offsetCenter,n=this._pick("pickObject","pickObject Time",{x:t.x,y:t.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=n.result[0]||n.emptyInfo},this.props=Object.assign({},te,e),(e=this.props).viewState&&e.initialViewState&&h.A.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,e.device&&(this.device=e.device);let t=this.device;!t&&e.gl&&(e.gl instanceof WebGLRenderingContext&&h.A.error("WebGL1 context not supported.")(),t=Y.l.attach(e.gl)),t||(t=q.a.createDevice(Object.assign({type:"best-available",_reuseDevices:!0,adapters:[Y.l]},e.deviceProps,{createCanvasContext:{canvas:this._createCanvas(e),useDevicePixels:this.props.useDevicePixels,autoResize:!1}}))),this.animationLoop=this._createAnimationLoop(t,e),this.setProps(e),e._typedArrayManagerProps&&W.A.setOptions(e._typedArrayManagerProps),this.animationLoop.start()}finalize(){var e,t,n,i,s,o,r,a,l,c;(null==(e=this.animationLoop)||e.stop(),null==(t=this.animationLoop)||t.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,null==(n=this.layerManager)||n.finalize(),this.layerManager=null,null==(i=this.viewManager)||i.finalize(),this.viewManager=null,null==(s=this.effectManager)||s.finalize(),this.effectManager=null,null==(o=this.deckRenderer)||o.finalize(),this.deckRenderer=null,null==(r=this.deckPicker)||r.finalize(),this.deckPicker=null,null==(a=this.eventManager)||a.destroy(),this.eventManager=null,null==(l=this.widgetManager)||l.finalize(),this.widgetManager=null,this.props.canvas||this.props.device||this.props.gl||!this.canvas)||(null==(c=this.canvas.parentElement)||c.removeChild(this.canvas),this.canvas=null)}setProps(e){var t;this.stats.get("setProps Time").timeStart(),"onLayerHover"in e&&h.A.removed("onLayerHover","onHover")(),"onLayerClick"in e&&h.A.removed("onLayerClick","onClick")(),e.initialViewState&&!(0,w.b)(this.props.initialViewState,e.initialViewState,3)&&(this.viewState=e.initialViewState),Object.assign(this.props,e),this._setCanvasSize(this.props);const n=Object.create(this.props);Object.assign(n,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),null==(t=this.animationLoop)||t.setProps(n),this.layerManager&&(this.viewManager.setProps(n),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(n),this.effectManager.setProps(n),this.deckRenderer.setProps(n),this.deckPicker.setProps(n),this.widgetManager.setProps(n)),this.stats.get("setProps Time").timeEnd()}needsRedraw(e){if(void 0===e&&(e={clearRedrawFlags:!1}),!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);const n=this.viewManager.needsRedraw(e),i=this.layerManager.needsRedraw(e),s=this.effectManager.needsRedraw(e),o=this.deckRenderer.needsRedraw(e);return t=t||n||i||s||o,t}redraw(e){if(!this.layerManager)return;let t=this.needsRedraw({clearRedrawFlags:!0});t=e||t,t&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(t):this._drawLayers(t))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,Q.A)(this.viewManager),this.viewManager.views}getViewports(e){return(0,Q.A)(this.viewManager),this.viewManager.getViewports(e)}getCanvas(){return this.canvas}pickObject(e){const t=this._pick("pickObject","pickObject Time",e).result;return t.length?t[0]:null}pickMultipleObjects(e){return e.depth=e.depth||10,this._pick("pickObject","pickMultipleObjects Time",e).result}pickObjects(e){return this._pick("pickObjects","pickObjects Time",e)}_addResources(e,t){void 0===t&&(t=!1);for(const n in e)this.layerManager.resourceManager.add({resourceId:n,data:e[n],forceUpdate:t})}_removeResources(e){for(const t of e)this.layerManager.resourceManager.remove(t)}_addDefaultEffect(e){this.effectManager.addDefaultEffect(e)}_addDefaultShaderModule(e){this.layerManager.addDefaultShaderModule(e)}_removeDefaultShaderModule(e){var t;null==(t=this.layerManager)||t.removeDefaultShaderModule(e)}_pick(e,t,n){(0,Q.A)(this.deckPicker);const{stats:i}=this;i.get("Pick Count").incrementCount(),i.get(t).timeStart();const s=this.deckPicker[e](Object.assign({layers:this.layerManager.getLayers(n),views:this.viewManager.getViews(),viewports:this.getViewports(n),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects()},n));return i.get(t).timeEnd(),s}_createCanvas(e){let t=e.canvas;if("string"==typeof t&&(t=document.getElementById(t),(0,Q.A)(t)),!t){t=document.createElement("canvas"),t.id=e.id||"deckgl-overlay";(e.parent||document.body).appendChild(t)}return Object.assign(t.style,e.style),t}_setCanvasSize(e){if(!this.canvas)return;const{width:t,height:n}=e;if(t||0===t){const e=Number.isFinite(t)?t+"px":t;this.canvas.style.width=e}if(n||0===n){var i;const t=Number.isFinite(n)?n+"px":n;this.canvas.style.position=(null==(i=e.style)?void 0:i.position)||"absolute",this.canvas.style.height=t}}_updateCanvasSize(){var e,t;const{canvas:n}=this;if(!n)return;const i=null!=(e=n.clientWidth)?e:n.width,s=null!=(t=n.clientHeight)?t:n.height;var o,r;i===this.width&&s===this.height||(this.width=i,this.height=s,null==(o=this.viewManager)||o.setProps({width:i,height:s}),null==(r=this.layerManager)||r.activateViewport(this.getViewports()[0]),this.props.onResize({width:i,height:s}))}_createAnimationLoop(e,t){const{gl:n,onError:i,useDevicePixels:s}=t;return new X.F({device:e,useDevicePixels:s,autoResizeDrawingBuffer:!n,autoResizeViewport:!1,onInitialize:e=>this._setDevice(e.device),onRender:this._onRenderFrame.bind(this),onError:i})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){const{views:e}=this.props,t=Array.isArray(e)?e:e?[e]:[new x.A({id:"default-view"})];return t.length&&this.props.controller&&(t[0].props.controller=this.props.controller),t}_onContextLost(){const{onError:e}=this.props;this.animationLoop&&e&&e(new Error("WebGL context is lost"))}_pickAndCallback(){const{_pickRequest:e}=this;if(e.event){const{result:s,emptyInfo:o}=this._pick("pickObject","pickObject Time",e);this.cursorState.isHovering=s.length>0;let r=o,a=!1;for(const n of s){var t;r=n,a=(null==(t=n.layer)?void 0:t.onHover(n,e.event))||a}var n,i;if(!a)null==(n=(i=this.props).onHover)||n.call(i,r,e.event),this.widgetManager.onHover(r,e.event);e.event=null}}_updateCursor(){const e=this.props.parent||this.canvas;e&&(e.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(e){var t,n;if(this.device=e,!this.animationLoop)return;this.canvas||(this.canvas=null==(n=this.device.canvasContext)?void 0:n.canvas);this.device instanceof J.e&&this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),this.device instanceof J.e&&this.props.onWebGLInitialized(this.device.gl);const s=new i.K;s.play(),this.animationLoop.attachTimeline(s),this.eventManager=new $.EU(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizers:Object.keys(z.We).map((e=>{var t;const[n,i,s,o]=z.We[e],r=null==(t=this.props.eventRecognizerOptions)?void 0:t[e];return{recognizer:new n(Object.assign({},i,r,{event:e})),recognizeWith:s,requestFailure:o}})),events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const i in z.tg)this.eventManager.on(i,this._onEvent);this.viewManager=new _({timeline:s,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const o=this.viewManager.getViewports()[0];this.layerManager=new b(this.device,{deck:this,stats:this.stats,viewport:o,timeline:s}),this.effectManager=new C({deck:this,device:this.device}),this.deckRenderer=new E(this.device),this.deckPicker=new k(this.device),this.widgetManager=new F({deck:this,parentElement:null==(t=this.canvas)?void 0:t.parentElement}),this.widgetManager.addDefault(new B),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(e,t){var n;const{device:i,gl:s}=this.layerManager.context;this.props.onBeforeRender({device:i,gl:s});const o=Object.assign({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects()},t);null==(n=this.deckRenderer)||n.renderLayers(o),"screen"===o.pass&&this.widgetManager.onRedraw({viewports:o.viewports,layers:o.layers}),this.props.onAfterRender({device:i,gl:s})}_onRenderFrame(){this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),h.A.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(e){const t=this.props.onViewStateChange(e)||e.viewState;this.viewState&&(this.viewState=Object.assign({},this.viewState,{[e.viewId]:t}),this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(e){this.cursorState.isDragging=e.isDragging||!1,this.props.onInteractionStateChange(e)}_getFrameStats(){const{stats:e}=this;e.get("frameRate").timeEnd(),e.get("frameRate").timeStart();const t=this.animationLoop.stats;e.get("GPU Time").addTime(t.get("GPU Time").lastTiming),e.get("CPU Time").addTime(t.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:e,stats:t}=this;e.fps=t.get("frameRate").getHz(),e.setPropsTime=t.get("setProps Time").time,e.updateAttributesTime=t.get("Update Attributes").time,e.framesRedrawn=t.get("Redraw Count").count,e.pickTime=t.get("pickObject Time").time+t.get("pickMultipleObjects Time").time+t.get("pickObjects Time").time,e.pickCount=t.get("Pick Count").count,e.gpuTime=t.get("GPU Time").time,e.cpuTime=t.get("CPU Time").time,e.gpuTimePerFrame=t.get("GPU Time").getAverageTime(),e.cpuTimePerFrame=t.get("CPU Time").getAverageTime();const n=q.a.stats.get("Memory Usage");e.bufferMemory=n.get("Buffer Memory").count,e.textureMemory=n.get("Texture Memory").count,e.renderbufferMemory=n.get("Renderbuffer Memory").count,e.gpuMemory=n.get("GPU Memory").count}}ne.defaultProps=te,ne.VERSION=Z;const ie=ne},3002:(e,t,n)=>{n.d(t,{A:()=>ie});var i=n(26839),s=n(20698),o=n(8961),r=n(1570),a=n(39976),l=n(54901),c=n(50948);class d extends c.A{get value(){return this._value}_onUpdate(){const{time:e,settings:{fromValue:t,toValue:n,duration:i,easing:s}}=this,o=s(e/i);this._value=(0,l.Cc)(t,n,o)}}const h=1e-5;function u(e,t,n,i,s){const o=t-e;return(n-t)*s+-o*i+o+t}function p(e,t){if(Array.isArray(e)){let n=0;for(let i=0;i<e.length;i++){const s=e[i]-t[i];n+=s*s}return Math.sqrt(n)}return Math.abs(e-t)}class g extends c.A{get value(){return this._currValue}_onUpdate(){const{fromValue:e,toValue:t,damping:n,stiffness:i}=this.settings,{_prevValue:s=e,_currValue:o=e}=this;let r=function(e,t,n,i,s){if(Array.isArray(n)){const o=[];for(let r=0;r<n.length;r++)o[r]=u(e[r],t[r],n[r],i,s);return o}return u(e,t,n,i,s)}(s,o,t,n,i);const a=p(r,t),l=p(r,o);a<h&&l<h&&(r=t,this.end()),this._prevValue=o,this._currValue=r}}var f=n(18120);const m={interpolation:d,spring:g};class v{constructor(e){this.transitions=new Map,this.timeline=e}get active(){return this.transitions.size>0}add(e,t,n,i){const{transitions:s}=this;if(s.has(e)){const n=s.get(e),{value:i=n.settings.fromValue}=n;t=i,this.remove(e)}if(!(i=(0,a.K)(i)))return;const o=m[i.type];if(!o)return void f.A.error("unsupported transition type '"+i.type+"'")();const r=new o(this.timeline);r.start(Object.assign({},i,{fromValue:t,toValue:n})),s.set(e,r)}remove(e){const{transitions:t}=this;t.has(e)&&(t.get(e).cancel(),t.delete(e))}update(){const e={};for(const[t,n]of this.transitions)n.update(),e[t]=n.value,n.inProgress||this.remove(t);return e}clear(){for(const e of this.transitions.keys())this.remove(e)}}var y=n(9649),b=n(95958);function w(e){if(null===(t=e)||"object"!=typeof t)throw new Error("count(): argument not an object");var t;if("function"==typeof e.count)return e.count();if(Number.isFinite(e.size))return e.size;if(Number.isFinite(e.length))return e.length;if(function(e){return null!==e&&"object"==typeof e&&e.constructor===Object}(e))return Object.keys(e).length;throw new Error("count(): argument not a container")}var _=n(95656),x=n(95238),P=n(63190);function S(e,t){if(!t)return e;const n=Object.assign({},e,t);if("defines"in t&&(n.defines=Object.assign({},e.defines,t.defines)),"modules"in t&&(n.modules=(e.modules||[]).concat(t.modules),t.modules.some((e=>"project64"===e.name)))){const e=n.modules.findIndex((e=>"project32"===e.name));e>=0&&n.modules.splice(e,1)}if("inject"in t)if(e.inject){const i=Object.assign({},e.inject);for(const e in t.inject)i[e]=(i[e]||"")+t.inject[e];n.inject=i}else n.inject=t.inject;return n}var C=n(5600),A=n(81052),M=n(33698),T=n(80698);const E={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},j={};var I=n(50111);const O={boolean:{validate:(e,t)=>!0,equal:(e,t,n)=>Boolean(e)===Boolean(t)},number:{validate:(e,t)=>Number.isFinite(e)&&(!("max"in t)||e<=t.max)&&(!("min"in t)||e>=t.min)},color:{validate:(e,t)=>t.optional&&!e||k(e)&&(3===e.length||4===e.length),equal:(e,t,n)=>(0,I.b)(e,t,1)},accessor:{validate(e,t){const n=z(e);return"function"===n||n===z(t.value)},equal:(e,t,n)=>"function"==typeof t||(0,I.b)(e,t,1)},array:{validate:(e,t)=>t.optional&&!e||k(e),equal(e,t,n){const{compare:i}=n,s=Number.isInteger(i)?i:i?1:0;return i?(0,I.b)(e,t,s):e===t}},object:{equal(e,t,n){if(n.ignore)return!0;const{compare:i}=n,s=Number.isInteger(i)?i:i?1:0;return i?(0,I.b)(e,t,s):e===t}},function:{validate:(e,t)=>t.optional&&!e||"function"==typeof e,equal:(e,t,n)=>!n.compare&&!1!==n.ignore||e===t},data:{transform:(e,t,n)=>{if(!e)return e;const{dataTransform:i}=n.props;return i?i(e):"string"==typeof e.shape&&e.shape.endsWith("-table")&&Array.isArray(e.data)?e.data:e}},image:{transform:(e,t,n)=>{const i=n.context;return i&&i.device?function(e,t,n,i){if(n instanceof T.g)return n;n.constructor&&"Object"!==n.constructor.name&&(n={data:n});let s=null;n.compressed&&(s={minFilter:"linear",mipmapFilter:n.data.length>1?"nearest":"linear"});const o=t.createTexture(Object.assign({},n,{sampler:Object.assign({},E,s,i),mipmaps:!0}));return j[o.id]=e,o}(n.id,i.device,e,Object.assign({},t.parameters,n.props.textureParameters)):null},release:(e,t,n)=>{var i,s;i=n.id,(s=e)&&s instanceof T.g&&j[s.id]===i&&(s.delete(),delete j[s.id])}}};function L(e,t){switch(z(t)){case"object":return R(e,t);case"array":return R(e,{type:"array",value:t,compare:!1});case"boolean":return R(e,{type:"boolean",value:t});case"number":return R(e,{type:"number",value:t});case"function":return R(e,{type:"function",value:t,compare:!0});default:return{name:e,type:"unknown",value:t}}}function R(e,t){return"type"in t?Object.assign({name:e},O[t.type],t):"value"in t?Object.assign({name:e,type:z(t.value)},t):{name:e,type:"object",value:t}}function k(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function z(e){return k(e)?"array":null===e?"null":typeof e}const D="_mergedDefaultProps";function V(e,t){if(!(e instanceof G.constructor))return{};let n=D;if(t)for(const s of t){const e=s.constructor;e&&(n+=":"+(e.extensionName||e.name))}const i=U(e,n);return i||(e[n]=function(e,t){const n=e.prototype;if(!n)return null;const i=Object.getPrototypeOf(e),s=V(i),o=U(e,"defaultProps")||{},r=function(e){const t={},n={},i={};for(const[s,o]of Object.entries(e)){const e=null==o?void 0:o.deprecatedFor;if(e)i[s]=Array.isArray(e)?e:[e];else{const e=L(s,o);t[s]=e,n[s]=e.value}}return{propTypes:t,defaultProps:n,deprecatedProps:i}}(o),a=Object.assign(Object.create(null),s,r.defaultProps),l=Object.assign(Object.create(null),null==s?void 0:s[b.fW],r.propTypes),c=Object.assign(Object.create(null),null==s?void 0:s[b.uH],r.deprecatedProps);for(const d of t){const e=V(d.constructor);e&&(Object.assign(a,e),Object.assign(l,e[b.fW]),Object.assign(c,e[b.uH]))}(function(e,t){const n=function(e){const t=e.componentName;t||f.A.warn(e.name+".componentName not specified")();return t||e.name}(t);Object.defineProperties(e,{id:{writable:!0,value:n}})})(a,e),function(e,t){const n={},i={};for(const s in t){const e=t[s],{name:o,value:r}=e;e.async&&(n[o]=r,i[o]=N(o))}e[b.jA]=n,e[b.YN]={},Object.defineProperties(e,i)}(a,l),function(e,t){for(const n in t)Object.defineProperty(e,n,{enumerable:!1,set(e){const i=this.id+": "+n;for(const s of t[n])F(this,s)||(this[s]=e);f.A.deprecated(i,t[n].join("/"))()}})}(a,c),a[b.fW]=l,a[b.uH]=c,0!==t.length||F(e,"_propTypes")||(e._propTypes=l);return a}(e,t||[]))}function N(e){return{enumerable:!0,set(t){"string"==typeof t||t instanceof Promise||(0,M.Td)(t)?this[b.YN][e]=t:this[b.vf][e]=t},get(){if(this[b.vf]){if(e in this[b.vf]){return this[b.vf][e]||this[b.jA][e]}if(e in this[b.YN]){const t=this[b.r3]&&this[b.r3].internalState;if(t&&t.hasAsyncProp(e))return t.getAsyncProp(e)||this[b.jA][e]}}return this[b.jA][e]}}}function F(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function U(e,t){return F(e,t)&&e[t]}let B=0;class W{constructor(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.props=function(e,t){let n;for(let o=t.length-1;o>=0;o--){const e=t[o];"extensions"in e&&(n=e.extensions)}const i=V(e.constructor,n),s=Object.create(i);s[b.r3]=e,s[b.YN]={},s[b.vf]={};for(let o=0;o<t.length;++o){const e=t[o];for(const t in e)s[t]=e[t]}return Object.freeze(s),s}(this,t),this.id=this.props.id,this.count=B++}clone(e){const{props:t}=this,n={};for(const i in t[b.jA])i in t[b.vf]?n[i]=t[b.vf][i]:i in t[b.YN]&&(n[i]=t[b.YN][i]);return new this.constructor(Object.assign({},t,n,e))}}W.componentName="Component",W.defaultProps={};const G=W;var H=n(19495);const K=Object.freeze({});class Z{constructor(e){this.component=e,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const e in this.asyncProps){const t=this.asyncProps[e];t&&t.type&&t.type.release&&t.type.release(t.resolvedValue,t.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||K}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(e){return e in this.asyncProps}getAsyncProp(e){const t=this.asyncProps[e];return t&&t.resolvedValue}isAsyncPropLoading(e){if(e){const t=this.asyncProps[e];return Boolean(t&&t.pendingLoadCount>0&&t.pendingLoadCount!==t.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(e,t){this._watchPromise(e,Promise.resolve(t))}setAsyncProps(e){this.component=e[b.r3]||this.component;const t=e[b.vf]||{},n=e[b.YN]||e,i=e[b.jA]||{};for(const s in t){const e=t[s];this._createAsyncPropData(s,i[s]),this._updateAsyncProp(s,e),t[s]=this.getAsyncProp(s)}for(const s in n){const e=n[s];this._createAsyncPropData(s,i[s]),this._updateAsyncProp(s,e)}}_fetch(e,t){return null}_onResolve(e,t){}_onError(e,t){}_updateAsyncProp(e,t){this._didAsyncInputValueChange(e,t)&&("string"==typeof t&&(t=this._fetch(e,t)),t instanceof Promise?this._watchPromise(e,t):(0,M.Td)(t)?this._resolveAsyncIterable(e,t):this._setPropValue(e,t))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const e in this.asyncProps)Object.defineProperty(this.oldAsyncProps,e,{enumerable:!0,value:this.oldProps[e]})}}_didAsyncInputValueChange(e,t){const n=this.asyncProps[e];return t!==n.resolvedValue&&t!==n.lastValue&&(n.lastValue=t,!0)}_setPropValue(e,t){this._freezeAsyncOldProps();const n=this.asyncProps[e];n&&(t=this._postProcessValue(n,t),n.resolvedValue=t,n.pendingLoadCount++,n.resolvedLoadCount=n.pendingLoadCount)}_setAsyncPropValue(e,t,n){const i=this.asyncProps[e];i&&n>=i.resolvedLoadCount&&void 0!==t&&(this._freezeAsyncOldProps(),i.resolvedValue=t,i.resolvedLoadCount=n,this.onAsyncPropUpdated(e,t))}_watchPromise(e,t){const n=this.asyncProps[e];if(n){n.pendingLoadCount++;const i=n.pendingLoadCount;t.then((t=>{this.component&&(t=this._postProcessValue(n,t),this._setAsyncPropValue(e,t,i),this._onResolve(e,t))})).catch((t=>{this._onError(e,t)}))}}async _resolveAsyncIterable(e,t){if("data"!==e)return void this._setPropValue(e,t);const n=this.asyncProps[e];if(!n)return;n.pendingLoadCount++;const i=n.pendingLoadCount;let s=[],o=0;var r,a=!1,l=!1;try{for(var c,d=(0,H.A)(t);a=!(c=await d.next()).done;a=!1){const t=c.value;{if(!this.component)return;const{dataTransform:n}=this.component.props;s=n?n(t,s):s.concat(t),Object.defineProperty(s,"__diff",{enumerable:!1,value:[{startRow:o,endRow:s.length}]}),o=s.length,this._setAsyncPropValue(e,s,i)}}}catch(h){l=!0,r=h}finally{try{a&&null!=d.return&&await d.return()}finally{if(l)throw r}}this._onResolve(e,s)}_postProcessValue(e,t){const n=e.type;return n&&this.component&&(n.release&&n.release(e.resolvedValue,n,this.component),n.transform)?n.transform(t,n,this.component):t}_createAsyncPropData(e,t){if(!this.asyncProps[e]){const n=this.component&&this.component.props[b.fW];this.asyncProps[e]={type:n&&n[e],lastValue:null,resolvedValue:t,pendingLoadCount:0,resolvedLoadCount:0}}}}class q extends Z{constructor(e){let{attributeManager:t,layer:n}=e;super(n),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(e,t){const n=this.layer,i=null==n?void 0:n.props.fetch;return i?i(t,{propName:e,layer:n}):super._fetch(e,t)}_onResolve(e,t){const n=this.layer;if(n){const i=n.props.onDataLoad;"data"===e&&i&&i(t,{propName:e,layer:n})}}_onError(e,t){const n=this.layer;n&&n.raiseError(t,"loading "+e+" of "+this.layer)}}var Y=n(24697),J=n(327);const X=2**24-1,$=Object.freeze([]),Q=(0,P.A)((e=>{let{oldViewport:t,viewport:n}=e;return t.equals(n)}));let ee=new Uint8ClampedArray(0);const te={data:{type:"data",value:$,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:e=>e&&e.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(e,t)=>{let{propName:n,layer:i,loaders:s,loadOptions:o,signal:r}=t;const{resourceManager:a}=i.context;var l;(o=o||i.getLoadOptions(),s=s||i.props.loaders,r)&&(o=Object.assign({},o,{fetch:Object.assign({},null==(l=o)?void 0:l.fetch,{signal:r})}));let c=a.contains(e);return c||o||(a.add({resourceId:e,data:(0,J.H)(e,s),persistent:!1}),c=!0),c?a.subscribe({resourceId:e,onChange:e=>{var t;return null==(t=i.internalState)?void 0:t.reloadAsyncProp(n,e)},consumerId:i.id,requestId:n}):(0,J.H)(e,s,o)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:o.rf.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:e=>{let{layerIndex:t}=e;return[0,100*-t]}},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class ne extends G{constructor(){super(...arguments),this.internalState=null,this.lifecycle=b.VD.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let e=this;for(;e.parent;)e=e.parent;return e}toString(){return(this.constructor.layerName||this.constructor.name)+"({id: '"+this.props.id+"'})"}project(e){(0,x.A)(this.internalState);const t=this.internalState.viewport||this.context.viewport,n=(0,C.w)(e,{viewport:t,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[i,s,o]=(0,Y.VJ)(n,t.pixelProjectionMatrix);return 2===e.length?[i,s]:[i,s,o]}unproject(e){(0,x.A)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(e)}projectPosition(e,t){(0,x.A)(this.internalState);const n=this.internalState.viewport||this.context.viewport;return(0,C.R)(e,Object.assign({viewport:n,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem},t))}get isComposite(){return!1}get isDrawable(){return!0}setState(e){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,e),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const e=this.state;return e&&(e.models||e.model&&[e.model])||[]}setShaderModuleProps(){for(const e of this.getModels())e.shaderInputs.setProps(...arguments)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:e}=this.props;return e===o.rf.DEFAULT||e===o.rf.LNGLAT||e===o.rf.CARTESIAN}onHover(e,t){return this.props.onHover&&this.props.onHover(e,t)||!1}onClick(e,t){return this.props.onClick&&this.props.onClick(e,t)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(e,t){return void 0===t&&(t=[]),t[0]=e+1&255,t[1]=e+1>>8&255,t[2]=e+1>>8>>8&255,t}decodePickingColor(e){(0,x.A)(e instanceof Uint8Array);const[t,n,i]=e;return t+256*n+65536*i-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:w(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["positions","instancePositions"])}getShaders(e){e=S(e,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const t of this.props.extensions)e=S(e,t.getShaders.call(this,t));return e}shouldUpdateState(e){return e.changeFlags.propsOrDataChanged}updateState(e){const t=this.getAttributeManager(),{dataChanged:n}=e.changeFlags;if(n&&t)if(Array.isArray(n))for(const i of n)t.invalidateAll(i);else t.invalidateAll();if(t){const{props:n}=e,i=this.internalState.hasPickingBuffer,s=Number.isInteger(n.highlightedObjectIndex)||n.pickable||n.extensions.some((e=>e.getNeedsPickingBuffer.call(this,e)));if(i!==s){this.internalState.hasPickingBuffer=s;const{pickingColors:e,instancePickingColors:n}=t.attributes,i=e||n;i&&(s&&i.constant&&(i.constant=!1,t.invalidate(i.id)),i.value||s||(i.constant=!0,i.value=[0,0,0]))}}}finalizeState(e){for(const n of this.getModels())n.destroy();const t=this.getAttributeManager();t&&t.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(e){for(const t of this.getModels())t.draw(e.renderPass)}getPickingInfo(e){let{info:t,mode:n,sourceLayer:i}=e;const{index:s}=t;return s>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[s]),t}raiseError(e,t){var n,i,s;(t&&(e=new Error(t+": "+e.message,{cause:e})),null!=(n=(i=this.props).onError)&&n.call(i,e))||(null==(s=this.context)||null==s.onError||s.onError(e,this))}getNeedsRedraw(e){return void 0===e&&(e={clearRedrawFlags:!1}),this._getNeedsRedraw(e)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var e;return(null==(e=this.internalState)?void 0:e.uniformTransitions.active)||!1}activateViewport(e){if(!this.internalState)return;const t=this.internalState.viewport;this.internalState.viewport=e,t&&Q({oldViewport:t,viewport:e})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(e){void 0===e&&(e="all");const t=this.getAttributeManager();t&&("all"===e?t.invalidateAll():t.invalidate(e))}updateAttributes(e){let t=!1;for(const n in e)e[n].layoutChanged()&&(t=!0);for(const n of this.getModels())this._setModelAttributes(n,e,t)}_updateAttributes(){const e=this.getAttributeManager();if(!e)return;const t=this.props,n=this.getNumInstances(),i=this.getStartIndices();e.update({data:t.data,numInstances:n,startIndices:i,props:t,transitions:t.transitions,buffers:t.data.attributes,context:this});const s=e.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(s)}_updateAttributeTransition(){const e=this.getAttributeManager();e&&e.updateTransition()}_updateUniformTransition(){const{uniformTransitions:e}=this.internalState;if(e.active){const t=e.update(),n=Object.create(this.props);for(const e in t)Object.defineProperty(n,e,{value:t[e]});return n}return this.props}calculateInstancePickingColors(e,t){let{numInstances:n}=t;if(e.constant)return;const i=Math.floor(ee.length/4);if(this.internalState.usesPickingColorCache=!0,i<n){n>X&&f.A.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),ee=A.A.allocate(ee,n,{size:4,copy:!0,maxCount:Math.max(n,X)});const e=Math.floor(ee.length/4),t=[0,0,0];for(let n=i;n<e;n++)this.encodePickingColor(n,t),ee[4*n+0]=t[0],ee[4*n+1]=t[1],ee[4*n+2]=t[2],ee[4*n+3]=0}e.value=ee.subarray(0,4*n)}_setModelAttributes(e,t,n){var s;if(void 0===n&&(n=!1),!Object.keys(t).length)return;if(n){const n=this.getAttributeManager();e.setBufferLayout(n.getBufferLayouts(e)),t=n.getAttributes()}const o=(null==(s=e.userData)?void 0:s.excludeAttributes)||{},r={},a={};for(const l in t){if(o[l])continue;const n=t[l].getValue();for(const s in n){const o=n[s];o instanceof i.h?t[l].settings.isIndexed?e.setIndexBuffer(o):r[s]=o:o&&(a[s]=o)}}e.setAttributes(r),e.setConstantAttributes(a)}disablePickingIndex(e){const t=this.props.data;if(!("attributes"in t))return void this._disablePickingIndex(e);const{pickingColors:n,instancePickingColors:i}=this.getAttributeManager().attributes,s=n||i,o=s&&t.attributes&&t.attributes[s.id];if(o&&o.value){const n=o.value,i=this.encodePickingColor(e);for(let e=0;e<t.length;e++){const t=s.getVertexOffset(e);n[t]===i[0]&&n[t+1]===i[1]&&n[t+2]===i[2]&&this._disablePickingIndex(e)}}else this._disablePickingIndex(e)}_disablePickingIndex(e){const{pickingColors:t,instancePickingColors:n}=this.getAttributeManager().attributes,i=t||n;if(!i)return;const s=i.getVertexOffset(e),o=i.getVertexOffset(e+1);i.buffer.write(new Uint8Array(o-s),s)}restorePickingColors(){const{pickingColors:e,instancePickingColors:t}=this.getAttributeManager().attributes,n=e||t;n&&(this.internalState.usesPickingColorCache&&n.value.buffer!==ee.buffer&&(n.value=ee.subarray(0,n.value.length)),n.updateSubBuffer({startOffset:0}))}_initialize(){(0,x.A)(!this.internalState),(0,x.A)(Number.isFinite(this.props.coordinateSystem)),(0,_.A)("layer.initialize",this);const e=this._getAttributeManager();e&&e.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new q({attributeManager:e,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(f.A.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),e)}),this.internalState.uniformTransitions=new v(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(e){(0,_.A)("layer.matched",this,this===e);const{state:t,internalState:n}=e;this!==e&&(this.internalState=n,this.state=t,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const e=this.needsUpdate();if((0,_.A)("layer.update",this,e),!e)return;const t=this.props,n=this.context,i=this.internalState,s=n.viewport,o=this._updateUniformTransition();i.propsInTransition=o,n.viewport=i.viewport||s,this.props=o;try{const e=this._getUpdateParams(),t=this.getModels();if(n.device)this.updateState(e);else try{this.updateState(e)}catch(r){}for(const n of this.props.extensions)n.updateState.call(this,e,n);this.setNeedsRedraw(),this._updateAttributes();const i=this.getModels()[0]!==t[0];this._postUpdate(e,i)}finally{n.viewport=s,this.props=t,this._clearChangeFlags(),i.needsUpdate=!1,i.resetOldProps()}}_finalize(){(0,_.A)("layer.finalize",this),this.finalizeState(this.context);for(const e of this.props.extensions)e.finalizeState.call(this,this.context,e)}_drawLayer(e){let{renderPass:t,shaderModuleProps:n=null,uniforms:i={},parameters:o={}}=e;this._updateAttributeTransition();const r=this.props,a=this.context;this.props=this.internalState.propsInTransition||r;try{n&&this.setShaderModuleProps(n);const{getPolygonOffset:e}=this.props,r=e&&e(i)||[0,0];a.device instanceof s.e&&a.device.setParametersWebGL({polygonOffset:r});for(const t of this.getModels())t.setParameters(o);if(a.device instanceof s.e)a.device.withParametersWebGL(o,(()=>{const e={renderPass:t,shaderModuleProps:n,uniforms:i,parameters:o,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}));else{const e={renderPass:t,shaderModuleProps:n,uniforms:i,parameters:o,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}}finally{this.props=r}}getChangeFlags(){var e;return null==(e=this.internalState)?void 0:e.changeFlags}setChangeFlags(e){if(!this.internalState)return;const{changeFlags:t}=this.internalState;for(const i in e)if(e[i]){let n=!1;if("dataChanged"===i){const s=e[i],o=t[i];s&&Array.isArray(o)&&(t.dataChanged=Array.isArray(s)?o.concat(s):s,n=!0)}t[i]||(t[i]=e[i],n=!0),n&&(0,_.A)("layer.changeFlag",this,i,e)}const n=Boolean(t.dataChanged||t.updateTriggersChanged||t.propsChanged||t.extensionsChanged);t.propsOrDataChanged=n,t.somethingChanged=n||t.viewportChanged||t.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(e,t){const n=(0,y.mg)(e,t);if(n.updateTriggersChanged)for(const s in n.updateTriggersChanged)n.updateTriggersChanged[s]&&this.invalidateAttribute(s);if(n.transitionsChanged)for(const s in n.transitionsChanged){var i;this.internalState.uniformTransitions.add(s,t[s],e[s],null==(i=e.transitions)?void 0:i[s])}return this.setChangeFlags(n)}validateProps(){(0,y.zo)(this.props)}updateAutoHighlight(e){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(e)}_updateAutoHighlight(e){const t={highlightedObjectColor:e.picked?e.color:null},{highlightColor:n}=this.props;e.picked&&"function"==typeof n&&(t.highlightColor=n(e)),this.setShaderModuleProps({picking:t}),this.setNeedsRedraw()}_getAttributeManager(){const e=this.context;return new r.A(e.device,{id:this.props.id,stats:e.stats,timeline:e.timeline})}_postUpdate(e,t){const{props:n,oldProps:i}=e,s=this.state.model;null!=s&&s.isInstanced&&s.setInstanceCount(this.getNumInstances());const{autoHighlight:o,highlightedObjectIndex:r,highlightColor:a}=n;if(t||i.autoHighlight!==o||i.highlightedObjectIndex!==r||i.highlightColor!==a){const e={};Array.isArray(a)&&(e.highlightColor=a),(t||i.autoHighlight!==o||r!==i.highlightedObjectIndex)&&(e.highlightedObjectColor=Number.isFinite(r)&&r>=0?this.encodePickingColor(r):null),this.setShaderModuleProps({picking:e})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(e){if(!this.internalState)return!1;let t=!1;t=t||this.internalState.needsRedraw&&this.id;const n=this.getAttributeManager(),i=!!n&&n.getNeedsRedraw(e);if(t=t||i,t)for(const s of this.props.extensions)s.onNeedsRedraw.call(this,s);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!e.clearRedrawFlags,t}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}ne.defaultProps=te,ne.layerName="Layer";const ie=ne},95958:(e,t,n)=>{n.d(t,{VD:()=>i,YN:()=>l,fW:()=>o,jA:()=>a,r3:()=>s,uH:()=>r,vf:()=>c});const i={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},s=Symbol.for("component"),o=Symbol.for("propTypes"),r=Symbol.for("deprecatedProps"),a=Symbol.for("asyncPropDefaults"),l=Symbol.for("asyncPropOriginal"),c=Symbol.for("asyncPropResolved")},9649:(e,t,n)=>{n.d(t,{Me:()=>a,mg:()=>o,zo:()=>s});var i=n(95958);function s(e){const t=e[i.fW];for(const n in t){const i=t[n],{validate:s}=i;if(s&&!s(e[n],i))throw new Error("Invalid prop "+n+": "+e[n])}}function o(e,t){const n=a({newProps:e,oldProps:t,propTypes:e[i.fW],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),s=function(e,t){if(null===t)return"oldProps is null, initial diff";let n=!1;const{dataComparator:i,_dataDiff:s}=e;i?i(e.data,t.data)||(n="Data comparator detected a change"):e.data!==t.data&&(n="A new data container was supplied");n&&s&&(n=s(e.data,t.data)||n);return n}(e,t);let o=!1;return s||(o=function(e,t){if(null===t)return{all:!0};if("all"in e.updateTriggers){if(d(e,t,"all"))return{all:!0}}const n={};let i=!1;for(const s in e.updateTriggers)if("all"!==s){d(e,t,s)&&(n[s]=!0,i=!0)}return!!i&&n}(e,t)),{dataChanged:s,propsChanged:n,updateTriggersChanged:o,extensionsChanged:c(e,t),transitionsChanged:r(e,t)}}function r(e,t){if(!e.transitions)return!1;const n={},s=e[i.fW];let o=!1;for(const i in e.transitions){const r=s[i],a=r&&r.type;("number"===a||"color"===a||"array"===a)&&l(e[i],t[i],r)&&(n[i]=!0,o=!0)}return!!o&&n}function a(e){let{newProps:t,oldProps:n,ignoreProps:i={},propTypes:s={},triggerName:o="props"}=e;if(n===t)return!1;if("object"!=typeof t||null===t)return o+" changed shallowly";if("object"!=typeof n||null===n)return o+" changed shallowly";for(const r of Object.keys(t))if(!(r in i)){if(!(r in n))return o+"."+r+" added";const e=l(t[r],n[r],s[r]);if(e)return o+"."+r+" "+e}for(const r of Object.keys(n))if(!(r in i)){if(!(r in t))return o+"."+r+" dropped";if(!Object.hasOwnProperty.call(t,r)){const e=l(t[r],n[r],s[r]);if(e)return o+"."+r+" "+e}}return!1}function l(e,t,n){let i=n&&n.equal;return i&&!i(e,t,n)?"changed deeply":i||(i=e&&t&&e.equals,!i||i.call(e,t))?i||t===e?null:"changed shallowly":"changed deeply"}function c(e,t){if(null===t)return!0;const n=t.extensions,{extensions:i}=e;if(i===n)return!1;if(!n||!i)return!0;if(i.length!==n.length)return!0;for(let s=0;s<i.length;s++)if(!i[s].equals(n[s]))return!0;return!1}function d(e,t,n){let i=e.updateTriggers[n];i=null==i?{}:i;let s=t.updateTriggers[n];s=null==s?{}:s;return a({oldProps:s,newProps:i,triggerName:n})}},44584:(e,t,n)=>{n.d(t,{A:()=>s});var i=n(39883);class s extends i.A{constructor(){super(...arguments),this._lastRenderIndex=-1}render(e){var t,n,i;const[s,o]=this.device.canvasContext.getDrawingBufferSize(),r=null==(t=e.clearCanvas)||t,a=null!=(n=e.clearColor)?n:!!r&&[0,0,0,0],l=!!r&&1,c=!!r&&0,d=null!=(i=e.colorMask)?i:15,h={viewport:[0,0,s,o]};e.colorMask&&(h.colorMask=d),e.scissorRect&&(h.scissorRect=e.scissorRect);const u=this.device.beginRenderPass({framebuffer:e.target,parameters:h,clearColor:a,clearDepth:l,clearStencil:c});try{return this._drawLayers(u,e)}finally{u.end()}}_drawLayers(e,t){const{target:n,shaderModuleProps:i,viewports:s,views:o,onViewportActive:r,clearStack:a=!0}=t;t.pass=t.pass||"unknown",a&&(this._lastRenderIndex=-1);const l=[];for(const c of s){const s=o&&o[c.id];null==r||r(c);const a=this._getDrawLayerParams(c,t),d=c.subViewports||[c];for(const o of d){const r=this._drawLayersInViewport(e,{target:n,shaderModuleProps:i,viewport:o,view:s,pass:t.pass,layers:t.layers},a);l.push(r)}}return l}_getDrawLayerParams(e,t,n){let{layers:i,pass:s,isPicking:r=!1,layerFilter:a,cullRect:l,effects:c,shaderModuleProps:d}=t;void 0===n&&(n=!1);const h=[],u=o(this._lastRenderIndex+1),p={layer:i[0],viewport:e,isPicking:r,renderPass:s,cullRect:l},g={};for(let o=0;o<i.length;o++){const t=i[o],r=this._shouldDrawLayer(t,p,a,g),l={shouldDrawLayer:r};var f;if(r&&!n)l.shouldDrawLayer=!0,l.layerRenderIndex=u(t,r),l.shaderModuleProps=this._getShaderModuleProps(t,c,s,d),l.layerParameters=Object.assign({},null==(f=t.context.deck)?void 0:f.props.parameters,this.getLayerParameters(t,o,e));h[o]=l}return h}_drawLayersInViewport(e,t,n){let{layers:i,shaderModuleProps:s,pass:o,target:r,viewport:a,view:l}=t;const c=function(e,t){var n,i;let{shaderModuleProps:s,target:o,viewport:r}=t;const a=null!=(n=null==s||null==(i=s.project)?void 0:i.devicePixelRatio)?n:e.canvasContext.cssToDeviceRatio(),[,l]=e.canvasContext.getDrawingBufferSize(),c=o?o.height:l,d=r;return[d.x*a,c-(d.y+d.height)*a,d.width*a,d.height*a]}(this.device,{shaderModuleProps:s,target:r,viewport:a});if(l&&l.props.clear){const e=!0===l.props.clear?{color:!0,depth:!0}:l.props.clear;this.device.beginRenderPass({framebuffer:r,parameters:{viewport:c,scissorRect:c},clearColor:!!e.color&&[0,0,0,0],clearDepth:!!e.depth&&1}).end()}const d={totalCount:i.length,visibleCount:0,compositeCount:0,pickableCount:0};e.setParameters({viewport:c});for(let u=0;u<i.length;u++){const t=i[u],s=n[u],{shouldDrawLayer:r}=s;if(r&&t.props.pickable&&d.pickableCount++,t.isComposite&&d.compositeCount++,t.isDrawable&&s.shouldDrawLayer){const{layerRenderIndex:n,shaderModuleProps:i,layerParameters:r}=s;d.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,n),i.project&&(i.project.viewport=a),t.context.renderPass=e;try{t._drawLayer({renderPass:e,shaderModuleProps:i,uniforms:{layerIndex:n},parameters:r})}catch(h){t.raiseError(h,"drawing "+t+" to "+o)}}}return d}shouldDrawLayer(e){return!0}getShaderModuleProps(e,t,n){return null}getLayerParameters(e,t,n){return e.props.parameters}_shouldDrawLayer(e,t,n,i){if(!(e.props.visible&&this.shouldDrawLayer(e)))return!1;t.layer=e;let s=e.parent;for(;s;){if(!s.props.visible||!s.filterSubLayer(t))return!1;t.layer=s,s=s.parent}if(n){const e=t.layer.id;if(e in i||(i[e]=n(t)),!i[e])return!1}return e.activateViewport(t.viewport),!0}_getShaderModuleProps(e,t,n,i){var s;const o=this.device.canvasContext.cssToDeviceRatio(),a=(null==(s=e.internalState)?void 0:s.propsInTransition)||e.props,l={layer:a,picking:{isActive:!1},project:{viewport:e.context.viewport,devicePixelRatio:o,modelMatrix:a.modelMatrix,coordinateSystem:a.coordinateSystem,coordinateOrigin:a.coordinateOrigin,autoWrapLongitude:e.wrapLongitude}};if(t)for(const c of t)r(l,null==c.getShaderModuleProps?void 0:c.getShaderModuleProps(e,l));return r(l,this.getShaderModuleProps(e,t,l),i)}}function o(e,t){void 0===e&&(e=0),void 0===t&&(t={});const n={},i=(s,r)=>{const a=s.props._offset,l=s.id,c=s.parent&&s.parent.id;let d;if(c&&!(c in t)&&i(s.parent,!1),c in n){const e=n[c]=n[c]||o(t[c],t);d=e(s,r),n[l]=e}else Number.isFinite(a)?(d=a+(t[c]||0),n[l]=null):d=e;return r&&d>=e&&(e=d+1),t[l]=d,d};return i}function r(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(const s of n)if(s)for(const t in s)e[t]?Object.assign(e[t],s[t]):e[t]=s[t];return e}},39883:(e,t,n)=>{n.d(t,{A:()=>i});class i{constructor(e,t){void 0===t&&(t={id:"pass"});const{id:n}=t;this.id=n,this.device=e,this.props=Object.assign({},t)}setProps(e){Object.assign(this.props,e)}render(e){}cleanup(){}}},78218:(e,t,n)=>{n.d(t,{A:()=>r});var i=n(44584),s=n(18120);const o={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"};class r extends i.A{constructor(){super(...arguments),this._colorEncoderState=null}render(e){return"pickingFBO"in e?this._drawPickingBuffer(e):super.render(e)}_drawPickingBuffer(e){let{layers:t,layerFilter:n,views:i,viewports:s,onViewportActive:o,pickingFBO:r,deviceRect:{x:l,y:c,width:d,height:h},cullRect:u,effects:p,pass:g="picking",pickZ:f,shaderModuleProps:m}=e;this.pickZ=f;const v=this._resetColorEncoder(f),y=[l,c,d,h],b=super.render({target:r,layers:t,layerFilter:n,views:i,viewports:s,onViewportActive:o,cullRect:u,effects:null==p?void 0:p.filter((e=>e.useInPicking)),pass:g,isPicking:!0,shaderModuleProps:m,clearColor:[0,0,0,0],colorMask:15,scissorRect:y});this._colorEncoderState=null;return{decodePickingColor:v&&a.bind(null,v),stats:b}}shouldDrawLayer(e){const{pickable:t,operation:n}=e.props;return t&&n.includes("draw")||n.includes("terrain")||n.includes("mask")}getShaderModuleProps(e,t,n){return{picking:{isActive:1,isAttribute:this.pickZ},lighting:{enabled:!1}}}getLayerParameters(e,t,n){const i=Object.assign({},e.props.parameters),{pickable:r,operation:a}=e.props;return!this._colorEncoderState||a.includes("terrain")?i.blend=!1:r&&a.includes("draw")&&(Object.assign(i,o),i.blend=!0,i.blendColor=function(e,t,n){const{byLayer:i,byAlpha:o}=e;let r,a=i.get(t);a?(a.viewports.push(n),r=a.a):(r=i.size+1,r<=255?(a={a:r,layer:t,viewports:[n]},i.set(t,a),o[r]=a):(s.A.warn("Too many pickable layers, only picking the first 255")(),r=0));return[0,0,0,r/255]}(this._colorEncoderState,e,n)),i}_resetColorEncoder(e){return this._colorEncoderState=e?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function a(e,t){const n=e.byAlpha[t[3]];return n&&{pickedLayer:n.layer,pickedViewports:n.viewports,pickedObjectIndex:n.layer.decodePickingColor(t)}}},64458:(e,t,n)=>{n.d(t,{A:()=>s});const i="#define SMOOTH_EDGE_RADIUS 0.5",s={name:"geometry",vs:"\n"+i+"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",fs:"\n"+i+"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"}},28756:(e,t,n)=>{n.d(t,{A:()=>s});var i=n(49042);const s=Object.assign({},i.q,{defaultUniforms:Object.assign({},i.q.defaultUniforms,{useFloatColors:!1}),inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}}})},5600:(e,t,n)=>{n.d(t,{R:()=>u,w:()=>h});var i=n(8961),s=n(28593),o=n(59073),r=n(39426),a=n(82859),l=n(24697);const c=[0,0,0];function d(e,t,n){void 0===n&&(n=!1);const i=t.projectPosition(e);if(n&&t instanceof o.A){const[n,s,o=0]=e,r=t.getDistanceScales([n,s]);i[2]=o*r.unitsPerMeter[2]}return i}function h(e,t){let{viewport:n,modelMatrix:s,coordinateSystem:o,coordinateOrigin:a,offsetMode:c}=t,[h,u,p=0]=e;switch(s&&([h,u,p]=r.Z0([],[h,u,p,1],s)),o){case i.rf.LNGLAT:return d([h,u,p],n,c);case i.rf.LNGLAT_OFFSETS:return d([h+a[0],u+a[1],p+(a[2]||0)],n,c);case i.rf.METER_OFFSETS:return d((0,l.dT)(a,[h,u,p]),n,c);case i.rf.CARTESIAN:default:return n.isGeospatial?[h+a[0],u+a[1],p+a[2]]:n.projectPosition([h,u,p])}}function u(e,t){const{viewport:n,coordinateSystem:o,coordinateOrigin:r,modelMatrix:l,fromCoordinateSystem:d,fromCoordinateOrigin:u}=function(e){const{viewport:t,modelMatrix:n,coordinateOrigin:s}=e;let{coordinateSystem:o,fromCoordinateSystem:r,fromCoordinateOrigin:a}=e;return o===i.rf.DEFAULT&&(o=t.isGeospatial?i.rf.LNGLAT:i.rf.CARTESIAN),void 0===r&&(r=o),void 0===a&&(a=s),{viewport:t,coordinateSystem:o,coordinateOrigin:s,modelMatrix:n,fromCoordinateSystem:r,fromCoordinateOrigin:a}}(t),{autoOffset:p=!0}=t,{geospatialOrigin:g=c,shaderCoordinateOrigin:f=c,offsetMode:m=!1}=p?(0,s.o)(n,o,r):{},v=h(e,{viewport:n,modelMatrix:l,coordinateSystem:d,coordinateOrigin:u,offsetMode:m});if(m){const e=n.projectPosition(g||f);a.jb(v,v,e)}return v}},97272:(e,t,n)=>{n.d(t,{A:()=>c});var i=n(34938),s=n(64458),o=n(8961);const r=Object.keys(o.rf).map((e=>"const int COORDINATE_SYSTEM_"+e+" = "+o.rf[e]+";")).join("")+"\n"+Object.keys(o.Kx).map((e=>"const int PROJECTION_MODE_"+e+" = "+o.Kx[e]+";")).join("")+"\n"+Object.keys(o.p5).map((e=>"const int UNIT_"+e.toUpperCase()+" = "+o.p5[e]+";")).join("")+"\nuniform projectUniforms {\nbool wrapLongitude;\nint coordinateSystem;\nvec3 commonUnitsPerMeter;\nint projectionMode;\nfloat scale;\nvec3 commonUnitsPerWorldUnit;\nvec3 commonUnitsPerWorldUnit2;\nvec4 center;\nmat4 modelMatrix;\nmat4 viewProjectionMatrix;\nvec2 viewportSize;\nfloat devicePixelRatio;\nfloat focalDistance;\nvec3 cameraPosition;\nvec3 coordinateOrigin;\nvec3 commonOrigin;\nbool pseudoMeters;\n} project;\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\nfloat y = clamp(lat, -89.9, 89.9);\nreturn 1.0 / cos(radians(y));\n}\nfloat project_size() {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\nproject.pseudoMeters == false) {\nif (geometry.position.w == 0.0) {\nreturn project_size_at_latitude(geometry.worldPosition.y);\n}\nfloat y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\nfloat y2 = y * y;\nfloat y4 = y2 * y2;\nfloat y6 = y4 * y2;\nreturn 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n}\nreturn 1.0;\n}\nfloat project_size_at_latitude(float meters, float lat) {\nreturn meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\nreturn meters * project.commonUnitsPerMeter.z * project_size();\n}\nvec2 project_size(vec2 meters) {\nreturn meters * project.commonUnitsPerMeter.xy * project_size();\n}\nvec3 project_size(vec3 meters) {\nreturn meters * project.commonUnitsPerMeter * project_size();\n}\nvec4 project_size(vec4 meters) {\nreturn vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\nvec3 uz = normalize(up);\nvec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\nvec3 uy = cross(uz, ux);\nreturn mat3(ux, uy, uz);\n}\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\ntransform = project_get_orientation_matrix(commonPosition);\nreturn true;\n}\nreturn false;\n}\nvec3 project_normal(vec3 vector) {\nvec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);\nvec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\nmat3 rotation;\nif (project_needs_rotation(geometry.position.xyz, rotation)) {\nn = rotation * n;\n}\nreturn n;\n}\nvec4 project_offset_(vec4 offset) {\nfloat dy = offset.y;\nvec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\nreturn vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\nfloat x = lnglat.x;\nif (project.wrapLongitude) {\nx = mod(x + 180., 360.0) - 180.;\n}\nfloat y = clamp(lnglat.y, -89.9, 89.9);\nreturn vec2(\nradians(x) + PI,\nPI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n) * WORLD_SCALE;\n}\nvec3 project_globe_(vec3 lnglatz) {\nfloat lambda = radians(lnglatz.x);\nfloat phi = radians(lnglatz.y);\nfloat cosPhi = cos(phi);\nfloat D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\nreturn vec3(\nsin(lambda) * cosPhi,\n-cos(lambda) * cosPhi,\nsin(phi)\n) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\nvec4 position_world = project.modelMatrix * position;\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_mercator_(position_world.xy),\nproject_size_at_latitude(position_world.z, position_world.y),\nposition_world.w\n);\n}\nif (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\nposition_world.xyz += project.coordinateOrigin;\n}\n}\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_globe_(position_world.xyz),\nposition_world.w\n);\n}\n}\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nif (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\nreturn vec4(\nproject_mercator_(position_world.xy) - project.commonOrigin.xy,\nproject_size(position_world.z),\nposition_world.w\n);\n}\n}\n}\nif (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n(project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n(project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\nposition_world.xyz -= project.coordinateOrigin;\n}\nreturn project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));\n}\nvec4 project_position(vec4 position) {\nreturn project_position(position, ZERO_64_LOW);\n}\nvec3 project_position(vec3 position, vec3 position64Low) {\nvec4 projected_position = project_position(vec4(position, 1.0), position64Low);\nreturn projected_position.xyz;\n}\nvec3 project_position(vec3 position) {\nvec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\nreturn projected_position.xyz;\n}\nvec2 project_position(vec2 position) {\nvec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\nreturn projected_position.xy;\n}\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\nreturn viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\nreturn project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\nvec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\nreturn offset * project.focalDistance;\n}\nfloat project_size_to_pixel(float meters) {\nreturn project_size(meters) * project.scale;\n}\nfloat project_size_to_pixel(float size, int unit) {\nif (unit == UNIT_METERS) return project_size_to_pixel(size);\nif (unit == UNIT_COMMON) return size * project.scale;\nreturn size;\n}\nfloat project_pixel_size(float pixels) {\nreturn pixels / project.scale;\n}\nvec2 project_pixel_size(vec2 pixels) {\nreturn pixels / project.scale;\n}\n";var a=n(28593);const l={};const c={name:"project",dependencies:[i.i,s.A],vs:r,getUniforms:function(e){return void 0===e&&(e=l),"viewport"in e?(0,a.a)(e):{}},uniformTypes:{wrapLongitude:"f32",coordinateSystem:"i32",commonUnitsPerMeter:"vec3<f32>",projectionMode:"i32",scale:"f32",commonUnitsPerWorldUnit:"vec3<f32>",commonUnitsPerWorldUnit2:"vec3<f32>",center:"vec4<f32>",modelMatrix:"mat4x4<f32>",viewProjectionMatrix:"mat4x4<f32>",viewportSize:"vec2<f32>",devicePixelRatio:"f32",focalDistance:"f32",cameraPosition:"vec3<f32>",coordinateOrigin:"vec3<f32>",commonOrigin:"vec3<f32>",pseudoMeters:"f32"}}},28593:(e,t,n)=>{n.d(t,{a:()=>g,o:()=>p});var i=n(39426),s=n(90218),o=n(8961),r=n(63190);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],h=[0,0,0],u=(0,r.A)((function(e){let{viewport:t,devicePixelRatio:n,coordinateSystem:r,coordinateOrigin:h}=e;const{projectionCenter:u,viewProjectionMatrix:g,originCommon:f,cameraPosCommon:m,shaderCoordinateOrigin:v,geospatialOrigin:y}=function(e,t,n){const{viewMatrixUncentered:o,projectionMatrix:r}=e;let{viewMatrix:c,viewProjectionMatrix:d}=e,h=a,u=a,g=e.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:v}=p(e,t,n);v&&(u=e.projectPosition(f||m),g=[g[0]-u[0],g[1]-u[1],g[2]-u[2]],u[3]=1,h=i.Z0([],u,d),c=o||c,d=s.lw([],r,c),d=s.lw([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:h,originCommon:u,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(t,r,h),b=t.getDistanceScales(),w=[t.width*n,t.height*n],_=i.Z0([],[0,0,-t.focalDistance,1],t.projectionMatrix)[3]||1,x={coordinateSystem:r,projectionMode:t.projectionMode,coordinateOrigin:v,commonOrigin:f.slice(0,3),center:u,pseudoMeters:Boolean(t._pseudoMeters),viewportSize:w,devicePixelRatio:n,focalDistance:_,commonUnitsPerMeter:b.unitsPerMeter,commonUnitsPerWorldUnit:b.unitsPerMeter,commonUnitsPerWorldUnit2:d,scale:t.scale,wrapLongitude:!1,viewProjectionMatrix:g,modelMatrix:c,cameraPosition:m};if(y){const e=t.getDistanceScales(y);switch(r){case o.rf.METER_OFFSETS:x.commonUnitsPerWorldUnit=e.unitsPerMeter,x.commonUnitsPerWorldUnit2=e.unitsPerMeter2;break;case o.rf.LNGLAT:case o.rf.LNGLAT_OFFSETS:t._pseudoMeters||(x.commonUnitsPerMeter=e.unitsPerMeter),x.commonUnitsPerWorldUnit=e.unitsPerDegree,x.commonUnitsPerWorldUnit2=e.unitsPerDegree2;break;case o.rf.CARTESIAN:x.commonUnitsPerWorldUnit=[1,1,e.unitsPerMeter[2]],x.commonUnitsPerWorldUnit2=[0,0,e.unitsPerMeter2[2]]}}return x}));function p(e,t,n){void 0===n&&(n=h),n.length<3&&(n=[n[0],n[1],0]);let i,s=n,r=!0;switch(i=t===o.rf.LNGLAT_OFFSETS||t===o.rf.METER_OFFSETS?n:e.isGeospatial?[Math.fround(e.longitude),Math.fround(e.latitude),0]:null,e.projectionMode){case o.Kx.WEB_MERCATOR:t!==o.rf.LNGLAT&&t!==o.rf.CARTESIAN||(i=[0,0,0],r=!1);break;case o.Kx.WEB_MERCATOR_AUTO_OFFSET:t===o.rf.LNGLAT?s=i:t===o.rf.CARTESIAN&&(s=[Math.fround(e.center[0]),Math.fround(e.center[1]),0],i=e.unprojectPosition(s),s[0]-=n[0],s[1]-=n[1],s[2]-=n[2]);break;case o.Kx.IDENTITY:s=e.position.map(Math.fround),s[2]=s[2]||0;break;case o.Kx.GLOBE:r=!1,i=null;break;default:r=!1}return{geospatialOrigin:i,shaderCoordinateOrigin:s,offsetMode:r}}function g(e){let{viewport:t,devicePixelRatio:n=1,modelMatrix:i=null,coordinateSystem:s=o.rf.DEFAULT,coordinateOrigin:r=h,autoWrapLongitude:a=!1}=e;s===o.rf.DEFAULT&&(s=t.isGeospatial?o.rf.LNGLAT:o.rf.CARTESIAN);const l=u({viewport:t,devicePixelRatio:n,coordinateSystem:s,coordinateOrigin:r});return l.wrapLongitude=a,l.modelMatrix=i||c,l}},30428:(e,t,n)=>{n.d(t,{A:()=>i});const i={name:"project32",dependencies:[n(97272).A],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},58662:(e,t,n)=>{n.d(t,{A:()=>a});var i=n(51020),s=n(54901);const o=["longitude","latitude","zoom","bearing","pitch"],r=["longitude","latitude","zoom"];class a extends i.A{constructor(e){void 0===e&&(e={});const t=Array.isArray(e)?e:e.transitionProps,n=Array.isArray(e)?{}:e;n.transitionProps=Array.isArray(t)?{compare:t,required:t}:t||{compare:o,required:r},super(n.transitionProps),this.opts=n}initializeProps(e,t){const n=super.initializeProps(e,t),{makeViewport:i,around:s}=this.opts;if(i&&s){const o=i(e),r=i(t),a=o.unproject(s);n.start.around=s,Object.assign(n.end,{around:r.project(a),aroundPosition:a,width:t.width,height:t.height})}return n}interpolateProps(e,t,n){const i={};for(const o of this._propsToExtract)i[o]=(0,s.Cc)(e[o]||0,t[o]||0,n);if(t.aroundPosition&&this.opts.makeViewport){const o=this.opts.makeViewport(Object.assign({},t,i));Object.assign(i,o.panByPosition(t.aroundPosition,(0,s.Cc)(e.around,t.around,n)))}return i}}},51020:(e,t,n)=>{n.d(t,{A:()=>o});var i=n(54901),s=n(95238);class o{constructor(e){const{compare:t,extract:n,required:i}=e;this._propsToCompare=t,this._propsToExtract=n||t,this._requiredProps=i}arePropsEqual(e,t){for(const n of this._propsToCompare)if(!(n in e)||!(n in t)||!(0,i.aI)(e[n],t[n]))return!1;return!0}initializeProps(e,t){const n={},i={};for(const s of this._propsToExtract)(s in e||s in t)&&(n[s]=e[s],i[s]=t[s]);return this._checkRequiredProps(n),this._checkRequiredProps(i),{start:n,end:i}}getDuration(e,t){return t.transitionDuration}_checkRequiredProps(e){this._requiredProps&&this._requiredProps.forEach((t=>{const n=e[t];(0,s.A)(Number.isFinite(n)||Array.isArray(n),t+" is required for transition")}))}}},50948:(e,t,n)=>{n.d(t,{A:()=>i});class i{constructor(e){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=e}get inProgress(){return this._inProgress}start(e){var t,n;this.cancel(),this.settings=e,this._inProgress=!0,null==(t=(n=this.settings).onStart)||t.call(n,this)}end(){var e,t;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null==(e=(t=this.settings).onEnd)||e.call(t,this))}cancel(){var e,t;this._inProgress&&(null==(e=(t=this.settings).onInterrupt)||e.call(t,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var e,t;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:e,settings:t}=this;this._handle=e.addChannel({delay:e.getTime(),duration:t.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null==(e=(t=this.settings).onUpdate)||e.call(t,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},95238:(e,t,n)=>{function i(e,t){if(!e)throw new Error(t||"deck.gl: assertion failed.")}n.d(t,{A:()=>i})},50111:(e,t,n)=>{function i(e,t,n){if(e===t)return!0;if(!n||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let s=0;s<e.length;s++)if(!i(e[s],t[s],n-1))return!1;return!0}if(Array.isArray(t))return!1;if("object"==typeof e&&"object"==typeof t){const s=Object.keys(e),o=Object.keys(t);if(s.length!==o.length)return!1;for(const r of s){if(!t.hasOwnProperty(r))return!1;if(!i(e[r],t[r],n-1))return!1}return!0}return!1}n.d(t,{b:()=>i})},13696:(e,t,n)=>{function i(e,t){return void 0===t&&(t=()=>!0),Array.isArray(e)?s(e,t,[]):t(e)?[e]:[]}function s(e,t,n){let i=-1;for(;++i<e.length;){const o=e[i];Array.isArray(o)?s(o,t,n):t(o)&&n.push(o)}return n}function o(e){let{target:t,source:n,start:i=0,count:s=1}=e;const o=n.length,r=s*o;let a=0;for(let l=i;a<o;a++)t[l++]=n[a];for(;a<r;)a<r-a?(t.copyWithin(i+a,i,i+a),a*=2):(t.copyWithin(i+a,i,i+r-a),a=r);return t}n.d(t,{B:()=>i,R:()=>o})},33698:(e,t,n)=>{n.d(t,{I:()=>a,Td:()=>r,X:()=>o});const i=[],s=[];function o(e,t,n){void 0===t&&(t=0),void 0===n&&(n=1/0);let o=i;const r={index:-1,data:e,target:[]};return e?"function"==typeof e[Symbol.iterator]?o=e:e.length>0&&(s.length=e.length,o=s):o=i,(t>0||Number.isFinite(n))&&(o=(Array.isArray(o)?o:Array.from(o)).slice(t,n),r.index=t-1),{iterable:o,objectInfo:r}}function r(e){return e&&e[Symbol.asyncIterator]}function a(e,t){const{size:n,stride:i,offset:s,startIndices:o,nested:r}=t,a=e.BYTES_PER_ELEMENT,l=i?i/a:n,c=s?s/a:0,d=Math.floor((e.length-c)/l);return(t,i)=>{let{index:s,target:a}=i;if(!o){const t=s*l+c;for(let i=0;i<n;i++)a[i]=e[t+i];return a}const h=o[s],u=o[s+1]||d;let p;if(r){p=new Array(u-h);for(let t=h;t<u;t++){const i=t*l+c;a=new Array(n);for(let t=0;t<n;t++)a[t]=e[i+t];p[t-h]=a}}else if(l===n)p=e.subarray(h*n+c,u*n+c);else{p=new e.constructor((u-h)*n);let t=0;for(let i=h;i<u;i++){const s=i*l+c;for(let i=0;i<n;i++)p[t++]=e[s+i]}}return p}}},18120:(e,t,n)=>{n.d(t,{A:()=>i});const i=new(n(85335).t)({id:"deck"})},87350:(e,t,n)=>{n.d(t,{$M:()=>o,Vl:()=>a,_Z:()=>p,cT:()=>u,on:()=>l,zi:()=>r});var i=n(81052),s=n(87597);function o(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function r(e,t){const n=e%t;return n<0?t+n:n}function a(e){return[e[12],e[13],e[14]]}function l(e){return{left:d(e[3]+e[0],e[7]+e[4],e[11]+e[8],e[15]+e[12]),right:d(e[3]-e[0],e[7]-e[4],e[11]-e[8],e[15]-e[12]),bottom:d(e[3]+e[1],e[7]+e[5],e[11]+e[9],e[15]+e[13]),top:d(e[3]-e[1],e[7]-e[5],e[11]-e[9],e[15]-e[13]),near:d(e[3]+e[2],e[7]+e[6],e[11]+e[10],e[15]+e[14]),far:d(e[3]-e[2],e[7]-e[6],e[11]-e[10],e[15]-e[14])}}const c=new s.P;function d(e,t,n,i){c.set(e,t,n);const o=c.len();return{distance:i/o,normal:new s.P(-e/o,-t/o,-n/o)}}let h;function u(e,t){const{size:n=1,startIndex:s=0}=t,o=void 0!==t.endIndex?t.endIndex:e.length,r=(o-s)/n;h=i.A.allocate(h,r,{type:Float32Array,size:2*n});let a=s,l=0;for(;a<o;){for(let t=0;t<n;t++){const i=e[a++];h[l+t]=i,h[l+t+n]=(c=i)-Math.fround(c)}l+=2*n}var c;return h.subarray(0,r*n*2)}function p(e){let t=null,n=!1;for(const i of e)i&&(t?(n||(t=[[t[0][0],t[0][1]],[t[1][0],t[1][1]]],n=!0),t[0][0]=Math.min(t[0][0],i[0][0]),t[0][1]=Math.min(t[0][1],i[0][1]),t[1][0]=Math.max(t[1][0],i[1][0]),t[1][1]=Math.max(t[1][1],i[1][1])):t=i);return t}},63190:(e,t,n)=>{function i(e,t){if(e===t)return!0;if(Array.isArray(e)){const n=e.length;if(!t||t.length!==n)return!1;for(let i=0;i<n;i++)if(e[i]!==t[i])return!1;return!0}return!1}function s(e){let t,n={};return s=>{for(const o in s)if(!i(s[o],n[o])){t=e(s),n=s;break}return t}}n.d(t,{A:()=>s})},50364:(e,t,n)=>{n.d(t,{A:()=>a});var i=n(33698),s=n(81052),o=n(95238),r=n(26839);class a{constructor(e){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:t={}}=e;this.typedArrayManager=s.A,this.attributes={},this._attributeDefs=t,this.opts=e,this.updateGeometry(e)}updateGeometry(e){Object.assign(this.opts,e);const{data:t,buffers:n={},getGeometry:i,geometryBuffer:s,positionFormat:r,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=t,this.getGeometry=i,this.positionSize=s&&s.size||("XY"===r?2:3),this.buffers=n,this.normalize=l,s&&((0,o.A)(t.startIndices),this.getGeometry=this.getGeometryFromBuffer(s),l||(n.vertexPositions=s)),this.geometryBuffer=n.vertexPositions,Array.isArray(a))for(const o of a)this._rebuildGeometry(o);else this._rebuildGeometry()}updatePartialGeometry(e){let{startRow:t,endRow:n}=e;this._rebuildGeometry({startRow:t,endRow:n})}getGeometryFromBuffer(e){const t=e.value||e;return ArrayBuffer.isView(t)?(0,i.I)(t,{size:this.positionSize,offset:e.offset,stride:e.stride,startIndices:this.data.startIndices}):null}_allocate(e,t){const{attributes:n,buffers:i,_attributeDefs:s,typedArrayManager:o}=this;for(const r in s)if(r in i)o.release(n[r]),n[r]=null;else{const i=s[r];i.copy=t,n[r]=o.allocate(n[r],e,i)}}_forEachGeometry(e,t,n){const{data:s,getGeometry:o}=this,{iterable:r,objectInfo:a}=(0,i.X)(s,t,n);for(const i of r){a.index++;e(o?o(i,a):null,a.index)}}_rebuildGeometry(e){if(!this.data)return;let{indexStarts:t,vertexStarts:n,instanceCount:i}=this;const{data:s,geometryBuffer:o}=this,{startRow:a=0,endRow:l=1/0}=e||{},c={};if(e||(t=[0],n=[0]),this.normalize||!o)this._forEachGeometry(((e,t)=>{const i=e&&this.normalizeGeometry(e);c[t]=i,n[t+1]=n[t]+(i?this.getGeometrySize(i):0)}),a,l),i=n[n.length-1];else if(n=s.startIndices,i=n[s.length]||0,ArrayBuffer.isView(o))i=i||o.length/this.positionSize;else if(o instanceof r.h){const e=4*this.positionSize;i=i||o.byteLength/e}else if(o.buffer){const e=o.stride||4*this.positionSize;i=i||o.buffer.byteLength/e}else if(o.value){const e=o.value,t=o.stride/e.BYTES_PER_ELEMENT||this.positionSize;i=i||e.length/t}this._allocate(i,Boolean(e)),this.indexStarts=t,this.vertexStarts=n,this.instanceCount=i;const d={};this._forEachGeometry(((e,s)=>{const o=c[s]||e;d.vertexStart=n[s],d.indexStart=t[s];const r=s<n.length-1?n[s+1]:i;d.geometrySize=r-n[s],d.geometryIndex=s,this.updateGeometryAttributes(o,d)}),a,l),this.vertexCount=t[t.length-1]}}},81052:(e,t,n)=>{n.d(t,{A:()=>i});const i=new class{constructor(e){void 0===e&&(e={}),this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(e)}setOptions(e){Object.assign(this.opts,e)}allocate(e,t,n){let{size:i=1,type:s,padding:o=0,copy:r=!1,initialize:a=!1,maxCount:l}=n;const c=s||e&&e.constructor||Float32Array,d=t*i+o;if(ArrayBuffer.isView(e)){if(d<=e.length)return e;if(d*e.BYTES_PER_ELEMENT<=e.buffer.byteLength)return new c(e.buffer,0,d)}let h=1/0;l&&(h=l*i+o);const u=this._allocate(c,d,a,h);return e&&r?u.set(e):a||u.fill(0,0,4),this._release(e),u}release(e){this._release(e)}_allocate(e,t,n,i){let s=Math.max(Math.ceil(t*this.opts.overAlloc),1);s>i&&(s=i);const o=this._pool,r=e.BYTES_PER_ELEMENT*s,a=o.findIndex((e=>e.byteLength>=r));if(a>=0){const t=new e(o.splice(a,1)[0],0,s);return n&&t.fill(0),t}return new e(s)}_release(e){if(!ArrayBuffer.isView(e))return;const t=this._pool,{buffer:n}=e,{byteLength:i}=n,s=t.findIndex((e=>e.byteLength>=i));s<0?t.push(n):(s>0||t.length<this.opts.poolSize)&&t.splice(s,0,n),t.length>this.opts.poolSize&&t.shift()}}},43976:(e,t,n)=>{n.d(t,{A:()=>m});var i=n(18120),s=n(87350),o=n(31886),r=n(54901),a=n(87597),l=n(90218),c=n(24697),d=n(8961);const h=Math.PI/180,u=(0,s.$M)(),p=[0,0,0],g={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class f{constructor(e){void 0===e&&(e={}),this._frustumPlanes={},this.id=e.id||this.constructor.displayName||"viewport",this.x=e.x||0,this.y=e.y||0,this.width=e.width||1,this.height=e.height||1,this.zoom=e.zoom||0,this.padding=e.padding,this.distanceScales=e.distanceScales||g,this.focalDistance=e.focalDistance||1,this.position=e.position||p,this.modelMatrix=e.modelMatrix||null;const{longitude:t,latitude:n}=e;this.isGeospatial=Number.isFinite(n)&&Number.isFinite(t),this._initProps(e),this._initMatrices(e),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?d.Kx.WEB_MERCATOR:d.Kx.WEB_MERCATOR_AUTO_OFFSET:d.Kx.IDENTITY}equals(e){return e instanceof f&&(this===e||e.width===this.width&&e.height===this.height&&e.scale===this.scale&&(0,r.aI)(e.projectionMatrix,this.projectionMatrix)&&(0,r.aI)(e.viewMatrix,this.viewMatrix))}project(e,t){let{topLeft:n=!0}=void 0===t?{}:t;const i=this.projectPosition(e),s=(0,c.VJ)(i,this.pixelProjectionMatrix),[o,r]=s,a=n?r:this.height-r;return 2===e.length?[o,a]:[o,a,s[2]]}unproject(e,t){let{topLeft:n=!0,targetZ:i}=void 0===t?{}:t;const[s,o,r]=e,a=n?o:this.height-o,l=i&&i*this.distanceScales.unitsPerMeter[2],d=(0,c.xJ)([s,a,r],this.pixelUnprojectionMatrix,l),[h,u,p]=this.unprojectPosition(d);return Number.isFinite(r)?[h,u,p]:Number.isFinite(i)?[h,u,i]:[h,u]}projectPosition(e){const[t,n]=this.projectFlat(e);return[t,n,(e[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(e){const[t,n]=this.unprojectFlat(e);return[t,n,(e[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(e){if(this.isGeospatial){const t=(0,c.Gw)(e);return t[1]=(0,r.qE)(t[1],-318,830),t}return e}unprojectFlat(e){return this.isGeospatial?(0,c.iV)(e):e}getBounds(e){void 0===e&&(e={});const t={targetZ:e.z||0},n=this.unproject([0,0],t),i=this.unproject([this.width,0],t),s=this.unproject([0,this.height],t),o=this.unproject([this.width,this.height],t);return[Math.min(n[0],i[0],s[0],o[0]),Math.min(n[1],i[1],s[1],o[1]),Math.max(n[0],i[0],s[0],o[0]),Math.max(n[1],i[1],s[1],o[1])]}getDistanceScales(e){return e&&this.isGeospatial?(0,c.nI)({longitude:e[0],latitude:e[1],highPrecision:!0}):this.distanceScales}containsPixel(e){let{x:t,y:n,width:i=1,height:s=1}=e;return t<this.x+this.width&&this.x<t+i&&n<this.y+this.height&&this.y<n+s}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,s.on)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(e,t){return null}_initProps(e){const t=e.longitude,n=e.latitude;this.isGeospatial&&(Number.isFinite(e.zoom)||(this.zoom=(0,c.fO)({latitude:n})+Math.log2(this.focalDistance)),this.distanceScales=e.distanceScales||(0,c.nI)({latitude:n,longitude:t}));const i=Math.pow(2,this.zoom);this.scale=i;const{position:s,modelMatrix:r}=e;let l=p;if(s&&(l=r?new o.k(r).transformAsVector(s,[]):s),this.isGeospatial){const e=this.projectPosition([t,n,0]);this.center=new a.P(l).scale(this.distanceScales.unitsPerMeter).add(e)}else this.center=this.projectPosition(l)}_initMatrices(e){const{viewMatrix:t=u,projectionMatrix:n=null,orthographic:c=!1,fovyRadians:d,fovy:p=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:v=1}=e;this.viewMatrixUncentered=t,this.viewMatrix=(new o.k).multiplyRight(t).translate(new a.P(this.center).negate()),this.projectionMatrix=n||function(e){let{width:t,height:n,orthographic:i,fovyRadians:s,focalDistance:a,padding:l,near:c,far:d}=e;const h=t/n,u=i?(new o.k).orthographic({fovy:s,aspect:h,focalDistance:a,near:c,far:d}):(new o.k).perspective({fovy:s,aspect:h,near:c,far:d});if(l){const{left:e=0,right:i=0,top:s=0,bottom:o=0}=l,a=(0,r.qE)((e+t-i)/2,0,t)-t/2,c=(0,r.qE)((s+n-o)/2,0,n)-n/2;u[8]-=2*a/t,u[9]+=2*c/n}return u}({width:this.width,height:this.height,orthographic:c,fovyRadians:d||p*h,focalDistance:v,padding:m,near:g,far:f});const y=(0,s.$M)();l.lw(y,y,this.projectionMatrix),l.lw(y,y,this.viewMatrix),this.viewProjectionMatrix=y,this.viewMatrixInverse=l.B8([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,s.Vl)(this.viewMatrixInverse);const b=(0,s.$M)(),w=(0,s.$M)();l.hs(b,b,[this.width/2,-this.height/2,1]),l.Tl(b,b,[1,-1,0]),l.lw(w,b,this.viewProjectionMatrix),this.pixelProjectionMatrix=w,this.pixelUnprojectionMatrix=l.B8((0,s.$M)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||i.A.warn("Pixel project matrix not invertible")()}}f.displayName="Viewport";const m=f},59073:(e,t,n)=>{n.d(t,{A:()=>c});var i=n(43976),s=n(24697),o=n(54901),r=n(31886),a=n(83588);class l extends i.A{constructor(e){void 0===e&&(e={});const{latitude:t=0,longitude:n=0,zoom:i=0,pitch:a=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,nearZ:h,farZ:u,orthographic:p=!1,projectionMatrix:g,repeat:f=!1,worldOffset:m=0,position:v,padding:y,legacyMeterSizes:b=!1}=e;let{width:w,height:_,altitude:x=1.5}=e;const P=Math.pow(2,i);let S;w=w||1,_=_||1;let C=null;if(g)x=g[5]/2,S=(0,s.Os)(x);else{let n;if(e.fovy?(S=e.fovy,x=(0,s.wZ)(S)):S=(0,s.Os)(x),y){const{top:e=0,bottom:t=0}=y;n=[0,(0,o.qE)((e+_-t)/2,0,_)-_/2]}C=(0,s.om)({width:w,height:_,scale:P,center:v&&[0,0,v[2]*(0,s.mY)(t)],offset:n,pitch:a,fovy:S,nearZMultiplier:c,farZMultiplier:d}),Number.isFinite(h)&&(C.near=h),Number.isFinite(u)&&(C.far=u)}let A=(0,s.rY)({height:_,pitch:a,bearing:l,scale:P,altitude:x});if(m){A=(new r.k).translate([512*m,0,0]).multiplyLeft(A)}super(Object.assign({},e,{width:w,height:_,viewMatrix:A,longitude:n,latitude:t,zoom:i},C,{fovy:S,focalDistance:x})),this.latitude=t,this.longitude=n,this.zoom=i,this.pitch=a,this.bearing=l,this.altitude=x,this.fovy=S,this.orthographic=p,this._subViewports=f?[]:null,this._pseudoMeters=b,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const e=this.getBounds(),t=Math.floor((e[0]+180)/360),n=Math.ceil((e[2]-180)/360);for(let i=t;i<=n;i++){const e=i?new l(Object.assign({},this,{worldOffset:i})):this;this._subViewports.push(e)}}return this._subViewports}projectPosition(e){if(this._pseudoMeters)return super.projectPosition(e);const[t,n]=this.projectFlat(e);return[t,n,(e[2]||0)*(0,s.mY)(e[1])]}unprojectPosition(e){if(this._pseudoMeters)return super.unprojectPosition(e);const[t,n]=this.unprojectFlat(e);return[t,n,(e[2]||0)/(0,s.mY)(n)]}addMetersToLngLat(e,t){return(0,s.dT)(e,t)}panByPosition(e,t){const n=(0,s.xJ)(t,this.pixelUnprojectionMatrix),i=this.projectFlat(e),o=a.WQ([],i,a.ze([],n)),r=a.WQ([],this.center,o),[l,c]=this.unprojectFlat(r);return{longitude:l,latitude:c}}getBounds(e){void 0===e&&(e={});const t=(0,s.gW)(this,e.z||0);return[Math.min(t[0][0],t[1][0],t[2][0],t[3][0]),Math.min(t[0][1],t[1][1],t[2][1],t[3][1]),Math.max(t[0][0],t[1][0],t[2][0],t[3][0]),Math.max(t[0][1],t[1][1],t[2][1],t[3][1])]}fitBounds(e,t){void 0===t&&(t={});const{width:n,height:i}=this,{longitude:o,latitude:r,zoom:a}=(0,s.Fe)(Object.assign({width:n,height:i,bounds:e},t));return new l({width:n,height:i,longitude:o,latitude:r,zoom:a})}}l.displayName="WebMercatorViewport";const c=l},63201:(e,t,n)=>{n.d(t,{A:()=>a});var i=n(49398),s=n(59073),o=n(67797);class r extends i.A{constructor(e){void 0===e&&(e={}),super(e)}getViewportType(){return s.A}get ControllerType(){return o.A}}r.displayName="MapView";const a=r},49398:(e,t,n)=>{n.d(t,{A:()=>a});const i=/([0-9]+\.?[0-9]*)(%|px)/;function s(e){switch(typeof e){case"number":return{position:e,relative:!1};case"string":const t=i.exec(e);if(t&&t.length>=3){const e="%"===t[2],n=parseFloat(t[1]);return{position:e?n/100:n,relative:e}}default:throw new Error("Could not parse position string "+e)}}function o(e,t){return e.relative?Math.round(e.position*t):e.position}var r=n(50111);class a{constructor(e){const{id:t,x:n=0,y:i=0,width:o="100%",height:r="100%",padding:a=null}=e;this.id=t||this.constructor.displayName||"view",this.props=Object.assign({},e,{id:this.id}),this._x=s(n),this._y=s(i),this._width=s(o),this._height=s(r),this._padding=a&&{left:s(a.left||0),right:s(a.right||0),top:s(a.top||0),bottom:s(a.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(e){return this===e||this.constructor===e.constructor&&(0,r.b)(this.props,e.props,2)}makeViewport(e){let{width:t,height:n,viewState:i}=e;i=this.filterViewState(i);const s=this.getDimensions({width:t,height:n});if(!s.height||!s.width)return null;return new(this.getViewportType(i))(Object.assign({},i,this.props,s))}getViewStateId(){const{viewState:e}=this.props;return"string"==typeof e?e:(null==e?void 0:e.id)||this.id}filterViewState(e){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const t=Object.assign({},e);for(const e in this.props.viewState)"id"!==e&&(t[e]=this.props.viewState[e]);return t}return e}getDimensions(e){let{width:t,height:n}=e;const i={x:o(this._x,t),y:o(this._y,n),width:o(this._width,t),height:o(this._height,n)};return this._padding&&(i.padding={left:o(this._padding.left,t),top:o(this._padding.top,n),right:o(this._padding.right,t),bottom:o(this._padding.bottom,n)}),i}get controller(){const e=this.props.controller;return e?!0===e?{type:this.ControllerType}:"function"==typeof e?{type:e}:Object.assign({type:this.ControllerType},e):null}}},34651:(e,t,n)=>{n.d(t,{A:()=>b});var i=n(3002),s=n(30428),o=n(28756),r=n(8961),a=n(72404),l=n(37072),c=n(51771),d=n(18120),h=n(25337),u=n(1746);class p extends h.V{constructor(e){const{indices:t,attributes:n}=function(e){const{radius:t,height:n=1,nradial:i=10}=e;let{vertices:s}=e;s&&(d.A.assert(s.length>=i),s=s.flatMap((e=>[e[0],e[1]])),(0,u.UD)(s,u.rJ.COUNTER_CLOCKWISE));const o=n>0,r=i+1,a=o?3*r+1:i,l=2*Math.PI/i,c=new Uint16Array(o?3*i*2:0),h=new Float32Array(3*a),p=new Float32Array(3*a);let g=0;if(o){for(let e=0;e<r;e++){const o=e*l,r=e%i,a=Math.sin(o),c=Math.cos(o);for(let e=0;e<2;e++)h[g+0]=s?s[2*r]:c*t,h[g+1]=s?s[2*r+1]:a*t,h[g+2]=(.5-e)*n,p[g+0]=s?s[2*r]:c,p[g+1]=s?s[2*r+1]:a,g+=3}h[g+0]=h[g-3],h[g+1]=h[g-2],h[g+2]=h[g-1],g+=3}for(let d=o?0:1;d<r;d++){const e=Math.floor(d/2)*Math.sign(.5-d%2),o=e*l,r=(e+i)%i,a=Math.sin(o),c=Math.cos(o);h[g+0]=s?s[2*r]:c*t,h[g+1]=s?s[2*r+1]:a*t,h[g+2]=n/2,p[g+2]=1,g+=3}if(o){let e=0;for(let t=0;t<i;t++)c[e++]=2*t+0,c[e++]=2*t+2,c[e++]=2*t+0,c[e++]=2*t+1,c[e++]=2*t+1,c[e++]=2*t+3}return{indices:c,attributes:{POSITION:{size:3,value:h},NORMAL:{size:3,value:p}}}}(e);super(Object.assign({},e,{indices:t,attributes:n}))}}const g="uniform columnUniforms {\n  float radius;\n  float angle;\n  vec2 offset;\n  bool extruded;\n  bool stroked;\n  bool isStroke;\n  float coverage;\n  float elevationScale;\n  float edgeDistance;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int radiusUnits;\n  highp int widthUnits;\n} column;\n",f={name:"column",vs:g,fs:g,uniformTypes:{radius:"f32",angle:"f32",offset:"vec2<f32>",extruded:"f32",stroked:"f32",isStroke:"f32",coverage:"f32",elevationScale:"f32",edgeDistance:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",radiusUnits:"i32",widthUnits:"i32"}},m=[0,0,0,255],v={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,flatShading:!1,getPosition:{type:"accessor",value:e=>e.position},getFillColor:{type:"accessor",value:m},getLineColor:{type:"accessor",value:m},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class y extends i.A{getShaders(){const e={},{flatShading:t}=this.props;return t&&(e.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n#define SHADER_NAME column-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\nin vec3 instancePickingColors;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec3 cameraPosition;\nout vec4 position_commonspace;\n#endif\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nvec4 color = column.isStroke ? instanceLineColors : instanceFillColors;\nmat2 rotationMatrix = mat2(cos(column.angle), sin(column.angle), -sin(column.angle), cos(column.angle));\nfloat elevation = 0.0;\nfloat strokeOffsetRatio = 1.0;\nif (column.extruded) {\nelevation = instanceElevations * (positions.z + 1.0) / 2.0 * column.elevationScale;\n} else if (column.stroked) {\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceStrokeWidths * column.widthScale, column.widthUnits),\ncolumn.widthMinPixels, column.widthMaxPixels) / 2.0;\nfloat halfOffset = project_pixel_size(widthPixels) / project_size(column.edgeDistance * column.coverage * column.radius);\nif (column.isStroke) {\nstrokeOffsetRatio -= sign(positions.z) * halfOffset;\n} else {\nstrokeOffsetRatio -= halfOffset;\n}\n}\nfloat shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\nfloat dotRadius = column.radius * column.coverage * shouldRender;\ngeometry.pickingColor = instancePickingColors;\nvec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\nvec3 centroidPosition64Low = instancePositions64Low;\nvec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + column.offset) * dotRadius;\nif (column.radiusUnits == UNIT_METERS) {\noffset = project_size(offset);\n}\nvec3 pos = vec3(offset, 0.);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\ngeometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (column.extruded && !column.isStroke) {\n#ifdef FLAT_SHADING\ncameraPosition = project.cameraPosition;\nposition_commonspace = geometry.position;\nvColor = vec4(color.rgb, color.a * layer.opacity);\n#else\nvec3 lightColor = lighting_getLightColor(color.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, color.a * layer.opacity);\n#endif\n} else {\nvColor = vec4(color.rgb, color.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\nprecision highp float;\nout vec4 fragColor;\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec3 cameraPosition;\nin vec4 position_commonspace;\n#endif\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\n#ifdef FLAT_SHADING\nif (column.extruded && !column.isStroke && !bool(picking.isActive)) {\nvec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\nfragColor.rgb = lighting_getLightColor(vColor.rgb, cameraPosition, position_commonspace.xyz, normal);\n}\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:e,modules:[s.A,t?a.w:l.J,o.A,f]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getFillColor",defaultValue:m},instanceLineColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getLineColor",defaultValue:m},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e,s=i.extensionsChanged||t.flatShading!==n.flatShading;var o;s&&(null==(o=this.state.models)||o.forEach((e=>e.destroy())),this.setState(this._getModels()),this.getAttributeManager().invalidateAll());const r=this.getNumInstances();this.state.fillModel.setInstanceCount(r),this.state.wireframeModel.setInstanceCount(r),(s||t.diskResolution!==n.diskResolution||t.vertices!==n.vertices||(t.extruded||t.stroked)!==(n.extruded||n.stroked))&&this._updateGeometry(t)}getGeometry(e,t,n){const i=new p({radius:1,height:n?2:0,vertices:t,nradial:e});let s=0;if(t)for(let o=0;o<e;o++){const n=t[o];s+=Math.sqrt(n[0]*n[0]+n[1]*n[1])/e}else s=1;return this.setState({edgeDistance:Math.cos(Math.PI/e)*s}),i}_getModels(){const e=this.getShaders(),t=this.getAttributeManager().getBufferLayouts(),n=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-fill",bufferLayout:t,isInstanced:!0})),i=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-wireframe",bufferLayout:t,isInstanced:!0}));return{fillModel:n,wireframeModel:i,models:[i,n]}}_updateGeometry(e){let{diskResolution:t,vertices:n,extruded:i,stroked:s}=e;const o=this.getGeometry(t,n,i||s);this.setState({fillVertexCount:o.attributes.POSITION.value.length/3});const r=this.state.fillModel,a=this.state.wireframeModel;r.setGeometry(o),r.setTopology("triangle-strip"),r.setIndexBuffer(null),a.setGeometry(o),a.setTopology("line-list")}draw(e){let{uniforms:t}=e;const{lineWidthUnits:n,lineWidthScale:i,lineWidthMinPixels:s,lineWidthMaxPixels:o,radiusUnits:a,elevationScale:l,extruded:c,filled:d,stroked:h,wireframe:u,offset:p,coverage:g,radius:f,angle:m}=this.props,v=this.state.fillModel,y=this.state.wireframeModel,{fillVertexCount:b,edgeDistance:w}=this.state,_={radius:f,angle:m/180*Math.PI,offset:p,extruded:c,stroked:h,coverage:g,elevationScale:l,edgeDistance:w,radiusUnits:r.p5[a],widthUnits:r.p5[n],widthScale:i,widthMinPixels:s,widthMaxPixels:o};c&&u&&(y.shaderInputs.setProps({column:Object.assign({},_,{isStroke:!0})}),y.draw(this.context.renderPass)),d&&(v.setVertexCount(b),v.shaderInputs.setProps({column:Object.assign({},_,{isStroke:!1})}),v.draw(this.context.renderPass)),!c&&h&&(v.setVertexCount(2*b/3),v.shaderInputs.setProps({column:Object.assign({},_,{isStroke:!0})}),v.draw(this.context.renderPass))}}y.layerName="ColumnLayer",y.defaultProps=v;const b=y},21410:(e,t,n)=>{n.d(t,{A:()=>b});var i=n(3002),s=n(30428),o=n(28756),r=n(8961),a=n(25337),l=n(51771),c=n(50364),d=n(1746);class h extends c.A{constructor(e){super(Object.assign({},e,{attributes:{positions:{size:3,padding:18,initialize:!0,type:e.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}}))}get(e){return this.attributes[e]}getGeometryFromBuffer(e){return this.normalize?super.getGeometryFromBuffer(e):null}normalizeGeometry(e){return this.normalize?function(e,t,n,i){let s;if(Array.isArray(e[0])){const n=e.length*t;s=new Array(n);for(let i=0;i<e.length;i++)for(let n=0;n<t;n++)s[i*t+n]=e[i][n]||0}else s=e;return n?(0,d.Mk)(s,{size:t,gridResolution:n}):i?(0,d.Iy)(s,{size:t}):s}(e,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):e}getGeometrySize(e){if(u(e)){let t=0;for(const n of e)t+=this.getGeometrySize(n);return t}const t=this.getPathLength(e);return t<2?0:this.isClosed(e)?t<3?0:t+2:t}updateGeometryAttributes(e,t){if(0!==t.geometrySize)if(e&&u(e))for(const n of e){const e=this.getGeometrySize(n);t.geometrySize=e,this.updateGeometryAttributes(n,t),t.vertexStart+=e}else this._updateSegmentTypes(e,t),this._updatePositions(e,t)}_updateSegmentTypes(e,t){const n=this.attributes.segmentTypes,i=!!e&&this.isClosed(e),{vertexStart:s,geometrySize:o}=t;n.fill(0,s,s+o),i?(n[s]=4,n[s+o-2]=4):(n[s]+=1,n[s+o-2]+=2),n[s+o-1]=4}_updatePositions(e,t){const{positions:n}=this.attributes;if(!n||!e)return;const{vertexStart:i,geometrySize:s}=t,o=new Array(3);for(let r=i,a=0;a<s;r++,a++)this.getPointOnPath(e,a,o),n[3*r]=o[0],n[3*r+1]=o[1],n[3*r+2]=o[2]}getPathLength(e){return e.length/this.positionSize}getPointOnPath(e,t,n){void 0===n&&(n=[]);const{positionSize:i}=this;t*i>=e.length&&(t+=1-e.length/i);const s=t*i;return n[0]=e[s],n[1]=e[s+1],n[2]=3===i&&e[s+2]||0,n}isClosed(e){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:t}=this,n=e.length-t;return e[0]===e[n]&&e[1]===e[n+1]&&(2===t||e[2]===e[n+2])}}function u(e){return Array.isArray(e[0])}const p="uniform pathUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float jointType;\n  float capType;\n  float miterLimit;\n  bool billboard;\n  highp int widthUnits;\n} path;\n",g={name:"path",vs:p,fs:p,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",jointType:"f32",capType:"f32",miterLimit:"f32",billboard:"f32",widthUnits:"i32"}},f=[0,0,0,255],m={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:e=>e.path},getColor:{type:"accessor",value:f},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},v={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class y extends i.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME path-layer-vertex-shader\nin vec2 positions;\nin float instanceTypes;\nin vec3 instanceStartPositions;\nin vec3 instanceEndPositions;\nin vec3 instanceLeftPositions;\nin vec3 instanceRightPositions;\nin vec3 instanceLeftPositions64Low;\nin vec3 instanceStartPositions64Low;\nin vec3 instanceEndPositions64Low;\nin vec3 instanceRightPositions64Low;\nin float instanceStrokeWidths;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nuniform float opacity;\nout vec4 vColor;\nout vec2 vCornerOffset;\nout float vMiterLength;\nout vec2 vPathPosition;\nout float vPathLength;\nout float vJointType;\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\nfloat flipIfTrue(bool flag) {\nreturn -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\nvec3 prevPoint, vec3 currPoint, vec3 nextPoint,\nvec2 width\n) {\nbool isEnd = positions.x > 0.0;\nfloat sideOfPath = positions.y;\nfloat isJoint = float(sideOfPath == 0.0);\nvec3 deltaA3 = (currPoint - prevPoint);\nvec3 deltaB3 = (nextPoint - currPoint);\nmat3 rotationMatrix;\nbool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);\nif (needsRotation) {\ndeltaA3 = deltaA3 * rotationMatrix;\ndeltaB3 = deltaB3 * rotationMatrix;\n}\nvec2 deltaA = deltaA3.xy / width;\nvec2 deltaB = deltaB3.xy / width;\nfloat lenA = length(deltaA);\nfloat lenB = length(deltaB);\nvec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\nvec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\nvec2 perpA = vec2(-dirA.y, dirA.x);\nvec2 perpB = vec2(-dirB.y, dirB.x);\nvec2 tangent = dirA + dirB;\ntangent = length(tangent) > 0. ? normalize(tangent) : perpA;\nvec2 miterVec = vec2(-tangent.y, tangent.x);\nvec2 dir = isEnd ? dirA : dirB;\nvec2 perp = isEnd ? perpA : perpB;\nfloat L = isEnd ? lenA : lenB;\nfloat sinHalfA = abs(dot(miterVec, perp));\nfloat cosHalfA = abs(dot(dirA, miterVec));\nfloat turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\nfloat cornerPosition = sideOfPath * turnDirection;\nfloat miterSize = 1.0 / max(sinHalfA, EPSILON);\nmiterSize = mix(\nmin(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\nmiterSize,\nstep(0.0, cornerPosition)\n);\nvec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n* (sideOfPath + isJoint * turnDirection);\nbool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\nbool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\nbool isCap = isStartCap || isEndCap;\nif (isCap) {\noffsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);\nvJointType = path.capType;\n} else {\nvJointType = path.jointType;\n}\nvPathLength = L;\nvCornerOffset = offsetVec;\nvMiterLength = dot(vCornerOffset, miterVec * turnDirection);\nvMiterLength = isCap ? isJoint : vMiterLength;\nvec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\nvPathPosition = vec2(\ndot(offsetFromStartOfPath, perp),\ndot(offsetFromStartOfPath, dir)\n);\ngeometry.uv = vPathPosition;\nfloat isValid = step(instanceTypes, 3.5);\nvec3 offset = vec3(offsetVec * width * isValid, 0.0);\nif (needsRotation) {\noffset = rotationMatrix * offset;\n}\nreturn offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\nif (position.w < EPSILON) {\nfloat r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\nposition = refPosition + (position - refPosition) * r;\n}\n}\nvoid main() {\ngeometry.pickingColor = instancePickingColors;\nvColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);\nfloat isEnd = positions.x;\nvec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\nvec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\nvec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\nvec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\nvec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\nvec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\ngeometry.worldPosition = currPosition;\nvec2 widthPixels = vec2(clamp(\nproject_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),\npath.widthMinPixels, path.widthMaxPixels) / 2.0);\nvec3 width;\nif (path.billboard) {\nvec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\nvec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\nvec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\nclipLine(prevPositionScreen, currPositionScreen);\nclipLine(nextPositionScreen, currPositionScreen);\nclipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\nwidth = vec3(widthPixels, 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(\nprevPositionScreen.xyz / prevPositionScreen.w,\ncurrPositionScreen.xyz / currPositionScreen.w,\nnextPositionScreen.xyz / nextPositionScreen.w,\nproject_pixel_size_to_clipspace(width.xy)\n);\nDECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\ngl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n} else {\nprevPosition = project_position(prevPosition, prevPosition64Low);\ncurrPosition = project_position(currPosition, currPosition64Low);\nnextPosition = project_position(nextPosition, nextPosition64Low);\nwidth = vec3(project_pixel_size(widthPixels), 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\ngeometry.position = vec4(currPosition + offset, 1.0);\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME path-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 vCornerOffset;\nin float vMiterLength;\nin vec2 vPathPosition;\nin float vPathLength;\nin float vJointType;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vPathPosition;\nif (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\nif (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\ndiscard;\n}\nif (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {\ndiscard;\n}\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[s.A,o.A,g]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const e=!0;this.getAttributeManager().addInstanced({vertexPositions:{size:3,vertexOffset:1,type:"float64",fp64:this.use64bitPositions(),transition:v,accessor:"getPath",update:this.calculatePositions,noAlloc:e,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:"uint8",update:this.calculateSegmentTypes,noAlloc:e},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:v,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",accessor:"getColor",transition:v,defaultValue:f},instancePickingColors:{size:4,type:"uint8",accessor:(e,t)=>{let{index:n,target:i}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:n,i)}}}),this.setState({pathTesselator:new h({fp64:this.use64bitPositions()})})}updateState(e){super.updateState(e);const{props:t,changeFlags:n}=e,i=this.getAttributeManager();if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPath)){const{pathTesselator:e}=this.state,s=t.data.attributes||{};e.updateGeometry({data:t.data,geometryBuffer:s.getPath,buffers:s,normalize:!t._pathType,loop:"loop"===t._pathType,getGeometry:t.getPath,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:n.dataChanged}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),n.dataChanged||i.invalidateAll()}var s;n.extensionsChanged&&(null==(s=this.state.model)||s.destroy(),this.state.model=this._getModel(),i.invalidateAll())}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,i=this.props.data;return i[0]&&i[0].__source&&(t.object=i.find((e=>e.__source.index===n))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{jointRounded:n,capRounded:i,billboard:s,miterLimit:o,widthUnits:a,widthScale:l,widthMinPixels:c,widthMaxPixels:d}=this.props,h=this.state.model,u={jointType:Number(n),capType:Number(i),billboard:s,widthUnits:r.p5[a],widthScale:l,miterLimit:o,widthMinPixels:c,widthMaxPixels:d};h.shaderInputs.setProps({path:u}),h.draw(this.context.renderPass)}_getModel(){return new l.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new a.V({topology:"triangle-list",attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0}))}calculatePositions(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateSegmentTypes(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("segmentTypes")}}y.defaultProps=m,y.layerName="PathLayer";const b=y},2714:(e,t,n)=>{n.d(t,{$q:()=>f,A4:()=>c,Dt:()=>l,S8:()=>u});var i=n(29469),s=n(1746);const o=s.rJ.CLOCKWISE,r=s.rJ.COUNTER_CLOCKWISE,a={isClosed:!0};function l(e){return"positions"in e?e.positions:e}function c(e){return"holeIndices"in e?e.holeIndices:null}function d(e,t,n,i,o){let r=t;const l=n.length;for(let s=0;s<l;s++)for(let t=0;t<i;t++)e[r++]=n[s][t]||0;if(!function(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]}(n))for(let s=0;s<i;s++)e[r++]=n[0][s]||0;return a.start=t,a.end=r,a.size=i,(0,s.UD)(e,o,a),r}function h(e,t,n,i,o,r,l){void 0===o&&(o=0);const c=(r=r||n.length)-o;if(c<=0)return t;let d=t;for(let s=0;s<c;s++)e[d++]=n[o+s];if(!function(e,t,n,i){for(let s=0;s<t;s++)if(e[n+s]!==e[i-t+s])return!1;return!0}(n,i,o,r))for(let s=0;s<i;s++)e[d++]=n[o+s];return a.start=t,a.end=d,a.size=i,(0,s.UD)(e,l,a),d}function u(e,t){!function(e){if(e=e&&e.positions||e,!Array.isArray(e)&&!ArrayBuffer.isView(e))throw new Error("invalid polygon")}(e);const n=[],i=[];if("positions"in e){const{positions:s,holeIndices:a}=e;if(a){let e=0;for(let l=0;l<=a.length;l++)e=h(n,e,s,t,a[l-1],a[l],0===l?o:r),i.push(e);return i.pop(),{positions:n,holeIndices:i}}e=s}if(!function(e){return Array.isArray(e[0])}(e))return h(n,0,e,t,0,n.length,o),n;if(!function(e){return e.length>=1&&e[0].length>=2&&Number.isFinite(e[0][0])}(e)){let s=0;for(const[a,l]of e.entries())s=d(n,s,l,t,0===a?o:r),i.push(s);return i.pop(),{positions:n,holeIndices:i}}return d(n,0,e,t,o),n}function p(e,t,n){const i=e.length/3;let s=0;for(let o=0;o<i;o++){const r=(o+1)%i;s+=e[3*o+t]*e[3*r+n],s-=e[3*r+t]*e[3*o+n]}return Math.abs(s/2)}function g(e,t,n,i){const s=e.length/3;for(let o=0;o<s;o++){const s=3*o,r=e[s+0],a=e[s+1],l=e[s+2];e[s+t]=r,e[s+n]=a,e[s+i]=l}}function f(e,t,n,s){let o=c(e);o&&(o=o.map((e=>e/t)));let r=l(e);const a=s&&3===t;if(n){const e=r.length;r=r.slice();const i=[];for(let s=0;s<e;s+=t){i[0]=r[s],i[1]=r[s+1],a&&(i[2]=r[s+2]);const e=n(i);r[s]=e[0],r[s+1]=e[1],a&&(r[s+2]=e[2])}}if(a){const e=p(r,0,1),t=p(r,0,2),i=p(r,1,2);if(!e&&!t&&!i)return[];e>t&&e>i||(t>i?(n||(r=r.slice()),g(r,0,2,1)):(n||(r=r.slice()),g(r,2,0,1)))}return(0,i.Ay)(r,o,t)}},39738:(e,t,n)=>{n.d(t,{A:()=>S});var i=n(3002),s=n(30428),o=n(28756),r=n(8961),a=n(51771),l=n(25337),c=n(37072),d=n(2714),h=n(50364),u=n(1746);class p extends h.A{constructor(e){const{fp64:t,IndexType:n=Uint32Array}=e;super(Object.assign({},e,{attributes:{positions:{size:3,type:t?Float64Array:Float32Array},vertexValid:{type:Uint16Array,size:1},indices:{type:n,size:1}}}))}get(e){const{attributes:t}=this;return"indices"===e?t.indices&&t.indices.subarray(0,this.vertexCount):t[e]}updateGeometry(e){super.updateGeometry(e);const t=this.buffers.indices;if(t)this.vertexCount=(t.value||t).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(e){if(this.normalize){const t=d.S8(e,this.positionSize);return this.opts.resolution?(0,u.wk)(d.Dt(t),d.A4(t),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,u.Eg)(d.Dt(t),d.A4(t),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):t}return e}getGeometrySize(e){if(g(e)){let t=0;for(const n of e)t+=this.getGeometrySize(n);return t}return d.Dt(e).length/this.positionSize}getGeometryFromBuffer(e){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(e):null}updateGeometryAttributes(e,t){if(e&&g(e))for(const n of e){const e=this.getGeometrySize(n);t.geometrySize=e,this.updateGeometryAttributes(n,t),t.vertexStart+=e,t.indexStart=this.indexStarts[t.geometryIndex+1]}else{const n=e;this._updateIndices(n,t),this._updatePositions(n,t),this._updateVertexValid(n,t)}}_updateIndices(e,t){let{geometryIndex:n,vertexStart:i,indexStart:s}=t;const{attributes:o,indexStarts:r,typedArrayManager:a}=this;let l=o.indices;if(!l||!e)return;let c=s;const h=d.$q(e,this.positionSize,this.opts.preproject,this.opts.full3d);l=a.allocate(l,s+h.length,{copy:!0});for(let d=0;d<h.length;d++)l[c++]=h[d]+i;r[n+1]=s+h.length,o.indices=l}_updatePositions(e,t){let{vertexStart:n,geometrySize:i}=t;const{attributes:{positions:s},positionSize:o}=this;if(!s||!e)return;const r=d.Dt(e);for(let a=n,l=0;l<i;a++,l++){const e=r[l*o],t=r[l*o+1],n=o>2?r[l*o+2]:0;s[3*a]=e,s[3*a+1]=t,s[3*a+2]=n}}_updateVertexValid(e,t){let{vertexStart:n,geometrySize:i}=t;const{positionSize:s}=this,o=this.attributes.vertexValid,r=e&&d.A4(e);if(e&&e.edgeTypes?o.set(e.edgeTypes,n):o.fill(1,n,n+i),r)for(let a=0;a<r.length;a++)o[n+r[a]/s-1]=0;o[n+i-1]=0}}function g(e){return Array.isArray(e)&&e.length>0&&!Number.isFinite(e[0])}const f="uniform solidPolygonUniforms {\n  bool extruded;\n  bool isWireframe;\n  float elevationScale;\n} solidPolygon;\n",m={name:"solidPolygon",vs:f,fs:f,uniformTypes:{extruded:"f32",isWireframe:"f32",elevationScale:"f32"}},v="in vec4 fillColors;\nin vec4 lineColors;\nin vec3 pickingColors;\nout vec4 vColor;\nstruct PolygonProps {\nvec3 positions;\nvec3 positions64Low;\nvec3 normal;\nfloat elevations;\n};\nvec3 project_offset_normal(vec3 vector) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\nreturn normalize(vector * project.commonUnitsPerWorldUnit);\n}\nreturn project_normal(vector);\n}\nvoid calculatePosition(PolygonProps props) {\nvec3 pos = props.positions;\nvec3 pos64Low = props.positions64Low;\nvec3 normal = props.normal;\nvec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;\ngeometry.worldPosition = props.positions;\ngeometry.pickingColor = pickingColors;\nif (solidPolygon.extruded) {\npos.z += props.elevations * solidPolygon.elevationScale;\n}\ngl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (solidPolygon.extruded) {\n#ifdef IS_SIDE_VERTEX\nnormal = project_offset_normal(normal);\n#else\nnormal = project_normal(normal);\n#endif\ngeometry.normal = normal;\nvec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, colors.a * layer.opacity);\n} else {\nvColor = vec4(colors.rgb, colors.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",y="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader\nin vec3 vertexPositions;\nin vec3 vertexPositions64Low;\nin float elevations;\n"+v+"\nvoid main(void) {\nPolygonProps props;\nprops.positions = vertexPositions;\nprops.positions64Low = vertexPositions64Low;\nprops.elevations = elevations;\nprops.normal = vec3(0.0, 0.0, 1.0);\ncalculatePosition(props);\n}\n",b="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n"+v+"\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = vertexPositions;\npos64Low = vertexPositions64Low;\nnextPos = nextVertexPositions;\nnextPos64Low = nextVertexPositions64Low;\n#else\npos = nextVertexPositions;\npos64Low = nextVertexPositions64Low;\nnextPos = vertexPositions;\nnextPos64Low = vertexPositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = elevations * positions.y;\ncalculatePosition(props);\n}\n",w=[0,0,0,255],_={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:e=>e.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:!0},x={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class P extends i.A{getShaders(e){return super.getShaders({vs:"top"===e?y:b,fs:"#version 300 es\n#define SHADER_NAME solid-polygon-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[s.A,c.J,o.A,m]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const{viewport:e}=this.context;let{coordinateSystem:t}=this.props;const{_full3d:n}=this.props;let i;e.isGeospatial&&t===r.rf.DEFAULT&&(t=r.rf.LNGLAT),t===r.rf.LNGLAT&&(i=n?e.projectPosition.bind(e):e.projectFlat.bind(e)),this.setState({numInstances:0,polygonTesselator:new p({preproject:i,fp64:this.use64bitPositions(),IndexType:Uint32Array})});const s=this.getAttributeManager(),o=!0;s.remove(["instancePickingColors"]),s.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:o},vertexPositions:{size:3,type:"float64",stepMode:"dynamic",fp64:this.use64bitPositions(),transition:x,accessor:"getPolygon",update:this.calculatePositions,noAlloc:o,shaderAttributes:{nextVertexPositions:{vertexOffset:1}}},instanceVertexValid:{size:1,type:"uint16",stepMode:"instance",update:this.calculateVertexValid,noAlloc:o},elevations:{size:1,stepMode:"dynamic",transition:x,accessor:"getElevation"},fillColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:x,accessor:"getFillColor",defaultValue:w},lineColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:x,accessor:"getLineColor",defaultValue:w},pickingColors:{size:4,type:"uint8",stepMode:"dynamic",accessor:(e,t)=>{let{index:n,target:i}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:n,i)}}})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:n}=t,i=this.props.data;return i[0]&&i[0].__source&&(t.object=i.find((e=>e.__source.index===n))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let n=0;n<t.length;n++)t[n].__source.index===e&&this._disablePickingIndex(n);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{extruded:n,filled:i,wireframe:s,elevationScale:o}=this.props,{topModel:r,sideModel:a,wireframeModel:l,polygonTesselator:c}=this.state,d={extruded:Boolean(n),elevationScale:o,isWireframe:!1};l&&s&&(l.setInstanceCount(c.instanceCount-1),l.shaderInputs.setProps({solidPolygon:Object.assign({},d,{isWireframe:!0})}),l.draw(this.context.renderPass)),a&&i&&(a.setInstanceCount(c.instanceCount-1),a.shaderInputs.setProps({solidPolygon:d}),a.draw(this.context.renderPass)),r&&i&&(r.setVertexCount(c.vertexCount),r.shaderInputs.setProps({solidPolygon:d}),r.draw(this.context.renderPass))}updateState(e){super.updateState(e),this.updateGeometry(e);const{props:t,oldProps:n,changeFlags:i}=e,s=this.getAttributeManager();var o;(i.extensionsChanged||t.filled!==n.filled||t.extruded!==n.extruded)&&(null==(o=this.state.models)||o.forEach((e=>e.destroy())),this.setState(this._getModels()),s.invalidateAll())}updateGeometry(e){let{props:t,oldProps:n,changeFlags:i}=e;if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon)){const{polygonTesselator:e}=this.state,n=t.data.attributes||{};e.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:n.getPolygon,buffers:n,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:i.dataChanged,full3d:t._full3d}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),i.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(){const{id:e,filled:t,extruded:n}=this.props;let i,s,o;if(t){const t=this.getShaders("top");t.defines.NON_INSTANCED_MODEL=1;const n=this.getAttributeManager().getBufferLayouts({isInstanced:!1});i=new a.K(this.context.device,Object.assign({},t,{id:e+"-top",topology:"triangle-list",bufferLayout:n,isIndexed:!0,userData:{excludeAttributes:{instanceVertexValid:!0}}}))}if(n){const t=this.getAttributeManager().getBufferLayouts({isInstanced:!0});s=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-side",bufferLayout:t,geometry:new l.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,1,1,0,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}})),o=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-wireframe",bufferLayout:t,geometry:new l.V({topology:"line-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}}))}return{models:[s,o,i].filter(Boolean),topModel:i,sideModel:s,wireframeModel:o}}calculateIndices(e){const{polygonTesselator:t}=this.state;e.startIndices=t.indexStarts,e.value=t.get("indices")}calculatePositions(e){const{polygonTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateVertexValid(e){e.value=this.state.polygonTesselator.get("vertexValid")}}P.defaultProps=_,P.layerName="SolidPolygonLayer";const S=P},96864:(e,t,n)=>{n.d(t,{A:()=>v});var i=n(96540),s=n(23399);const o="undefined"!=typeof window?i.useLayoutEffect:i.useEffect;function r(e,t){for(;e;){if(e===t)return!0;e=Object.getPrototypeOf(e)}return!1}var a=n(49398),l=n(3002);const c={position:"absolute",zIndex:-1};function d(e,t){if("function"==typeof e)return e(t);if(Array.isArray(e))return e.map((e=>d(e,t)));if(h(e)){if(null==(n=e.props)?void 0:n.mapStyle)return t.style=c,(0,i.cloneElement)(e,t);if(function(e){const t=e.type;return t&&t.deckGLViewProps}(e))return(0,i.cloneElement)(e,t)}var n;return e}function h(e){return e&&"object"==typeof e&&"type"in e||!1}function u(e){if("function"==typeof e)return(0,i.createElement)(a.A,{},e);if(Array.isArray(e))return e.map(u);if(h(e)){if(e.type===i.Fragment)return u(e.props.children);if(r(e.type,a.A))return e}return e}const p=(0,i.createContext)();const g={mixBlendMode:null};function f(e){e.redrawReason&&(e.deck._drawLayers(e.redrawReason),e.redrawReason=null)}function m(e,t){const[n,c]=(0,i.useState)(0),m=(0,i.useRef)({control:null,version:n,forceUpdate:()=>c((e=>e+1))}).current,v=(0,i.useRef)(null),y=(0,i.useRef)(null),b=(0,i.useMemo)((()=>function(e){let{children:t,layers:n=[],views:s=null}=e;const o=[],c=[],d={};return i.Children.forEach(u(t),(e=>{if(h(e)){const t=e.type;if(r(t,l.A)){const n=function(e,t){const n={},i=e.defaultProps||{};for(const s in t)i[s]!==t[s]&&(n[s]=t[s]);return new e(n)}(t,e.props);c.push(n)}else o.push(e);if(r(t,a.A)&&t!==a.A&&e.props.id){const n=new t(e.props);d[n.id]=n}}else e&&o.push(e)})),Object.keys(d).length>0&&(Array.isArray(s)?s.forEach((e=>{d[e.id]=e})):s&&(d[s.id]=s),s=Object.values(d)),n=c.length>0?[...c,...n]:n,{layers:n,children:o,views:s}}(e)),[e.layers,e.views,e.children]);let w=!0;const _=t=>w&&e.viewState?(m.viewStateUpdateRequested=t,null):(m.viewStateUpdateRequested=null,null==e.onViewStateChange?void 0:e.onViewStateChange(t)),x=t=>{w?m.interactionStateUpdateRequested=t:(m.interactionStateUpdateRequested=null,null==e.onInteractionStateChange||e.onInteractionStateChange(t))},P=(0,i.useMemo)((()=>{const t=Object.assign({widgets:[]},e,{style:null,width:"100%",height:"100%",parent:v.current,canvas:y.current,layers:b.layers,views:b.views,onViewStateChange:_,onInteractionStateChange:x});return delete t._customRender,m.deck&&m.deck.setProps(t),t}),[e]);(0,i.useEffect)((()=>{const t=e.Deck||s.A;return m.deck=function(e,t,n){const i=new t(Object.assign({},n,{_customRender:t=>{e.redrawReason=t;const n=i.getViewports();e.lastRenderedViewports!==n?e.forceUpdate():f(e)}}));return i}(m,t,Object.assign({},P,{parent:v.current,canvas:y.current})),()=>{var e;return null==(e=m.deck)?void 0:e.finalize()}}),[]),o((()=>{f(m);const{viewStateUpdateRequested:e,interactionStateUpdateRequested:t}=m;e&&_(e),t&&x(t)})),(0,i.useImperativeHandle)(t,(()=>function(e){return{get deck(){return e.deck},pickObject:t=>e.deck.pickObject(t),pickMultipleObjects:t=>e.deck.pickMultipleObjects(t),pickObjects:t=>e.deck.pickObjects(t)}}(m)),[]);const S=m.deck&&m.deck.isInitialized?m.deck.getViewports():void 0,{ContextProvider:C,width:A="100%",height:M="100%",id:T,style:E}=e,{containerStyle:j,canvasStyle:I}=(0,i.useMemo)((()=>function(e){let{width:t,height:n,style:i}=e;const s={position:"absolute",zIndex:0,left:0,top:0,width:t,height:n},o={left:0,top:0};if(i)for(const r in i)r in g?o[r]=i[r]:s[r]=i[r];return{containerStyle:s,canvasStyle:o}}({width:A,height:M,style:E})),[A,M,E]);if(!m.viewStateUpdateRequested&&m.lastRenderedViewports===S||m.version!==n){m.lastRenderedViewports=S,m.version=n;const e=function(e){let{children:t,deck:n,ContextProvider:s=p.Provider}=e;const{viewManager:o}=n||{};if(!o||!o.views.length)return[];const l={},c=o.views[0].id;for(const i of t){let e=c,t=i;h(i)&&r(i.type,a.A)&&(e=i.props.id||c,t=i.props.children);const n=o.getViewport(e),s=o.getViewState(e);if(n){s.padding=n.padding;const{x:i,y:o,width:r,height:a}=n;t=d(t,{x:i,y:o,width:r,height:a,viewport:n,viewState:s}),l[e]||(l[e]={viewport:n,children:[]}),l[e].children.push(t)}}return Object.keys(l).map((e=>{const{viewport:t,children:o}=l[e],{x:r,y:a,width:c,height:d}=t,h={position:"absolute",left:r,top:a,width:c,height:d},u="view-"+e,p=(0,i.createElement)("div",{key:u,id:u,style:h},...o),g={deck:n,viewport:t,container:n.canvas.offsetParent,eventManager:n.eventManager,onViewStateChange:t=>{t.viewId=e,n._onViewStateChange(t)},widgets:[]},f="view-"+e+"-context";return(0,i.createElement)(s,{key:f,value:g},p)}))}({children:b.children,deck:m.deck,ContextProvider:C}),t=(0,i.createElement)("canvas",{key:"canvas",id:T||"deckgl-overlay",ref:y,style:I});m.control=(0,i.createElement)("div",{id:(T||"deckgl")+"-wrapper",ref:v,style:j},[t,e])}return w=!1,m.control}const v=i.forwardRef(m)}}]);